{"version":3,"sources":["webpack:///./~/vega/src/core/View.js","webpack:///./~/datalib/src/aggregate/collector.js","webpack:///./~/vega-lite/src/shorthand.js","webpack:///./~/vega-scenegraph/src/path/arc.js","webpack:///./~/vega/src/transforms/Sort.js","webpack:///./~/vega-lite/src/compile/mark/mark.js","webpack:///./~/d3-format/build/d3-format.js","webpack:///./~/vega-scenegraph/src/util/Gradient.js","webpack:///./~/vega-lite/src/compile/data/filter.js","webpack:///./~/datalib/src/aggregate/measures.js","webpack:///./~/vega-scenegraph/src/render/canvas/CanvasHandler.js","webpack:///./~/vega/src/transforms/Voronoi.js","webpack:///./~/vega-dataflow/src/Node.js","webpack:///./~/vega-scenegraph/src/util/scene.js","webpack:///./~/vega-scenegraph/src/util/text.js","webpack:///./~/vega/src/transforms/Aggregate.js","webpack:///./~/datalib/src/accessor.js","webpack:///./~/vega/src/transforms/Transform.js","webpack:///./~/vega-expression/src/codegen.js","webpack:///./~/vega/src/transforms/Pie.js","webpack:///./~/datalib/src/import/load.js","webpack:///./~/vega/src/transforms/CountPattern.js","webpack:///./~/vega/src/parse/streams.js","webpack:///./~/vega-lite/src/compile/data/timeunit.js","webpack:///./~/vega-lite/src/vega.schema.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/path.js","webpack:///./~/vega-scenegraph/src/util/BoundsContext.js","webpack:///./~/vega/src/core/config.js","webpack:///./~/vega-lite/src/compile/mark/rule.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/image.js","webpack:///./~/vega/src/parse/marks.js","webpack:///./~/vega-scenegraph/src/render/svg/index.js","webpack:///./~/vega-scenegraph/src/render/svg/SVGStringRenderer.js","webpack:///./~/vega-dataflow/src/Graph.js","webpack:///./~/vega/src/transforms/Treemap.js","webpack:///./~/vega-dataflow/src/Collector.js","webpack:///./~/vega/src/scene/GroupBuilder.js","webpack:///./~/vega/src/transforms/Filter.js","webpack:///./~/vega-scenegraph/src/util/bound.js","webpack:///./~/vega/src/transforms/index.js","webpack:///./~/vega/src/scene/legend.js","webpack:///./~/vega/src/core/schema.js","webpack:///./~/vega-dataflow/src/Dependencies.js","webpack:///./~/vega/src/parse/transforms.js","webpack:///./~/vega-lite/src/spec.js","webpack:///./~/vega-lite/src/bin.js","webpack:///./~/vega-lite/src/scale.js","webpack:///./~/vega-lite/src/compile/mark/text.js","webpack:///./~/vega/src/transforms/Wordcloud.js","webpack:///./~/datalib/src/format.js","webpack:///./~/vega-expression/src/parser.js","webpack:///./~/vega-lite/src/compile/mark/line.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/rect.js","webpack:///./~/vega-lite/src/compile/axis.js","webpack:///./~/vega-dataflow/src/index.js","webpack:///./~/vega-lite/src/compile/facet.js","webpack:///./~/vega-logging/index.js","webpack:///./~/vega-dataflow/src/Signal.js","webpack:///./~/vega-dataflow/src/Heap.js","webpack:///./~/vega-scenegraph/src/index.js","webpack:///./~/vega/src/scene/Transition.js","webpack:///./~/vega/src/transforms/screen.js","webpack:///./~/vega-expression/src/constants.js","webpack:///./~/vega/src/transforms/Fold.js","webpack:///./~/vega-lite/src/compile/common.js","webpack:///./~/vega/src/scene/Scale.js","webpack:///./~/datalib/package.json","webpack:///./~/d3-cloud/index.js","webpack:///./~/vega/src/parse/padding.js","webpack:///./~/vega/src/parse/data.js","webpack:///./~/vega-lite/src/channel.js","webpack:///./~/vega/src/transforms/Impute.js","webpack:///./~/vega/src/core/Model.js","webpack:///./~/vega-lite/src/config.js","webpack:///./~/vega-lite/src/compile/data/summary.js","webpack:///./~/vega-lite/src/encoding.js","webpack:///./~/vega/src/scene/visit.js","webpack:///./~/vega/src/transforms/Facetor.js","webpack:///./~/vega-embed/src/post.js","webpack:///./~/vega/src/transforms/Bin.js","webpack:///./~/vega/src/parse/signals.js","webpack:///./~/datalib/~/d3-dsv/build/d3-dsv.js","webpack:///./~/vega-lite/src/compile/mark/bar.js","webpack:///./~/vega/src/parse/mark.js","webpack:///./~/vega/src/transforms/Hierarchy.js","webpack:///./~/vega-lite/src/compile/scale.js","webpack:///./~/vega/src/transforms/Formula.js","webpack:///./~/vega/src/parse/expr.js","webpack:///./~/vega/src/parse/index.js","webpack:///./~/vega/src/transforms/Facet.js","webpack:///./~/vega-lite/src/validate.js","webpack:///./~/vega-lite/src/compile/data/data.js","webpack:///./~/vega-scenegraph/src/render/Handler.js","webpack:///./~/vega/src/scene/Builder.js","webpack:///./~/vega/src/parse/axes.js","webpack:///./~/vega-scenegraph/src/render/index.js","webpack:///./~/vega-scenegraph/src/util/canvas.js","webpack:///./~/vega-lite/src/type.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/text.js","webpack:///./~/vega-lite/src/compile/layer.js","webpack:///./~/vega-lite/src/compile/mark/tick.js","webpack:///./~/vega-event-selector/index.js","webpack:///./~/vega/src/scene/Encoder.js","webpack:///./~/vega-lite/src/compile/layout.js","webpack:///./~/datalib/src/import/read.js","webpack:///./~/vega-embed/src/embed.js","webpack:///./~/datalib/src/generate.js","webpack:///./~/vega/src/util/theme-val.js","webpack:///./~/vega/index.js","webpack:///./~/datalib/src/import/formats/topojson.js","webpack:///./~/vega-lite/src/util.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/group.js","webpack:///./~/vega-lite/src/legend.js","webpack:///./~/d3/d3.js","webpack:///./~/vega-scenegraph/src/render/Renderer.js","webpack:///./~/d3-time/build/d3-time.js","webpack:///./~/vega/src/transforms/BatchTransform.js","webpack:///./~/vega-scenegraph/src/path/render.js","webpack:///./~/d3-time-format/build/d3-time-format.js","webpack:///./~/vega-lite/src/axis.js","webpack:///./~/vega/src/transforms/Geo.js","webpack:///./~/datalib/src/import/formats/json.js","webpack:///./~/vega-scenegraph/src/path/parse.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/line.js","webpack:///./~/vega/src/transforms/Lookup.js","webpack:///./~/vega/src/transforms/Treeify.js","webpack:///./~/vega-dataflow/src/ChangeSet.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/arc.js","webpack:///./~/vega-lite/src/stack.js","webpack:///./~/vega/src/transforms/Parameter.js","webpack:///./~/vega/src/parse/background.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/util.js","webpack:///./~/datalib/src/import/type.js","webpack:///./~/datalib/src/import/readers.js","webpack:///./~/vega-dataflow/src/Tuple.js","webpack:///./~/vega-lite/src/aggregate.js","webpack:///./~/vega/src/parse/properties.js","webpack:///./~/vega-lite/src/compile/data/formatparse.js","webpack:///./~/vega/src/util/format.js","webpack:///./~/vega-scenegraph/src/util/Item.js","webpack:///./~/vega-lite/src/mark.js","webpack:///./~/vega-lite/src/compile/model.js","webpack:///./~/vega-lite/src/compile/data/source.js","webpack:///./~/vega-expression/src/index.js","webpack:///./~/datalib/src/import/formats/treejson.js","webpack:///./~/vega/src/transforms/Cross.js","webpack:///./~/vega-lite/src/compile/legend.js","webpack:///./~/d3-dispatch/src/dispatch.js","webpack:///./~/vega-lite/src/compile/mark/area.js","webpack:///./~/vega-lite/src/compile/data/timeunitdomain.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/index.js","webpack:///./~/vega-lite/src/compile/data/stackscale.js","webpack:///./~/vega/src/scene/axis.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/area.js","webpack:///./~/datalib/src/aggregate/groupby.js","webpack:///./~/vega-scenegraph/src/util/Bounds.js","webpack:///./~/vega-scenegraph/src/render/svg/SVGRenderer.js","webpack:///./~/datalib/src/time.js","webpack:///./~/datalib/src/import/formats/index.js","webpack:///./~/vega-lite/src/compile/data/bin.js","webpack:///./~/topojson/build/topojson.js","webpack:///./~/datalib/src/format-tables.js","webpack:///./~/vega-expression/src/functions.js","webpack:///./~/vega-lite/src/fielddef.js","webpack:///./~/vega-scenegraph/src/render/canvas/index.js","webpack:///./~/vega/src/core/HeadlessView.js","webpack:///./~/vega-lite/src/compile/data/formula.js","webpack:///./~/vega-scenegraph/src/render/canvas/CanvasRenderer.js","webpack:///./~/vega/src/transforms/Force.js","webpack:///./~/datalib/src/import/formats/dsv.js","webpack:///./~/vega-scenegraph/src/path/index.js","webpack:///./~/datalib/src/bins/bins.js","webpack:///./~/vega-lite/src/compile/config.js","webpack:///./~/datalib/src/bins/histogram.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/rule.js","webpack:///./~/vega/src/parse/modify.js","webpack:///./~/vega/src/transforms/LinkPath.js","webpack:///./~/vega-lite/src/compile/mark/point.js","webpack:///./~/vega-embed/src/parameter.js","webpack:///./~/vega-scenegraph/src/render/svg/marks.js","webpack:///./~/vega/src/scene/Bounder.js","webpack:///./~/vega-scenegraph/src/util/dom.js","webpack:///./~/vega/src/transforms/GeoPath.js","webpack:///./~/vega-lite/src/compile/data/nullfilter.js","webpack:///./~/datalib/src/aggregate/aggregator.js","webpack:///./~/datalib/src/stats.js","webpack:///./~/vega/src/util/index.js","webpack:///./~/vega/src/parse/legends.js","webpack:///./~/vega-lite/src/compile/data/colorrank.js","webpack:///./~/vega-lite/src/compile/time.js","webpack:///./~/vega/src/transforms/Stack.js","webpack:///./~/vega-lite/src/vl.js","webpack:///./~/vega-lite/src/data.js","webpack:///./~/vega-dataflow/src/DataSource.js","webpack:///./~/vega/src/transforms/Rank.js","webpack:///./~/vega-lite/src/sort.js","webpack:///./~/datalib/src/template.js","webpack:///./~/vega/src/parse/predicates.js","webpack:///./~/vega/src/parse/spec.js","webpack:///./~/vega-lite/src/compile/data/nonpositivenullfilter.js","webpack:///./~/vega-scenegraph/src/render/svg/SVGHandler.js","webpack:///./~/vega-lite/src/compile/compile.js","webpack:///./~/vega-lite/src/timeunit.js","webpack:///./~/datalib/src/util.js","webpack:///./~/vega-scenegraph/src/util/ImageLoader.js","webpack:///./~/vega-scenegraph/src/render/canvas/marks/symbol.js","webpack:///./~/vega-lite/src/compile/unit.js","webpack:///./~/vega-scenegraph/src/util/svg.js","webpack:///./~/datalib/src/index.js"],"names":["d3","__webpack_require__","dl","df","scene","sg","render","bound","log","Deps","Dependencies","parseStreams","Encoder","Transition","View","el","width","height","this","_el","_model","_width","__width","_height","__height","_bgcolor","_cursor","_autopad","_padding","top","left","bottom","right","_viewport","_renderer","_handler","_streamer","_skipSignals","_changeset","_repaint","_renderers","_io","_api","prototype","streaming","src","view","ds","data","error","listener","pipeline","streamer","api","insert","vals","duplicate","addListener","update","apply","arguments","remove","values","model","length","Node","_rank","ChangeSet","create","v","isString","call","isObject","keys","forEach","k","VIEW_SIGNALS","toMap","setSignal","name","value","cs","signal","signals","reflow","skip","key","m","SIGNALS","initialize","_strict","background","bgcolor","padding","pad","resize","autopad","opt","b","lb","s","legends","items","legendItems","i","len","mark","bounds","add","x1","x2","inset","config","autopadInset","l","Math","ceil","t","y1","r","y2","max","reset","props","viewport","size","renderer","type","Error","_build","prevHandler","w","h","bg","parentNode","select","append","attr","style","node","canvas","Renderer","RETINA","retina","load","Handler","handlers","on","handler","_detach","destroy","trans","duration","ease","undefined","request","built","_renderNode","router","evaluate","input","debug","start","dirty","_dirty","listeners","propagate","disconnect","fire","toImageURL","svg","string","ren","blob","Blob","window","URL","createObjectURL","toDataURL","onSignal","off","offSignal","factory","HeadlessView","defs","hover","evt","item","hasPropertySet","cursor","body","default","module","exports","util","stats","REM","Collector","_add","_rem","_key","_last","proto","push","rem","_get","j","n","a","x","Array","hasOwnProperty","count","map","extent","get","_ext","index","argmin","argmax","min","Infinity","quartile","_q","q1","q2","q3","aggregate_1","timeunit_1","type_1","vlEncoding","mark_1","shortenEncoding","encoding","fieldDef","channel","ASSIGN","shortenFieldDef","join","DELIM","parseEncoding","encodingShorthand","split","reduce","e","enctype","trim","fieldDefShorthand","parseFieldDef","aggregate","FUNC","timeUnit","bin","field","TYPE","SHORT_TYPE","TYPE_FROM_SHORT_TYPE","AGGREGATE_OPS","indexOf","substr","toString","AggregateOp","COUNT","TIMEUNITS","tu","shorten","spec","parse","shorthand","shift","Mark","shortenFieldDefs","fieldDefs","delim","segmentCache","bezierCache","segments","y","rx","ry","large","sweep","rotateX","ox","oy","th","PI","sin_th","sin","cos_th","cos","px","py","pl","abs","sqrt","a00","a01","a10","a11","x0","y0","sfactor_sq","sfactor","xc","yc","th0","atan2","th_arc","segs","result","th2","th3","bezier","params","cx","cy","th1","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","x3","y3","cache","Transform","Sort","graph","init","addParameters","by","Object","constructor","transform","mod","sort","comparator","param","schema","$schema","title","description","properties","enum","oneOf","required","channel_1","encoding_1","fielddef_1","scale_1","util_1","area_1","bar_1","common_1","line_1","point_1","rule_1","text_1","tick_1","markCompiler","area","bar","line","point","text","tick","rule","circle","square","sortBy","has","ORDER","channelDef","order","sortField","stackTransforms","impute","stackFields","stack","stackByFields","STACK_GROUP_CHANNELS","fields","channelEncoding","isArray","scale","binSuffix","ScaleType","ORDINAL","fieldChannel","groupby","orderby","groupbyChannel","method","stackTransform","sortby","valName","output","end","offset","parseMark","contains","LINE","AREA","isFaceted","parent","isFacet","dataFrom","dataTable","details","COLOR","DETAIL","OPACITY","SHAPE","pathMarks","markType","from","extend","PATH","path","orient","Y","X","sortPathBy","facetTransform","concat","group","marks","parsePathMark","TEXT","applyColorToBackground","LABEL","labels","labelProperties","parseNonPathMark","formatDecimal","p","toExponential","coefficient","slice","exponent","NaN","prefixExponent","formatRounded","d","formatTypes","","toPrecision","out","i1","i0","%","toFixed","round","c","f","g","o","floor","toUpperCase","re","formatSpecifier","specifier","FormatSpecifier","match","exec","fill","align","sign","symbol","zero","comma","precision","prefixes","identity","locale","grouping","thousands","substring","reverse","currency","decimal","format","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","formatPrefix","pow","defaultLocale","caES","csCZ","deCH","deDE","enCA","enGB","esES","fiFI","frCA","frFR","heIL","huHU","itIT","jaJP","koKR","mkMK","nlNL","plPL","ptBR","ruRU","svSE","zhCN","version","localeCaEs","localeCsCz","localeDeCh","localeDeDe","localeEnCa","localeEnGb","localeEnUs","localeEsEs","localeFiFi","localeFrCa","localeFrFr","localeHeIl","localeHuHu","localeItIt","localeJaJp","localeKoKr","localeMkMk","localeNlNl","localePlPl","localePtBr","localeRuRu","localeSvSe","localeZhCn","precisionFixed","step","precisionPrefix","precisionRound","gradient_id","Gradient","id","stops","stop","color","filter_1","filter","parseUnit","parseFacet","filterComponent","childDataComponent","child","component","source","parseLayer","children","compatibleSource","assemble","types","measure","set","idx","missing","valid","sum","mean","average","req","variance","variancep","stdev","stdevp","stderr","median","distinct","str","modeskew","base","agg","stream","accessor","mutator","ctr","collect","helper","Function","assign","isValid","$","DOM","CanvasHandler","_down","_touch","_first","move","moveEvent","overEvent","outEvent","_active","pickEvent","inactive","obj","_canvas","find","that","events","addEventListener","context","getContext","DOMMouseScroll","mousemove","dragover","mouseout","dragleave","mousedown","click","touchstart","changedTouches","touchmove","touchend","touch","_handlers","vegaType","_obj","eventName","splice","rect","getBoundingClientRect","pick","_scene","clientX","clientY","gx","gy","marktype","Tuple","BatchTransform","Voronoi","clipExtent","_layout","geom","voronoi","_output","mutates","batchTransform","pathname","polygons","$ref","minItems","maxItems","additionalProperties","DEPS","ALL","nodeID","Flags","Router","Produces","Mutates","Reflows","Batch","_id","_graph","rank","_qrank","_stamp","_listeners","_ids","_deps","_flags","rerank","cur","q","unshift","qrank","last","stamp","_setf","state","collector","produces","reflows","batch","dependency","deps","_names","dep","removeListener","pulse","reevaluate","prop","sets","toJSON","indent","JSON","stringify","fromJSON","json","fontSize","String","font","quote","replace","fontStyle","fontVariant","fontWeight","baseline","Facetor","Aggregate","summarize","ops","signalDeps","tx","_transform","array","as","_fields","_aggr","_input","_args","_out","_type","TYPES","TUPLE","_acc","true","VALUE","MULTI","VALID_OPS","accessors","acc","aggr","hasGetter","args","signalRef","*","dims","meas","_dims","measures","getFields","reeval","prev","clear","prev_init","_mod","_markMod","gby","val","_mark","changes","time","utc","u","$year","$func","year","unit","$month","months","$date","dates","$day","weekdays","$hour","hours","$minute","minutes","$second","seconds","$utcYear","$utcMonth","$utcDate","$utcDay","$utcHour","$utcMinute","$utcSecond","Base","Parameter","_parameters","bind","list","object","constants","functions","codegen","functionDefs","idWhiteList","idBlackList","memberDepth","FIELD_VAR","fieldVar","GLOBAL_VAR","globalVar","globals","dataSources","codegen_wrap","ast","retval","code","lookupGlobal","generator","CODEGEN_TYPES","Literal","raw","Identifier","Program","MemberExpression","computed","property","CallExpression","callee","fn","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","Property","ExpressionStatement","expression","Pie","startAngle","endAngle","mid","ones","range","minimum","maximum","protocol_re","fileProtocol","callback","loader","xhrHasResponse","responseType","response","responseText","startsWith","searchString","lastIndexOf","url","sanitizeUrl","err","useXHR","xhr","file","http","baseURL","defaultProtocol","domainWhiteList","domain","origin","document","createElement","href","host","hostname","location","parts","some","async","XMLHttpRequest","respond","status","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","setRequestHeader","headers","send","filename","fs","readFileSync","readFile","options","gzip","getBody","statusCode","CountPattern","pattern","case","stopwords","curr","_stop","_stop_re","RegExp","_pattern","_match","_counts","counts","tuples","_tuples","change","ingest","_tokenize","tok","selector","parseSignals","GATEKEEPER","EVALUATOR","vgEvent","getItem","getGroup","interactive","getXY","getX","getY","trueFn","expr","falseFn","registry","nodes","internal","external","sig","streams","sel","exp","mergedStream","preventDefault","extendEvent","datum","elt","querySelectorAll","detach","removeEventListener","mouse","event","names","def","root","vg","invoke","filters","verbose","gk","middle","gatekeeper","target","domEvent","doNotPropagate","ms","time_1","timeUnitComponent","ref","nofn","TEMPORAL","parseExpression","isUnionedDomain","isDataRefDomain","pathCache","draw","drawAll","pickPath","noop","_","beginPath","closePath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fillOpacity","stroke","strokeOpacity","strokeWidth","strokeDash","strokeDashOffset","axis","layer","ticks","axisColor","axisWidth","gridColor","gridOpacity","tickColor","tickLabelColor","tickWidth","tickSize","tickLabelFontSize","tickLabelFont","titleColor","titleFont","titleFontSize","titleFontWeight","titleOffset","titleOffsetAutoMin","titleOffsetAutoMax","titleOffsetAutoMargin","legend","margin","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20","category20b","category20c","shapes","scaleName","Y2","X2","applyColorAndOpacity","SIZE","ruleSize","intersects","image","loadImage","opac","loaded","globalAlpha","opacity","drawImage","parseProperties","parseRootMark","PROPERTIES","defaults","scales","axes","container","groupMark","allOf","visualMark","not","ImageLoader","SVG","openTag","closeTag","MARKS","SVGStringRenderer","loadConfig","_loader","_text","head","foot","_defs","clip_id","gradient","clipping","emit","ns","prefixed","styles","tag","styleProperties","class","metadata","buildDefs","all","stop-color","imageURL","attributes","mdef","nest","cssClass","markGroup","axisItems","Heap","DataSource","Signal","Graph","_data","_signals","_requestedIndexes","hash","dataValues","DATA","signalValues","facet","db","requestIndex","ri","buildIndexes","jlen","getIndex","skipSignals","next","nplse","tpls","ntpls","isSg","pulses","pq","peek","pop","done","synchronize","preprocess","branch","collects","_collector","connect","ids","prev_update","reflowed","defaultRatio","Treemap","sticky","ratio","mode","layout","treemap","depth","dx","dy","idFilter","Builder","Scale","parseAxes","parseLegends","GroupBuilder","_children","_scaler","_recursor","_scales","Types","GROUP","MARK","AXIS","LEGEND","_parent","buildMarks","inherit","_def","_facetID","_scaleRefs","builder","buildAxes","SCALES","buildLegends","shape","hasMarks","hasAxes","hasLegends","inline","removeTemp","updateAxis","updateLegend","disconnectChildren","fullUpdate","_bounder","group_id","Filter","_skip","BoundsContext","Bounds","paths","drawPath","areaPath","linePath","halfpi","sqrt3","tan30","tan","g2D","bc","strokeBounds","stokeOpacity","expand","pathBounds","textMark","noRotate","instance","radius","theta","measureText","angle","rotate","includeLegends","clip","union","translate","methods","arc","ix","iy","ir","innerRadius","or","outerRadius","sa","ea","xmin","xmax","ymin","ymax","angles","itemBounds","func","DUMMY_ITEM","hasi","cross","countpattern","linkpath","fold","force","formula","geo","geopath","hierarchy","lookup","pie","treeify","wordcloud","LEGEND_ORIENT","top-left","top-right","bottom-left","bottom-right","legendPosition","predicates","ao","lw","lh","pos","_legendPositions","totalHeight","interpolate","enc","enter","encode","legendTitle","exit","spacing","formatString","tickArguments","legendStyle","symbolStyle","gradientStyle","titleStyle","labelStyle","titles","symbols","legendDef","mult","fmt","getTickFormat","z","ts","sz","points","tdata","label","ordinalDef","grad","dom","copy","gp","gh","hh","tp","q_legend_def","layoutSpec","quantDef","legendProperties","symbolProperties","gradientProperties","titleProperties","compile","refs","propset","propertySets","transforms","parseTransforms","config_1","stack_1","isExtendedUnitSpec","isSomeUnitSpec","hasRow","ROW","hasColumn","COLUMN","isUnitSpec","normalizeExtendedUnitSpec","column","row","normalizeUnitSpec","overlayConfig","overlay","overlayWithLine","AreaOverlay","LINEPOINT","overlayWithPoint","ERRORBAR","normalizeErrorBarUnitSpec","isRanged","normalizeRangedUnitSpec","isStacked","normalizeOverlay","hasX","hasY","hasX2","hasY2","normalizedSpec","layerSpec","layers","ruleSpec","RULE","lowerTickSpec","TICK","upperTickSpec","outerProps","baseSpec","omit","baseConfig","lineSpec","markConfig","defaultOverlayConfig","lineStyle","pointSpec","POINT","pointStyle","isFacetSpec","isLayerSpec","normalize","alwaysNoOcclusion","isAggregate","getCleanSpec","transpose","oldenc","autoMaxBins","NiceTime","defaultScaleConfig","textBandWidth","bandSize","useRawDomain","nominalColorRange","sequentialColorRange","shapeRange","fontSizeRange","ruleSizeRange","tickSizeRange","defaultFacetScaleConfig","prefn","applyMarkConfig","textFieldDef","xFieldDef","QUANTITATIVE","yFieldDef","sizeFieldDef","numberFormat","template","timeTemplate","shortTimeLabels","d3_cloud","Wordcloud","fontScale","spiral","wrap","tuple","_tuple","functor","words","weight","monthFull","monthAbbr","dayFull","dayAbbr","d3_time","d3_timeF","d3_numberF","numberF","timeF","tmpDate","Date","localeRef","numberLocale","timeLocale","number","numberPrefix","utcFormat","auto","rightmostDigit","linear","span","LN10","e10","e5","e2","linearRange","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","date","second","minute","hour","day","month","week","utcSecond","utcMinute","utcHour","utcDay","utcMonth","utcWeek","utcYear","abbreviate","setMonth","setDate","quarter","getMonth","utcQuarter","getUTCMonth","Token","TokenName","Syntax","PropertyKind","Messages","Regex","strict","lineNumber","lineStart","lookahead","extra","assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isLineTerminator","isIdentifierStart","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isStrictModeReservedWord","skipComment","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","UnexpectedToken","getEscapedIdentifier","scanIdentifier","getIdentifier","isKeyword","Keyword","NullLiteral","BooleanLiteral","scanPunctuator","code2","ch2","ch3","ch4","ch1","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanNumericLiteral","NumericLiteral","parseInt","scanHexLiteral","octal","scanOctalLiteral","parseFloat","scanRegExp","flags","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpBody","restore","throwErrorTolerant","scanRegExpFlags","tmp","$0","$1","InvalidRegExp","exception","testRegExp","RegularExpression","regex","collectRegex","loc","token","advance","EOF","unescaped","startLineNumber","startLineStart","StringLiteral","scanStringLiteral","prevToken","checkToken","advanceSlash","collectToken","entry","lex","Position","WrappingNode","startToken","messageFormat","msg","whole","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","isFutureReservedWord","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","AssignmentExpression","Data","Get","Set","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishArrayExpression","finishAssignmentExpression","finishBinaryExpression","finishCallExpression","finishConditionalExpression","finishExpressionStatement","finishMemberExpression","finishObjectExpression","finishProgram","finishProperty","kind","finishUnaryExpression","legalKeywords","if","parsePrimaryExpression","parenthesisCount","parseAssignmentExpression","parseArrayInitialiser","parseObjectInitialiser","parseArguments","parseNonComputedProperty","parsePostfixExpression","found","previousAllowIn","allowIn","parseLeftHandSideExpressionAllowCall","parseUnaryExpression","binaryPrecedence","prec","parseConditionalExpression","marker","markers","parseBinaryExpression","parseStatement","parseSourceElement","parseProgram","sourceElement","firstRestricted","sourceElements","parseSourceElements","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","_size","lineSize","fillRect","strokeRect","axis_1","parseAxis","isCol","isRow","gridShow","grid","isOrdinalScale","parseAxisComponent","axisChannels","parseInnerAxis","AxisOrient","TOP","tickSizeEnd","maxLength","fieldTitle","titleMaxLength","cell","characterWidth","truncate","axisPropsSpec","gridPropsSpec","gridWidth","gridDash","labelsSpec","NOMINAL","labelMaxLength","labelAngle","isDimension","ticksPropsSpec","titlePropsSpec","__extends","__","data_1","axis_2","data_2","layout_1","model_1","scale_2","FacetModel","_super","parentGivenName","_config","_initConfig","_child","buildModel","_facet","_initFacet","_scale","_initScale","_axis","_initAxis","specConfig","mergeDeep","defaultConfig","channelMappingForEach","channels","addWarning","getFullName","scaleSpec","axisSpec","modelAxis","yAxis","RIGHT","hasSummary","summary","SUMMARY","SOURCE","parseData","parseFacetData","parseSelectionData","parseLayoutData","parseFacetLayout","parseScale","scaleComponent","parseScaleComponent","scaleNameWithoutPrefix","newName","renameScale","mergedCellConfig","sizeName","assembleParentGroupProperties","assembleGroup","parseAxisGroup","xAxisGroup","yAxisGroup","axisGroup","parseGridGroup","facetGridConfig","gridGroup","parseLegend","assembleData","assembleLayout","layoutData","assembleMarks","flatten","mapping","Model","hasCol","now","enable","console","prevTime","initialValue","_name","_value","_verbose","cmp","_siftdown","pidx","_siftup","ridx","cidx","pushpop","Item","Status","STATUS","updates","interp","isFinite","EXIT","UPDATE","timer","elapsed","delay","E","LN2","LOG2E","LOG10E","SQRT1_2","SQRT2","Fold","_cache","_reset","rederive","derive","_fn","uniqueItems","sort_1","facet_1","layer_1","unit_1","spec_1","applyConfig","propsList","marksProperties","LayerModel","UnitModel","STROKE_CONFIG","FILL_CONFIG","FILL_STROKE_CONFIG","colorValue","opacityValue","filled","colorFieldDef","opacityFieldDef","orderChannelDef","SortOrder","DESCENDING","templateField","timeFormat","Properties","LINEAR","LOG","POWER","SQRT","TIME","TIME_UTC","QUANTILE","QUANTIZE","THRESHOLD","DataRef","DOMAIN","RANGE","GROUPBY","MIN","MAX","ASC","DESC","_updated","ordinal","rng","_prev","dataDrivenRange","outer","outerPadding","spatial","dataRef","equal","bw","space","rangeRoundPoints","rangePoints","rangeRoundBands","rangeBands","invert","asc","findAsc","findDsc","isNumber","self","ctor","quantitative","rangeVal","rangeMin","rangeMax","rev","bisect","bisector","numcmp","interval","clamp","nice","domainMin","domainMax","rangeRound","isUniques","getRefs","inherits","aggrType","which","rlen","flen","atype","uniques","ck","op","_lastUpdate","addDep","_values","rangeDef","anyOf","keywords","repository","author","contributors","license","dependencies","d3-dsv","d3-format","d3-time","d3-time-format","topojson","sync-request","devDependencies","browserify","chai","istanbul","jshint","mocha","uglify-js","main","scripts","deploy","lint","cover","build","postbuild","browser","buffer","dispatch","cloudRadians","cw","cloudText","cloudFont","cloudFontNormal","cloudFontSize","cloudRotate","random","cloudPadding","cloudSprite","contextAndRatio","di","sprite","clearRect","maxh","save","sr","cr","wcr","wsr","hcr","hsr","fillText","lineWidth","strokeText","xoff","yoff","hasText","pixels","getImageData","w32","seen","seenRow","cloudCollide","board","sw","lx","sx","msx","cloudBounds","b0","b1","archimedeanSpiral","cloudCanvas","timeInterval","cloud","place","dxdy","startX","startY","maxDelta","dt","fillStyle","strokeStyle","textAlign","zeroArray","tags","clearInterval","setInterval","spirals","archimedean","rectangular","parsePadding","parseModify","onError","read","datasource","setTimeout","modify","parseDef","feature","mesh","Channel","getSupportedMark","CHANNELS","UNIT_CHANNELS","without","UNIT_SCALE_CHANNELS","NONSPATIAL_CHANNELS","NONSPATIAL_SCALE_CHANNELS","supportMark","getSupportedRole","dimension","hasScale","Impute","gb","gv","ob","ov","_imputed","groups","lut","N","unique","partition","getval","visit","compiler","cfg","_predicates","_groups","_node","_builder","predicate","pred","_groupBuilder","legend_1","defaultCellConfig","defaultFacetCellConfig","FontWeight","defaultFacetConfig","defaultFacetAxisConfig","Shape","HorizontalAlign","VerticalAlign","FontStyle","Interpolate","defaultMarkConfig","CIRCLE","barThinSize","tickThickness","MIDDLE","countTitle","defaultAxisConfig","defaultLegendConfig","addDimension","dataName","dimensions","summaryComponents","summaryComponent","summaryNameWithoutPrefix","renameData","summaries","childSummary","parentMeasures","childMeasures","field_1","mergeMeasures","summaryData","aggregator","fnDictSet","thisArg","channelMappingMap","arr","channelMappingReduce","countRetinal","Aggregator","facetID","disconnect_cell","_ingest","_assign","_newcell","_newtuple","_cells","_on_add","_on_rem","_on_mod","cell0","cell1","_on_drop","_on_keep","editor","listen","postMessage","Bin","maxbins","steps","minstep","div","bins","RESERVED","exprVal","scope","_expr","scopedScale","dsv","delimiter","Dsv","objectConverter","columns","reFormat","delimiterCode","formatRow","formatValue","convert","rows","parseRows","eol","EOL","I","columnSet","formatRows","csv","tsv","sizeValue","barSize","x2FieldDef","xIsMeasure","isMeasure","y2FieldDef","yIsMeasure","applyDefaults","colorProp","Hierarchy","nodesize","_mode","SEPARATION","cartesian","radial","nodesz","separation","nodeSize","rawDomain","StackOffset","NORMALIZE","STACKED_SCALE","SHARED_DOMAIN_OPS","UTC","domainSort","noAggregate","scaleType","rangeMixins","scaleConfig","unitModel","BAR","barSizeRange","pointSizeRange","pointBandSize","COLOR_LEGEND","COLOR_LEGEND_LABEL","scaleDef","colorLegend","binColorLegend","TimeUnit","HOURS","DAY","MONTH","QUARTER","POW","smallestUnit","Formula","updated","eventItem","eventGroup","eventX","eventY","scaleGen","iscale","inrange","indata","indataGen","windowOpen","uri","exclusive","dataname","Facet","_pipeline","DEFAULT_REQUIRED_CHANNEL_MAP","DEFAULT_SUPPORTED_CHANNEL_TYPE","getEncodingMappingError","requiredChannelMap","supportedChannelMap","requiredChannels","supportedChannels","source_1","formatparse_1","nullfilter_1","bin_1","formula_1","nonpositivenullfilter_1","summary_1","stackscale_1","timeunitdomain_1","colorrank_1","parseUnitData","formatParse","nullFilter","nonPositiveFilter","calculate","timeUnitDomain","stackScale","colorRank","parseLayerData","sourceData","colorRankTransform","nonPositiveFilterTransform","stackData","timeUnitDomainData","element","Sentinel","Bounder","ENTER","newItem","diff","keyf","keyFunction","idMap","_map","parent_id","inheritFrom","_from","_ds","_status","_parent_id","sibling","_isSuper","sout","_encoder","encoder","disconnectScales","fcs","isFunction","nested","axs","themeVal","ORIENT","axis_x","axis_y","tickValues","tickFormat","tickFormatType","tickSubdivide","subdivide","tickPadding","tickCount","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","gridLineProperties","domainProperties","tickSizeMajor","tickSizeMinor","lineDash","vgLineDash","NOOP","NODASH","setLineDash","dash","vgLineDashOffset","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","Canvas","_ctx","HTMLElement","pixelratio","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","setTransform","Type","temporal","nominal","Q","T","O","typeString","textBounds","tempBounds","vega_schema_1","_this","parseLayerLayout","childScales","modelScales","modelDomain","childDomain","unionedFields","axisComponent","legendComponent","isLayer","childData","scaleBandSize","peg$SyntaxError","expected","captureStackTrace","peg$subclass","SyntaxError","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","f1","f2","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$currPos","peg$posDetailsCache","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computePosDetails","charAt","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$buildException","cleanupExpected","expectedDescs","hex","stringEscape","buildMessage","peg$parsemerged","s0","s1","s3","s5","peg$parseordered","peg$parsesep","s7","s9","s11","s13","peg$parsefiltered","s2","peg$parsestream","peg$parsefilter","s4","peg$parsename","peg$parseeventType","peg$parsecss","peg$parseexpr","EMPTY","FIELDS","preds","wasDirty","isDirty","guide","update_status","level","parseUnitSizeLayout","cellConfig","nonOrdinalSize","getDistinct","channelSizeName","cardinalityFormula","unitSizeExpr","parseFacetSizeLayout","innerSize","childLayoutComponent","sizeType","childSizeComponent","parseLayerSizeLayout","sizeType_1","layoutComponent","distinctFields","LAYOUT","parseUnitLayout","formats","cols","parsers","clen","inferAll","annotation","vl","parameter","post","editor_url","source_header","source_footer","MODES","vega","vega-lite","PREPROCESSOR","vgjson","vljson","arg","embed","cb","actions","classed","html","parameters","pdiv","parameter_el","chart","ctrl","export","ext","header","footer","win","write","gen","repeat","zeros","uniform","samples","pdf","cdf","icdf","integer","normal","rds","cd","Z","bootstrap","smooth","defaultVal","dataflow","logging","reader","objects","features","isBoolean","util_2","generate_1","util_3","excludedItems","dest","_i","deepMerge_","other","every","arrays","dlBin","getbins","results","warning","warn","differ","dict","subscene","hits","interative","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_arraySlice","d3_array","d3_document","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","setProperty","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","local","priority","d3_ascending","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","ascending","descending","quantile","H","numbers","deviation","d3_bisect","d3_transposeLength","bisectLeft","bisectRight","shuffle","permute","indexes","permutes","pairs","p1","matrix","zip","entries","merge","merged","d3_class","defineProperty","enumerable","d3_Map","d3_range_integerScale","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","empty","sortValues","rollup","sortKeys","mapType","keyValue","setter","valuesByKey","sortKey","keyMap","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listenerByName","d3_eventPreventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","__proto__","d3_selection","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","d3_selection_selector","d3_selection_selectorAll","subgroup","subnode","subgroups","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","qualify","removeAttributeNS","removeAttribute","d3_collapse","d3_selection_classedRe","d3_selection_classes","d3_selection_classed","d3_selection_classedName","classList","getAttribute","lastIndex","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selection_each","d3_selection_enter","d3_selection_enterPrototype","getAttributeNS","each","getComputedStyle","getPropertyValue","textContent","innerHTML","appendChild","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","d3_selection_on","capture","d3_selection_onListener","d3_selection_onFilters","onRemove","d3_selection_onFilter","upgroup","j0","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","suppressClick","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","ownerSVGElement","createSVGPoint","scrollX","scrollY","ctm","position","border","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touches","drag","dragstart","subject","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","position1","position0","dragRestore","ε","ε2","π","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","d3_haversin","ρ","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","r0","r1","coshr0","zoom","translate0","center0","center","mousewheelTimer","touchtime","scaleExtent","d3_behavior_zoomInfinity","zooming","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","scaleTo","translateTo","zoomTo","__chart__","transition","rescale","zoomstarted","zoomed","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","targets","relocate","started","moved","ended","changed","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","d3_hclPrototype","d3_hcl_lab","d3_lab_K","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","mimeType","d3_xhr","onprogress","progress","overrideMimeType","beforesend","abort","typedResponse","fieldSet","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","then","d3_timer_step","d3_timer_mark","d3_timer_sweep","t0","t1","d3_format_precision","flush","d3_formatPrefixes","d3_format_re","d3_format_types","d3_format_typeDefault","d3_date","d3_date_utc","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","d0","times","d3_time_interval_utc","years","days","dayOfYear","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","d3_time_formatRe","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_parseZone","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","locale_decimal","locale_thousands","locale_grouping","locale_currency","formatGroup","zfill","zcomma","fullSuffix","negative","after","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","locale_shortMonths","shortMonths","d3_time_format","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","d3_locale_timeFormat","d3_locale_enUS","d3_adder","d3_adderSum","d3_adderTemp","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamObjectType","Feature","FeatureCollection","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineEnd","polygonStart","polygonEnd","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","d3_geo_sphericalEqual","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","ringPoint","ringStart","ringEnd","linePoint","inflection","λi","antimeridian","φi","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","clipStartInside","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","current","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","d3_geo_clipBufferListener","ringListener","clean","ringSegments","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","cosφ1","sinλ0_λ1","sλ1","atan","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","smallRadius","notHemisphere","v0","v00","point2","point1","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","projectStream","contextStream","cacheStream","pointRadius","pointCircle","pointLineStart","lineEndPolygon","projectionMutator","equirectangular","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x21","x43","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","ly","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","d3_geom_voronoiClipEdges","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","d3_geom_voronoiClipExtent","links","triangles","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","d3_geom_quadtreeVisit","sy","minDistance2","distance2","closestPoint","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","interpolateHcl","ah","ac","al","bh","bl","interpolateHsl","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ra","rb","wa","wb","ta","tb","d3_interpolateTranslate","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","d3_layout_forceMouseout","interpolateTransform","bundle","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","dj","subindex","resort","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","d3_layout_forceAccumulate","chargeDistance","neighbors","candidates","d3_layout_hierarchyRebind","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","childs","revalue","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","tops","bottoms","silhouette","wiggle","o0","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","thresholds","pack","d3_layout_packTransform","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","siblings","d3_layout_treeShift","midpoint","ancestor","vip","vop","vim","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterLeft","d3_layout_clusterRight","stickies","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linear","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","d3_scale_ordinal","rangeBand","xi","d3_category10","d3_category20","d3_category20b","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","d3_scale_identity","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","curve","diagonal","p3","projection_","d3_svg_symbols","diamond","d3_svg_symbolTan30","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","d3_transitionPrototype","d3_transition_tween","d3_transition_text","tweens","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","tickFormat_","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickArguments_","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skipped","iso","timezone","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","createContextualFragment","responseXML","firstChild","newInterval","floori","offseti","millisecond","weekday","monday","tuesday","wednesday","thursday","friday","saturday","utcWeekday","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","milliseconds","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","utcMillisecond","utcMilliseconds","utcSeconds","utcMinutes","utcHours","utcDays","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcWeeks","utcMonths","utcYears","drawArc","coords","seg","bez","tempX","tempY","tempControlX","tempControlY","controlX","controlY","d3Time","localDate","utcDate","newYear","locale$1","locale_weekdays","locale_shortWeekdays","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumber","formatWeekNumberMonday","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseFullYear","parseZone","parseLiteralPercent","newFormat","pads","newParse","newDate","numberRe","percentRe","requoteRe","parseYear","formatWeekNumberSunday","isoSpecifier","formatIsoNative","formatIso","isoFormat","Geo","Parameters","lon","lat","d3Projection","proj","_projection","ll","xy","baseSchema","isBuffer","cmdlen","regexp","pathstr","chunks","parsed","cmd","hit","testPath","drawOne","Lookup","onKey","onLast","onData","onF","defaultValue","_lut","_on","Treeify","childField","parentField","aggrs","_internal","execute","stacked","NONE","stackByChannels","sc","hasXField","hasYField","xIsAggregate","ZERO","arrayType","dataType","fieldType","exprType","valType","_accessors","_resolution","isData","isField","isExpr","parseBg","drawPathOne","trueFunc","isPointInStroke","strokeCap","lineCap","isPointInPath","createLinearGradient","addColorStop","pathFunc","drawPathAll","PARSERS","boolean","TESTS","isDate","fieldNames","bracket","fieldName","infer","ignore","tupleID","VALUES","VALID","MISSING","DISTINCT","SUM","MEAN","AVERAGE","VARIANCE","VARIANCEP","STDEV","STDEVP","MEDIAN","Q1","Q3","MODESKEW","ARGMIN","ARGMAX","SUM_OPS","vars","exprs","_nRefs","handleDep","handleNestedRefs","parseShape","valueRef","tpl","rules","inputs","exprFn","predName","predicateArg","colorRef","sgRef","fRef","sRef","tmpl","fieldRef","fr","scaleRef","band","xx","yy","zz","valueSchema","valRef","stringModifiers","numberModifiers","numberValue","stringValue","booleanValue","arrayValue","calcFieldMap","fieldMap","parseComponent","isCount","STRING","NUMBER","tickFormatString","logFilter","getFormatter","inferFormatType","cousin","iidx","midx","SQUARE","PRIMITIVE_MARKS","NameMap","_nameMap","rename","oldName","_warnings","_dataNameMap","_scaleNameMap","_sizeNameMap","_description","assembleScales","assembleAxes","assembleLegends","dataSourceType","renameSize","_legend","warnings","isUnit","defaultExtension","dataFormat","parser","childrenField","table","toTable","Cross","with","_lastWith","_cids","_cid","diag","mids","cid","cids","oadd","fltrd","rids","omod","orem","selfCross","woutput","wdata","useColorLegendScale","getLegendDefWithScale","parseLegendComponent","symbolsSpec","titleSpec","Dispatch","typename","__webpack_exports__","_x","_y","_x2","_y2","timeUnitDomainMap","timeUnitData","stackProps","stackComponent","axisBounds","axisOrients","axisScaleExtent","axisAlign","axisBaseline","axisTicksExtend","oldRef","newRef","tickPlacement","tickOffset","axisUpdate","ofx","ofy","axisTicks","axisDef","tickMajorSize","tickMinorSize","tickEndSize","gridLineStyle","tickLabelStyle","majorTickStyle","minorTickStyle","domainStyle","gridLines","tickLabels","getTicks","major","minor","subticks","axisSubdivide","newScale","oldScale","axis_def","clone","MAX_VALUE","encloses","alignsWith","SVGRenderer","_dirtyID","updateGradient","updateClipping","dirtyParents","__values__","_svg","_root","_dirtyCheck","_dirtyAll","_resetDefs","updateDefs","drawMark","_update","isGroup","className","_recurse","mark_extras","tempDate","baseDate","utcBaseDate","STEPS","toUnitMap","units","minb","maxb","treejson","bin_2","binComponent","binTrans","isOrdinalColor","transformAbsolute","feature$1","topology","absolute","geometryType","stitchArcs","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","dp","ends","fg","gf","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","polygonsByArc","components","register","ring$$","ki","compareArea","indexesByArc","ij","ik","presimplify","triangleArea","relative","transformRelative","heap","up","down","removed","minAreaHeap","maxArea","separator","minwidth","maxwidth","limit","lens","FMT","POS","__summary__","printCategoricalProfile","cast","DATE","datetime","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","_isFieldDimension","supportedEnums","supportedTypes","cardinality","filterNull","stat","SECONDS","MINUTES","YEAR","yearstat","canvasAsync","pendingImages","wait","formulaComponent","CanvasRenderer","pending","clipToBounds","ctx","renderAsync","_async_id","Force","_interactive","_setup","_nodes","_links","iterations","nodeInput","linkInput","configure","tickHandler","d3_dsv","EPSILON","eps","logb","date_value","date_index","dmin","dmax","minbins","initMarkConfig","qtype","$bin","numerical","INSERT","REMOVE","UPSERT","TOGGLE","CLEAR","signalName","exprTrigger","isClear","getters","setters","LinkPath","sourceX","sourceY","targetX","targetY","ty","cornerX","cornerY","cornerR","tr","ss","tc","diagonalX","diagonalY","diagonalR","mr","fixedShape","form","checkbox","checked","sl","selectedIndex","radio","rg","option","rn","lbl","__vega__","rewrite","handle","translateItem","pathStr","ilen","isGrp","rebound","tagName","doc","GeoPath","geojson","DEFAULT_NULL_FILTERS","nullFilterComponent","filteredFields","Measures","_stream","ADD_CELL","MOD_CELL","summarize_args","_count","_cellkey","_cell","num","flag","aggs","_rems","_consolidate","ztest1","nullH","nullh","gaussian","mu","SE","ztestP","diffs","ztest2","meanDiff","geometric","harmonic","delta","M2","avg","med","std","dot","dist","L2","cohensd","covariance","vx","vy","tie","cor","mua","mub","sda","sdb","mat","linearRegression","res","slope","icept","fit","intercept","rss","ci","means","paired","entropy","mutual","info","profile","sd","lgnd","colorRankComponent","containsTimeUnit","onlyRef","fun","addComma","MILLISECONDS","Stack","validate","DataFormatType","DataTable","_source","_indexes","_indexFields","_inputNode","_outputNode","_mutates","where","updateIndices","DataSourceOutput","_srcMap","Rank","klen","norm","format_map","variable","template_re","template_escaper","template_escapeChar","filter_re","stringCast","strcall","formatter","template_format","args_re","template_var","clearFormatCache","template_escapes","'","\\","\r","\n"," "," ","=","parseComparator","==","!=",">",">=","<","<=","and","parseLogical","&&","||","parseOperands","nullScale","parsePredicates","parseSignal","operands","decl","setData","operand","parseSpec","arglen","argidx","viewFactory","opts","nonPositiveFilter_1","nonPositiveComponent","nonPositiveFilterComponent","SVGHandler","assembleRootGroup","rootGroup","inputSpec","fullTimeUnit","fullTimeUnitStr","timeUnitStr","YEARMONTH","YEARMONTHDAY","YEARMONTHDATE","YEARDAY","YEARDATE","YEARMONTHDAYHOURS","YEARMONTHDAYHOURSMINUTES","YEARMONTHDAYHOURSMINUTESSECONDS","HOURSMINUTES","HOURSMINUTESSECONDS","MINUTESSECONDS","SECONDSMILLISECONDS","YEARQUARTER","QUARTERMONTH","YEARQUARTERMONTH","dateComponents","timeComponents","Buffer","namedfunc","false","keystr","field_re","strrep","truncateOnWord","cnt","truncate_word_re","$valid","$length","$in","stablesort","keyFn","indices","sb","swap","padchar","word","ellipsis","l2","_pending","Config","Image","pathArray","config_2","mark_2","_encoding","_initEncoding","_initLegend","_stack","_scaleType","legendSpec","toSpec","excludeConfig","excludeData","d3_svg","areav","areah","xmlns:xlink","command","newPath","textBaseline","print"],"mappings":"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","file":"0.f30e390d494625aeb321.js","sourcesContent":["var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n        scene = require('vega-scenegraph'),\n    sg = scene.render,\n    bound = scene.bound,\n    log = require('vega-logging'),\n    Deps = df.Dependencies,\n    parseStreams = require('../parse/streams'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition');\n\nfunction View(el, width, height) {\n  this._el    = null;\n  this._model = null;\n  this._width   = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._bgcolor = null;\n  this._cursor  = true; // Set cursor based on hover propset?\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._skipSignals = false; // Batch set signals can skip reevaluation.\n  this._changeset = null;\n  this._repaint = true; // Full re-render on every re-init\n  this._renderers = sg;\n  this._io  = null;\n  this._api = {}; // Stash streaming data API sandboxes.\n}\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new df.Node(model);\n    this._streamer._rank = -1;  // HACK: To reduce re-ranking churn.\n    this._changeset = df.ChangeSet.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src);\n  if (!ds) return log.error('Data source \"'+src+'\" is not defined.');\n\n  var listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      api = {};\n\n  // If we have it stashed, don't create a new closure.\n  if (this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values(); };\n\n  return (this._api[src] = api);\n}\n\nprototype.data = function(data) {\n  var v = this;\n  if (!arguments.length) return v._model.values();\n  else if (dl.isString(data)) return streaming.call(v, data);\n  else if (dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nvar VIEW_SIGNALS = dl.toMap(['width', 'height', 'padding']);\n\nprototype.signal = function(name, value, skip) {\n  var m = this._model,\n      key, values;\n\n  // Getter. Returns the value for the specified signal, or\n  // returns all signal values.\n  if (!arguments.length) {\n    return m.values(Deps.SIGNALS);\n  } else if (arguments.length === 1 && dl.isString(name)) {\n    return m.values(Deps.SIGNALS, name);\n  }\n\n  // Setter. Can be done in batch or individually. In either case,\n  // the final argument determines if set signals should be skipped.\n  if (dl.isObject(name)) {\n    values = name;\n    skip = value;\n  } else {\n    values = {};\n    values[name] = value;\n  }\n  for (key in values) {\n    if (VIEW_SIGNALS[key]) {\n      this[key](values[key]);\n    } else {\n      setSignal.call(this, key, values[key]);\n    }\n  }\n  return (this._skipSignals = skip, this);\n};\n\nfunction setSignal(name, value) {\n  var cs = this._changeset,\n      sg = this._model.signal(name);\n  if (!sg) return log.error('Signal \"'+name+'\" is not defined.');\n\n  this._streamer.addListener(sg.value(value));\n  cs.signals[name] = 1;\n  cs.reflow = true;\n}\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.model().width(width);\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n    setSignal.call(this, 'width', width);\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.model().height(height);\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n    setSignal.call(this, 'height', height);\n  }\n  return this;\n};\n\nprototype.background = function(bgcolor) {\n  if (!arguments.length) return this._bgcolor;\n  if (this._bgcolor !== bgcolor) {\n    this._bgcolor = bgcolor;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === 'strict');\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._renderer) this._renderer.resize(this._width, this._height, this._padding);\n    if (this._handler)  this._handler.padding(this._padding);\n    setSignal.call(this, 'padding', this._padding);\n  }\n  return (this._repaint = true, this);\n};\n\nfunction viewBounds() {\n  var s = this.model().scene(),\n      legends = s.items[0].legendItems,\n      i = 0, len = legends.length,\n      b, lb;\n\n  // For strict padding, clip legend height to prevent a tiny data rectangle.\n  if (this._strict) {\n    b = bound.mark(s, null, false);\n    for (; i<len; ++i) {\n      lb = legends[i].bounds;\n      b.add(lb.x1, 0).add(lb.x2, 0);\n    }\n    return b;\n  }\n\n  return s.bounds;\n}\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var b = viewBounds.call(this),\n      pad = this._padding,\n      config = this.model().config(),\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0;\n  b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n\n    this._model.width(this._width).height(this._height).reset();\n    setSignal.call(this, 'width', this._width);\n    setSignal.call(this, 'height', this._height);\n    setSignal.call(this, 'padding', pad);\n\n    this.initialize().update({props:'enter'}).update({props:'update'});\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error('Unknown renderer: ' + type);\n  else if (!type) throw new Error('No renderer specified');\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding, bg = v._bgcolor,\n      config = this.model().config();\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if (!el) return this;  // This View cannot init w/o an\n  }\n\n  // clear pre-existing container\n  d3.select(el).select('div.vega').remove();\n\n  // add div container\n  this._el = el = d3.select(el)\n    .append('div')\n    .attr('class', 'vega')\n    .style('position', 'relative')\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style('width',  (v._viewport[0] || w)+'px')\n      .style('height', (v._viewport[1] || h)+'px')\n      .style('overflow', 'auto');\n  }\n\n  // renderer\n  sg.canvas.Renderer.RETINA = config.render.retina;\n  v._renderer = (v._renderer || new this._io.Renderer(config.load))\n    .initialize(el, w, h, pad)\n    .background(bg);\n\n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    v._detach = parseStreams(this);\n  }\n\n  return (this._repaint = true, this);\n};\n\nprototype.destroy = function() {\n  if (this._detach) this._detach();\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new df.Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    log.debug(input, ['rendering']);\n\n    var s = v._model.scene(),\n        h = v._handler;\n\n    if (h && h.scene) h.scene(s);\n\n    if (input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else if (v._repaint) {\n      v._renderer.render(s);\n    } else if (input.dirty.length) {\n      v._renderer.render(s, input.dirty);\n    }\n\n    if (input.dirty.length) {\n      input.dirty.forEach(function(i) { i._dirty = false; });\n      s.items[0]._dirty = false;\n    }\n\n    v._repaint = v._skipSignals = false;\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);\n}\n\nprototype.update = function(opt) {\n  opt = opt || {};\n  var v = this,\n      model = this._model,\n      streamer = this._streamer,\n      cs = this._changeset,\n      trans = opt.duration ? new Transition(opt.duration, opt.ease) : null;\n\n  if (trans) cs.trans = trans;\n  if (opt.props !== undefined) {\n    if (dl.keys(cs.data).length > 0) {\n      throw Error(\n        'New data values are not reflected in the visualization.' +\n        ' Please call view.update() before updating a specified property set.'\n      );\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  var built = v._build;\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, re-evaluate the entire model (datasources + scene).\n  if (opt.items && built) {\n    Encoder.update(model, opt.trans, opt.props, opt.items, cs.dirty);\n    v._renderNode.evaluate(cs);\n  } else if (streamer.listeners().length && built) {\n    // Include re-evaluation entire model when repaint flag is set\n    if (this._repaint) streamer.addListener(model.node());\n    model.propagate(cs, streamer, null, this._skipSignals);\n    streamer.disconnect();\n  } else {\n    model.fire(cs);\n  }\n\n  v._changeset = df.ChangeSet.create();\n\n  return v.autopad(opt);\n};\n\nprototype.toImageURL = function(type) {\n  var v = this, Renderer;\n\n  // lookup appropriate renderer\n  switch (type || 'png') {\n    case 'canvas':\n    case 'png':\n      Renderer = sg.canvas.Renderer; break;\n    case 'svg':\n      Renderer = sg.svg.string.Renderer; break;\n    default: throw Error('Unrecognized renderer type: ' + type);\n  }\n\n  var retina = sg.canvas.Renderer.RETINA;\n  sg.canvas.Renderer.RETINA = false; // ignore retina screen\n\n  // render the scenegraph\n  var ren = new Renderer(v._model.config.load)\n    .initialize(null, v._width, v._height, v._padding)\n    .background(v._bgcolor)\n    .render(v._model.scene());\n\n  sg.canvas.Renderer.RETINA = retina; // restore retina settings\n\n  // return data url\n  if (type === 'svg') {\n    var blob = new Blob([ren.svg()], {type: 'image/svg+xml'});\n    return window.URL.createObjectURL(blob);\n  } else {\n    return ren.canvas().toDataURL('image/png');\n  }\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  var sg = this._model.signal(name);\n  return (sg ?\n    sg.on(handler) : log.error('Signal \"'+name+'\" is not defined.'), this);\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  var sg = this._model.signal(name);\n  return (sg ?\n    sg.off(handler) : log.error('Signal \"'+name+'\" is not defined.'), this);\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || 'canvas')\n      .width(defs.width)\n      .height(defs.height)\n      .background(defs.background)\n      .padding(defs.padding)\n      .viewport(defs.viewport)\n      .initialize(opt.el);\n\n    if (opt.data) v.data(opt.data);\n\n    // Register handlers for the hover propset and cursors.\n    if (opt.el) {\n      if (opt.hover !== false) {\n        v.on('mouseover', function(evt, item) {\n          if (item && item.hasPropertySet('hover')) {\n            this.update({props:'hover', items:item});\n          }\n        })\n        .on('mouseout', function(evt, item) {\n          if (item && item.hasPropertySet('hover')) {\n            this.update({props:'update', items:item});\n          }\n        });\n      }\n\n      if (opt.cursor !== false) {\n        // If value is a string, it is a custom value set by the user.\n        // In this case, the user is responsible for maintaining the cursor state\n        // and control only reverts back to this handler if set back to 'default'.\n        v.onSignal('cursor', function(name, value) {\n          var body = d3.select('body');\n          if (dl.isString(value)) {\n            v._cursor = value === 'default';\n            body.style('cursor', value);\n          } else if (dl.isObject(value) && v._cursor) {\n            body.style('cursor', value.default);\n          }\n        });\n      }\n    }\n\n    return v;\n  };\n};\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/View.js\n// module id = +5nH\n// module chunks = 0","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '__dl_rem__';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n, m;\n\n  if (!util.isObject(r[0])) {\n    // processing raw values\n    m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else if (k) {\n    // has unique key field, so use that\n    m = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!m.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;\n  }\n  return this._ext;\n};\n\nproto.argmin = function(get) {\n  return this.extent(get)[0];\n};\n\nproto.argmax = function(get) {\n  return this.extent(get)[1];\n};\n\nproto.min = function(get) {\n  var m = this.extent(get)[0];\n  return m != null ? get(m) : +Infinity;\n};\n\nproto.max = function(get) {\n  var m = this.extent(get)[1];\n  return m != null ? get(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._get = get;\n  }\n  return this._q;\n};\n\nproto.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nproto.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nproto.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nmodule.exports = Collector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/collector.js\n// module id = /2vj\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('./aggregate');\nvar timeunit_1 = require('./timeunit');\nvar type_1 = require('./type');\nvar vlEncoding = require('./encoding');\nvar mark_1 = require('./mark');\nexports.DELIM = '|';\nexports.ASSIGN = '=';\nexports.TYPE = ',';\nexports.FUNC = '_';\nfunction shorten(spec) {\n    return 'mark' + exports.ASSIGN + spec.mark +\n        exports.DELIM + shortenEncoding(spec.encoding);\n}\nexports.shorten = shorten;\nfunction parse(shorthand, data, config) {\n    var split = shorthand.split(exports.DELIM), mark = split.shift().split(exports.ASSIGN)[1].trim(), encoding = parseEncoding(split.join(exports.DELIM));\n    var spec = {\n        mark: mark_1.Mark[mark],\n        encoding: encoding\n    };\n    if (data !== undefined) {\n        spec.data = data;\n    }\n    if (config !== undefined) {\n        spec.config = config;\n    }\n    return spec;\n}\nexports.parse = parse;\nfunction shortenEncoding(encoding) {\n    return vlEncoding.map(encoding, function (fieldDef, channel) {\n        return channel + exports.ASSIGN + shortenFieldDef(fieldDef);\n    }).join(exports.DELIM);\n}\nexports.shortenEncoding = shortenEncoding;\nfunction parseEncoding(encodingShorthand) {\n    return encodingShorthand.split(exports.DELIM).reduce(function (m, e) {\n        var split = e.split(exports.ASSIGN), enctype = split[0].trim(), fieldDefShorthand = split[1];\n        m[enctype] = parseFieldDef(fieldDefShorthand);\n        return m;\n    }, {});\n}\nexports.parseEncoding = parseEncoding;\nfunction shortenFieldDef(fieldDef) {\n    return (fieldDef.aggregate ? fieldDef.aggregate + exports.FUNC : '') +\n        (fieldDef.timeUnit ? fieldDef.timeUnit + exports.FUNC : '') +\n        (fieldDef.bin ? 'bin' + exports.FUNC : '') +\n        (fieldDef.field || '') + exports.TYPE + type_1.SHORT_TYPE[fieldDef.type];\n}\nexports.shortenFieldDef = shortenFieldDef;\nfunction shortenFieldDefs(fieldDefs, delim) {\n    if (delim === void 0) { delim = exports.DELIM; }\n    return fieldDefs.map(shortenFieldDef).join(delim);\n}\nexports.shortenFieldDefs = shortenFieldDefs;\nfunction parseFieldDef(fieldDefShorthand) {\n    var split = fieldDefShorthand.split(exports.TYPE);\n    var fieldDef = {\n        field: split[0].trim(),\n        type: type_1.TYPE_FROM_SHORT_TYPE[split[1].trim()]\n    };\n    for (var i = 0; i < aggregate_1.AGGREGATE_OPS.length; i++) {\n        var a = aggregate_1.AGGREGATE_OPS[i];\n        if (fieldDef.field.indexOf(a + '_') === 0) {\n            fieldDef.field = fieldDef.field.substr(a.toString().length + 1);\n            if (a === aggregate_1.AggregateOp.COUNT && fieldDef.field.length === 0) {\n                fieldDef.field = '*';\n            }\n            fieldDef.aggregate = a;\n            break;\n        }\n    }\n    for (var i = 0; i < timeunit_1.TIMEUNITS.length; i++) {\n        var tu = timeunit_1.TIMEUNITS[i];\n        if (fieldDef.field && fieldDef.field.indexOf(tu + '_') === 0) {\n            fieldDef.field = fieldDef.field.substr(fieldDef.field.length + 1);\n            fieldDef.timeUnit = tu;\n            break;\n        }\n    }\n    if (fieldDef.field && fieldDef.field.indexOf('bin_') === 0) {\n        fieldDef.field = fieldDef.field.substr(4);\n        fieldDef.bin = true;\n    }\n    return fieldDef;\n}\nexports.parseFieldDef = parseFieldDef;\n//# sourceMappingURL=shorthand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/shorthand.js\n// module id = /7Ur\n// module chunks = 0","var segmentCache = {},\n    bezierCache = {},\n    join = [].join;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction segments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  var key = join.call(arguments);\n  if (segmentCache[key]) {\n    return segmentCache[key];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep === 1){\n    th_arc += 2 * Math.PI;\n  } else if (th_arc > 0 && sweep === 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segs = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segs; ++i) {\n    var th2 = th0 + i * th_arc / segs;\n    var th3 = th0 + (i+1) * th_arc / segs;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (segmentCache[key] = result);\n}\n\nfunction bezier(params) {\n  var key = join.call(params);\n  if (bezierCache[key]) {\n    return bezierCache[key];\n  }\n  \n  var cx = params[0],\n      cy = params[1],\n      th0 = params[2],\n      th1 = params[3],\n      rx = params[4],\n      ry = params[5],\n      sin_th = params[6],\n      cos_th = params[7];\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (bezierCache[key] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nmodule.exports = {\n  segments: segments,\n  bezier: bezier,\n  cache: {\n    segments: segmentCache,\n    bezier: bezierCache\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/arc.js\n// module id = /MHv\n// module chunks = 0","var dl = require('datalib'),\n    log  = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: 'array<field>'} });\n  this.router(true);\n}\n\nvar prototype = (Sort.prototype = Object.create(Transform.prototype));\nprototype.constructor = Sort;\n\nprototype.transform = function(input) {\n  log.debug(input, ['sorting']);\n\n  if (input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.param('by').field);\n  }\n  return input;\n};\n\nmodule.exports = Sort;\n\nSort.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Sort transform\",\n  \"description\": \"Sorts the values of a data set.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"sort\"]},\n    \"by\": {\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\"type\": \"array\", \"items\": {\"type\": \"string\"}}\n      ],\n      \"description\": \"A list of fields to use as sort criteria.\"\n    }\n  },\n  \"required\": [\"type\", \"by\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Sort.js\n// module id = /lc5\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar encoding_1 = require('../../encoding');\nvar fielddef_1 = require('../../fielddef');\nvar mark_1 = require('../../mark');\nvar scale_1 = require('../../scale');\nvar util_1 = require('../../util');\nvar area_1 = require('./area');\nvar bar_1 = require('./bar');\nvar common_1 = require('../common');\nvar line_1 = require('./line');\nvar point_1 = require('./point');\nvar rule_1 = require('./rule');\nvar text_1 = require('./text');\nvar tick_1 = require('./tick');\nvar markCompiler = {\n    area: area_1.area,\n    bar: bar_1.bar,\n    line: line_1.line,\n    point: point_1.point,\n    text: text_1.text,\n    tick: tick_1.tick,\n    rule: rule_1.rule,\n    circle: point_1.circle,\n    square: point_1.square\n};\nfunction parseMark(model) {\n    if (util_1.contains([mark_1.LINE, mark_1.AREA], model.mark())) {\n        return parsePathMark(model);\n    }\n    else {\n        return parseNonPathMark(model);\n    }\n}\nexports.parseMark = parseMark;\nfunction parsePathMark(model) {\n    var mark = model.mark();\n    var isFaceted = model.parent() && model.parent().isFacet();\n    var dataFrom = { data: model.dataTable() };\n    var details = detailFields(model);\n    var pathMarks = [\n        {\n            name: model.name('marks'),\n            type: markCompiler[mark].markType(),\n            from: util_1.extend(isFaceted || details.length > 0 ? {} : dataFrom, { transform: [{ type: 'sort', by: sortPathBy(model) }] }),\n            properties: { update: markCompiler[mark].properties(model) }\n        }\n    ];\n    if (details.length > 0) {\n        var facetTransform = { type: 'facet', groupby: details };\n        var transform = mark === mark_1.AREA && model.stack() ?\n            stackTransforms(model, true).concat(facetTransform) :\n            [].concat(facetTransform, model.has(channel_1.ORDER) ? [{ type: 'sort', by: sortBy(model) }] : []);\n        return [{\n                name: model.name('pathgroup'),\n                type: 'group',\n                from: util_1.extend(isFaceted ? {} : dataFrom, { transform: transform }),\n                properties: {\n                    update: {\n                        width: { field: { group: 'width' } },\n                        height: { field: { group: 'height' } }\n                    }\n                },\n                marks: pathMarks\n            }];\n    }\n    else {\n        return pathMarks;\n    }\n}\nfunction parseNonPathMark(model) {\n    var mark = model.mark();\n    var isFaceted = model.parent() && model.parent().isFacet();\n    var dataFrom = { data: model.dataTable() };\n    var marks = [];\n    if (mark === mark_1.TEXT &&\n        model.has(channel_1.COLOR) &&\n        model.config().mark.applyColorToBackground && !model.has(channel_1.X) && !model.has(channel_1.Y)) {\n        marks.push(util_1.extend({\n            name: model.name('background'),\n            type: 'rect'\n        }, isFaceted ? {} : { from: dataFrom }, { properties: { update: text_1.text.background(model) } }));\n    }\n    marks.push(util_1.extend({\n        name: model.name('marks'),\n        type: markCompiler[mark].markType()\n    }, (!isFaceted || model.stack() || model.has(channel_1.ORDER)) ? {\n        from: util_1.extend(isFaceted ? {} : dataFrom, model.stack() ?\n            { transform: stackTransforms(model, false) } :\n            model.has(channel_1.ORDER) ?\n                { transform: [{ type: 'sort', by: sortBy(model) }] } :\n                {})\n    } : {}, { properties: { update: markCompiler[mark].properties(model) } }));\n    if (model.has(channel_1.LABEL) && markCompiler[mark].labels) {\n        var labelProperties = markCompiler[mark].labels(model);\n        if (labelProperties !== undefined) {\n            marks.push(util_1.extend({\n                name: model.name('label'),\n                type: 'text'\n            }, isFaceted ? {} : { from: dataFrom }, { properties: { update: labelProperties } }));\n        }\n    }\n    return marks;\n}\nfunction sortBy(model) {\n    if (model.has(channel_1.ORDER)) {\n        var channelDef = model.encoding().order;\n        if (channelDef instanceof Array) {\n            return channelDef.map(common_1.sortField);\n        }\n        else {\n            return common_1.sortField(channelDef);\n        }\n    }\n    return null;\n}\nfunction sortPathBy(model) {\n    if (model.mark() === mark_1.LINE && model.has(channel_1.PATH)) {\n        var channelDef = model.encoding().path;\n        if (channelDef instanceof Array) {\n            return channelDef.map(common_1.sortField);\n        }\n        else {\n            return common_1.sortField(channelDef);\n        }\n    }\n    else {\n        return '-' + model.field(model.config().mark.orient === 'horizontal' ? channel_1.Y : channel_1.X, { binSuffix: '_mid' });\n    }\n}\nfunction detailFields(model) {\n    return [channel_1.COLOR, channel_1.DETAIL, channel_1.OPACITY, channel_1.SHAPE].reduce(function (details, channel) {\n        if (model.has(channel) && !model.fieldDef(channel).aggregate) {\n            details.push(model.field(channel));\n        }\n        return details;\n    }, []);\n}\nfunction stackTransforms(model, impute) {\n    var stackByFields = getStackByFields(model);\n    if (impute) {\n        return [imputeTransform(model, stackByFields), stackTransform(model, stackByFields)];\n    }\n    return [stackTransform(model, stackByFields)];\n}\nfunction getStackByFields(model) {\n    var encoding = model.encoding();\n    return channel_1.STACK_GROUP_CHANNELS.reduce(function (fields, channel) {\n        var channelEncoding = encoding[channel];\n        if (encoding_1.has(encoding, channel)) {\n            if (util_1.isArray(channelEncoding)) {\n                channelEncoding.forEach(function (fieldDef) {\n                    fields.push(fielddef_1.field(fieldDef));\n                });\n            }\n            else {\n                var fieldDef = channelEncoding;\n                var scale = model.scale(channel);\n                fields.push(fielddef_1.field(fieldDef, {\n                    binSuffix: scale && scale.type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n                }));\n            }\n        }\n        return fields;\n    }, []);\n}\nfunction imputeTransform(model, stackFields) {\n    var stack = model.stack();\n    return {\n        type: 'impute',\n        field: model.field(stack.fieldChannel),\n        groupby: stackFields,\n        orderby: [model.field(stack.groupbyChannel, { binSuffix: '_mid' })],\n        method: 'value',\n        value: 0\n    };\n}\nfunction stackTransform(model, stackFields) {\n    var stack = model.stack();\n    var encoding = model.encoding();\n    var sortby = model.has(channel_1.ORDER) ?\n        (util_1.isArray(encoding[channel_1.ORDER]) ? encoding[channel_1.ORDER] : [encoding[channel_1.ORDER]]).map(common_1.sortField) :\n        stackFields.map(function (field) {\n            return '-' + field;\n        });\n    var valName = model.field(stack.fieldChannel);\n    var transform = {\n        type: 'stack',\n        groupby: [model.field(stack.groupbyChannel, { binSuffix: '_mid' })],\n        field: model.field(stack.fieldChannel),\n        sortby: sortby,\n        output: {\n            start: valName + '_start',\n            end: valName + '_end'\n        }\n    };\n    if (stack.offset) {\n        transform.offset = stack.offset;\n    }\n    return transform;\n}\n//# sourceMappingURL=mark.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/mark.js\n// module id = 0ZZw\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-format', ['exports'], factory) :\n  factory((global.d3_format = {}));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  };\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  };\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  };\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  };\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  };\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  };\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  };\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function locale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function format(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      return function(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            var i = -1, n = value.length, c;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            var i = -1, n = value.length, c;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      };\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = format((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: format,\n      formatPrefix: formatPrefix\n    };\n  };\n\n  var defaultLocale = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  var caES = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var csCZ = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Kč\"],\n  });\n\n  var deCH = locale({\n    decimal: \",\",\n    thousands: \"'\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0CHF\"]\n  });\n\n  var deDE = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var enCA = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  var enGB = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"£\", \"\"]\n  });\n\n  var esES = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var fiFI = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var frCA = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"$\"]\n  });\n\n  var frFR = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var heIL = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₪\", \"\"]\n  });\n\n  var huHU = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Ft\"]\n  });\n\n  var itIT = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\", \"\"]\n  });\n\n  var jaJP = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"\", \"円\"]\n  });\n\n  var koKR = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₩\", \"\"]\n  });\n\n  var mkMK = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0ден.\"]\n  });\n\n  var nlNL = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\\xa0\", \"\"]\n  });\n\n  var plPL = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"zł\"]\n  });\n\n  var ptBR = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"R$\", \"\"]\n  });\n\n  var ruRU = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0руб.\"]\n  });\n\n  var svSE = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"SEK\"]\n  });\n\n  var zhCN = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"¥\", \"\"]\n  });\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  };\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  };\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  };\n\n  var format = defaultLocale.format;\n  var formatPrefix = defaultLocale.formatPrefix;\n\n  var version = \"0.4.2\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.formatPrefix = formatPrefix;\n  exports.locale = locale;\n  exports.localeCaEs = caES;\n  exports.localeCsCz = csCZ;\n  exports.localeDeCh = deCH;\n  exports.localeDeDe = deDE;\n  exports.localeEnCa = enCA;\n  exports.localeEnGb = enGB;\n  exports.localeEnUs = defaultLocale;\n  exports.localeEsEs = esES;\n  exports.localeFiFi = fiFI;\n  exports.localeFrCa = frCA;\n  exports.localeFrFr = frFR;\n  exports.localeHeIl = heIL;\n  exports.localeHuHu = huHU;\n  exports.localeItIt = itIT;\n  exports.localeJaJp = jaJP;\n  exports.localeKoKr = koKR;\n  exports.localeMkMk = mkMK;\n  exports.localeNlNl = nlNL;\n  exports.localePlPl = plPL;\n  exports.localePtBr = ptBR;\n  exports.localeRuRu = ruRU;\n  exports.localeSvSe = svSE;\n  exports.localeZhCn = zhCN;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-format/build/d3-format.js\n// module id = 1/F5\n// module chunks = 0","var gradient_id = 0;\n\nfunction Gradient(type) {\n  this.id = 'gradient_' + (gradient_id++);\n  this.type = type || 'linear';\n  this.stops = [];\n  this.x1 = 0;\n  this.x2 = 1;\n  this.y1 = 0;\n  this.y2 = 0;\n}\n\nvar prototype = Gradient.prototype;\n\nprototype.stop = function(offset, color) {\n  this.stops.push({\n    offset: offset,\n    color: color\n  });\n  return this;\n};\n\nmodule.exports = Gradient;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/Gradient.js\n// module id = 1C2Q\n// module chunks = 0","\"use strict\";\nvar filter;\n(function (filter_1) {\n    function parse(model) {\n        return model.transform().filter;\n    }\n    filter_1.parseUnit = parse;\n    function parseFacet(model) {\n        var filterComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.filter) {\n            filterComponent =\n                (filterComponent ? filterComponent + ' && ' : '') +\n                    childDataComponent.filter;\n            delete childDataComponent.filter;\n        }\n        return filterComponent;\n    }\n    filter_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var filterComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && childDataComponent.filter && childDataComponent.filter === filterComponent) {\n                delete childDataComponent.filter;\n            }\n        });\n        return filterComponent;\n    }\n    filter_1.parseLayer = parseLayer;\n    function assemble(component) {\n        var filter = component.filter;\n        return filter ? [{\n                type: 'filter',\n                test: filter\n            }] : [];\n    }\n    filter_1.assemble = assemble;\n})(filter = exports.filter || (exports.filter = {}));\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/filter.js\n// module id = 1PdY\n// module chunks = 0","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.valid > 1 ? this.dev / (this.valid-1) : 0',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.valid > 1 ? this.dev / this.valid : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stderr': measure({\n    name: 'stderr',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid * (this.valid-1))) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'variance', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; ++this.valid;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; --this.valid;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  ctr.fields = agg.map(util.$('out'));\n  return ctr;\n}\n\ntypes.create = create;\nmodule.exports = types;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/measures.js\n// module id = 2I0S\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Handler = require('../Handler'),\n    marks = require('./marks');\n\nfunction CanvasHandler() {\n  Handler.call(this);\n  this._down = null;\n  this._touch = null;\n  this._first = true;\n}\n\nvar base = Handler.prototype;\nvar prototype = (CanvasHandler.prototype = Object.create(base));\nprototype.constructor = CanvasHandler;\n\nprototype.initialize = function(el, pad, obj) {\n  // add event listeners\n  var canvas = this._canvas = DOM.find(el, 'canvas');\n  if (canvas) {\n    var that = this;\n    this.events.forEach(function(type) {\n      canvas.addEventListener(type, function(evt) {\n        if (prototype[type]) {\n          prototype[type].call(that, evt);\n        } else {\n          that.fire(type, evt);\n        }\n      });\n    });\n  }\n\n  return base.initialize.call(this, el, pad, obj);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext('2d');\n};\n\n// supported events\nprototype.events = [\n  'keydown',\n  'keypress',\n  'keyup',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'click',\n  'dblclick',\n  'wheel',\n  'mousewheel',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire('mousewheel', evt);\n};\n\nfunction move(moveEvent, overEvent, outEvent) {\n  return function(evt) {\n    var a = this._active,\n        p = this.pickEvent(evt);\n\n    if (p === a) {\n      // active item and picked item are the same\n      this.fire(moveEvent, evt); // fire move\n    } else {\n      // active item and picked item are different\n      this.fire(outEvent, evt);  // fire out for prior active item\n      this._active = p;            // set new active item\n      this.fire(overEvent, evt); // fire over for new active item\n      this.fire(moveEvent, evt); // fire move for new active item\n    }\n  };\n}\n\nfunction inactive(type) {\n  return function(evt) {\n    this.fire(type, evt);\n    this._active = null;\n  };\n}\n\nprototype.mousemove = move('mousemove', 'mouseover', 'mouseout');\nprototype.dragover  = move('dragover', 'dragenter', 'dragleave');\n\nprototype.mouseout  = inactive('mouseout');\nprototype.dragleave = inactive('dragleave');\n\nprototype.mousedown = function(evt) {\n  this._down = this._active;\n  this.fire('mousedown', evt);\n};\n\nprototype.click = function(evt) {\n  if (this._down === this._active) {\n    this.fire('click', evt);\n    this._down = null;\n  }\n};\n\nprototype.touchstart = function(evt) {\n  this._touch = this.pickEvent(evt.changedTouches[0]);\n\n  if (this._first) {\n    this._active = this._touch;\n    this._first = false;\n  }\n\n  this.fire('touchstart', evt, true);\n};\n\nprototype.touchmove = function(evt) {\n  this.fire('touchmove', evt, true);\n};\n\nprototype.touchend = function(evt) {\n  this.fire('touchend', evt, true);\n  this._touch = null;\n};\n\n// fire an event\nprototype.fire = function(type, evt, touch) {\n  var a = touch ? this._touch : this._active,\n      h = this._handlers[type], i, len;\n  if (h) {\n    evt.vegaType = type;\n    for (i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = this.eventName(type),\n      h = this._handlers;\n  (h[name] || (h[name] = [])).push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = this.eventName(type),\n      h = this._handlers[name], i;\n  if (!h) return;\n  for (i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\nprototype.pickEvent = function(evt) {\n  var rect = this._canvas.getBoundingClientRect(),\n      pad = this._padding, x, y;\n  return this.pick(this._scene,\n    x = (evt.clientX - rect.left),\n    y = (evt.clientY - rect.top),\n    x - pad.left, y - pad.top);\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      mark = marks[scene.marktype];\n  return mark.pick.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = CanvasHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/CanvasHandler.js\n// module id = 2zc7\n// module chunks = 0","var d3 = require('d3'),\n    Tuple = require('vega-dataflow/src/Tuple'),\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Voronoi(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    clipExtent: {type: 'array<value>', default: require('./screen').extent},\n    x: {type: 'field', default: 'layout_x'},\n    y: {type: 'field', default: 'layout_y'}\n  });\n\n  this._layout = d3.geom.voronoi();\n  this._output = {'path': 'layout_path'};\n\n  return this.mutates(true);\n}\n\nvar prototype = (Voronoi.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Voronoi;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['voronoi']);\n\n  // get variables\n  var pathname = this._output.path;\n\n  // configure layout\n  var polygons = this._layout\n    .clipExtent(this.param('clipExtent'))\n    .x(this.param('x').accessor)\n    .y(this.param('y').accessor)\n    (data);\n\n  // build and assign path strings\n  for (var i=0; i<data.length; ++i) {\n    if (polygons[i]) Tuple.set(data[i], pathname, 'M' + polygons[i].join('L') + 'Z');\n  }\n\n  // return changeset\n  input.fields[pathname] = 1;\n  return input;\n};\n\nmodule.exports = Voronoi;\n\nVoronoi.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Voronoi transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"voronoi\"]},\n    \"clipExtent\": {\n      \"description\": \"The min and max points at which to clip the voronoi diagram.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n                \"minItems\": 2,\n                \"maxItems\": 2\n              },\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [[-1e5,-1e5],[1e5,1e5]]\n    },\n    \"x\": {\n      \"description\": \"The input x coordinates.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"y\": {\n      \"description\": \"The input y coordinates.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Voronoi.js\n// module id = 3C/O\n// module chunks = 0","var DEPS = require('./Dependencies').ALL,\n    nodeID = 0;\n\nfunction Node(graph) {\n  if (graph) this.init(graph);\n}\n\nvar Flags = Node.Flags = {\n  Router:     0x01, // Responsible for propagating tuples, cannot be skipped.\n  Collector:  0x02, // Holds a materialized dataset, pulse node to reflow.\n  Produces:   0x04, // Produces new tuples. \n  Mutates:    0x08, // Sets properties of incoming tuples.\n  Reflows:    0x10, // Forwards a reflow pulse.\n  Batch:      0x20  // Performs batch data processing, needs collector.\n};\n\nvar prototype = Node.prototype;\n\nprototype.init = function(graph) {\n  this._id = ++nodeID;\n  this._graph = graph;\n  this._rank  = graph.rank(); // Topological sort by rank\n  this._qrank = null; // Rank when enqueued for propagation\n  this._stamp = 0;    // Last stamp seen\n\n  this._listeners = [];\n  this._listeners._ids = {}; // To prevent duplicate listeners\n\n  // Initialize dependencies.\n  this._deps = {};\n  for (var i=0, n=DEPS.length; i<n; ++i) {\n    this._deps[DEPS[i]] = [];\n  }\n\n  // Initialize status flags.\n  this._flags = 0;\n\n  return this;\n};\n\nprototype.rank = function() {\n  return this._rank;\n};\n\nprototype.rerank = function() {\n  var g = this._graph, \n      q = [this],\n      cur;\n\n  while (q.length) {\n    cur = q.shift();\n    cur._rank = g.rank();\n    q.unshift.apply(q, cur.listeners());\n  }\n\n  return this;\n};\n\nprototype.qrank = function(/* set */) {\n  if (!arguments.length) return this._qrank;\n  return (this._qrank = this._rank, this);\n};\n\nprototype.last = function(stamp) { \n  if (!arguments.length) return this._stamp;\n  return (this._stamp = stamp, this);\n};\n\n// -- status flags ---\n\nprototype._setf = function(v, b) {\n  if (b) { this._flags |= v; } else { this._flags &= ~v; }\n  return this;\n};\n\nprototype.router = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Router);\n  return this._setf(Flags.Router, state);\n};\n\nprototype.collector = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Collector);\n  return this._setf(Flags.Collector, state);\n};\n\nprototype.produces = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Produces);\n  return this._setf(Flags.Produces, state);\n};\n\nprototype.mutates = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Mutates);\n  return this._setf(Flags.Mutates, state);\n};\n\nprototype.reflows = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Reflows);\n  return this._setf(Flags.Reflows, state);\n};\n\nprototype.batch = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Batch);\n  return this._setf(Flags.Batch, state);\n};\n\nprototype.dependency = function(type, deps) {\n  var d = this._deps[type],\n      n = d._names || (d._names = {});  // To prevent dupe deps\n\n  // Get dependencies of the given type\n  if (arguments.length === 1) {\n    return d;\n  }\n\n  if (deps === null) {\n    // Clear dependencies of the given type\n    d.splice(0, d.length);\n    d._names = {};\n  } else if (!Array.isArray(deps)) {\n    // Separate this case to avoid cost of array creation\n    if (n[deps]) return this;\n    d.push(deps);\n    n[deps] = 1;\n  } else {\n    for (var i=0, len=deps.length, dep; i<len; ++i) {\n      dep = deps[i];\n      if (n[dep]) continue;\n      d.push(dep);\n      n[dep] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.listeners = function() {\n  return this._listeners;\n};\n\nprototype.addListener = function(l) {\n  if (!(l instanceof Node)) {\n    throw Error('Listener is not a Node');\n  }\n  if (this._listeners._ids[l._id]) return this;\n\n  this._listeners.push(l);\n  this._listeners._ids[l._id] = 1;\n  if (this._rank > l._rank) {\n    l.rerank();\n  }\n\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  if (!this._listeners._ids[l._id]) return false;\n  \n  var idx = this._listeners.indexOf(l),\n      b = idx >= 0;\n\n  if (b) {\n    this._listeners.splice(idx, 1);\n    this._listeners._ids[l._id] = null;\n  }\n  return b;\n};\n\nprototype.disconnect = function() {\n  this._listeners = [];\n  this._listeners._ids = {};\n};\n\n// Evaluate this dataflow node for the current pulse.\n// Subclasses should override to perform custom processing.\nprototype.evaluate = function(pulse) {\n  return pulse;\n};\n\n// Should this node be re-evaluated for the current pulse?\n// Searches pulse to see if any dependencies have updated.\nprototype.reevaluate = function(pulse) {\n  var prop, dep, i, n, j, m;\n\n  for (i=0, n=DEPS.length; i<n; ++i) {\n    prop = DEPS[i];\n    dep = this._deps[prop];\n    for (j=0, m=dep.length; j<m; ++j) {\n      if (pulse[prop][dep[j]]) return true;\n    }\n  }\n\n  return false;\n};\n\nNode.reset = function() { nodeID = 0; };\n\nmodule.exports = Node;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Node.js\n// module id = 3FFs\n// module chunks = 0","var bound = require('../util/bound');\n\nvar sets = [\n  'items',\n  'axisItems',\n  'legendItems'\n];\n\nvar keys = [\n  'marktype', 'name', 'interactive', 'clip',\n  'items', 'axisItems', 'legendItems', 'layer',\n  'x', 'y', 'width', 'height', 'align', 'baseline',             // layout\n  'fill', 'fillOpacity', 'opacity',                             // fill\n  'stroke', 'strokeOpacity', 'strokeWidth', 'strokeCap',        // stroke\n  'strokeDash', 'strokeDashOffset',                             // stroke dash\n  'startAngle', 'endAngle', 'innerRadius', 'outerRadius',       // arc\n  'interpolate', 'tension', 'orient',                           // area, line\n  'url',                                                        // image\n  'path',                                                       // path\n  'x2', 'y2',                                                   // rule\n  'size', 'shape',                                              // symbol\n  'text', 'angle', 'theta', 'radius', 'dx', 'dy',               // text\n  'font', 'fontSize', 'fontWeight', 'fontStyle', 'fontVariant'  // font\n];\n\nfunction toJSON(scene, indent) {\n  return JSON.stringify(scene, keys, indent);\n}\n\nfunction fromJSON(json) {\n  var scene = (typeof json === 'string' ? JSON.parse(json) : json);\n  return initialize(scene);\n}\n\nfunction initialize(scene) {\n  var type = scene.marktype,\n      i, n, s, m, items;\n\n  for (s=0, m=sets.length; s<m; ++s) {\n    if ((items = scene[sets[s]])) {\n      for (i=0, n=items.length; i<n; ++i) {\n        items[i][type ? 'mark' : 'group'] = scene;\n        if (!type || type === 'group') {\n          initialize(items[i]);\n        }\n      }\n    }\n  }\n\n  if (type) bound.mark(scene);\n  return scene;\n}\n\nmodule.exports = {\n  toJSON:   toJSON,\n  fromJSON: fromJSON\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/scene.js\n// module id = 3Gpk\n// module chunks = 0","function size(item) {\n  return item.fontSize != null ? item.fontSize : 11;\n}\n\nmodule.exports = {\n  size: size,\n  value: function(s) {\n    return s != null ? String(s) : '';\n  },\n  font: function(item, quote) {\n    var font = item.font;\n    if (quote && font) {\n      font = String(font).replace(/\\\"/g, '\\'');\n    }\n    return '' +\n      (item.fontStyle ? item.fontStyle + ' ' : '') +\n      (item.fontVariant ? item.fontVariant + ' ' : '') +\n      (item.fontWeight ? item.fontWeight + ' ' : '') +\n      size(item) + 'px ' +\n      (font || 'sans-serif');\n  },\n  offset: function(item) {\n    // perform our own font baseline calculation\n    // why? not all browsers support SVG 1.1 'alignment-baseline' :(\n    var baseline = item.baseline,\n        h = size(item);\n    return Math.round(\n      baseline === 'top'    ?  0.93*h :\n      baseline === 'middle' ?  0.30*h :\n      baseline === 'bottom' ? -0.21*h : 0\n    );\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/text.js\n// module id = 3Scv\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    Deps = df.Dependencies,\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    summarize: {\n      type: 'custom',\n      set: function(summarize) {\n        var signalDeps = {},\n            tx = this._transform,\n            i, len, f, fields, name, ops;\n\n        if (!dl.isArray(fields = summarize)) { // Object syntax from dl\n          fields = [];\n          for (name in summarize) {\n            ops = dl.array(summarize[name]);\n            fields.push({field: name, ops: ops});\n          }\n        }\n\n        function sg(x) { if (x.signal) signalDeps[x.signal] = 1; }\n\n        for (i=0, len=fields.length; i<len; ++i) {\n          f = fields[i];\n          if (f.field.signal) { signalDeps[f.field.signal] = 1; }\n          dl.array(f.ops).forEach(sg);\n          dl.array(f.as).forEach(sg);\n        }\n\n        tx._fields = fields;\n        tx._aggr = null;\n        tx.dependency(Deps.SIGNALS, dl.keys(signalDeps));\n        return tx;\n      }\n    }\n  });\n\n  this._aggr  = null; // dl.Aggregator\n  this._input = null; // Used by Facetor._on_keep.\n  this._args  = null; // To cull re-computation.\n  this._fields = [];\n  this._out = [];\n\n  this._type = TYPES.TUPLE;\n  this._acc = {groupby: dl.true, value: dl.true};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Aggregate.prototype = Object.create(Transform.prototype));\nprototype.constructor = Aggregate;\n\nvar TYPES = Aggregate.TYPES = {\n  VALUE: 1,\n  TUPLE: 2,\n  MULTI: 3\n};\n\nAggregate.VALID_OPS = [\n  'values', 'count', 'valid', 'missing', 'distinct',\n  'sum', 'mean', 'average', 'variance', 'variancep', 'stdev',\n  'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max',\n  'argmin', 'argmax'\n];\n\nprototype.type = function(type) {\n  return (this._type = type, this);\n};\n\nprototype.accessors = function(groupby, value) {\n  var acc = this._acc;\n  acc.groupby = dl.$(groupby) || dl.true;\n  acc.value = dl.$(value) || dl.true;\n};\n\nprototype.aggr = function() {\n  if (this._aggr) return this._aggr;\n\n  var g = this._graph,\n      hasGetter = false,\n      args = [],\n      groupby = this.param('groupby').field,\n      value = function(x) { return x.signal ? g.signalRef(x.signal) : x; };\n\n  // Prepare summarize fields.\n  var fields = this._fields.map(function(f) {\n    var field = {\n      name: value(f.field),\n      as:   dl.array(f.as),\n      ops:  dl.array(value(f.ops)).map(value),\n      get:  f.get\n    };\n    hasGetter = hasGetter || field.get != null;\n    args.push(field.name);\n    return field;\n  });\n\n  // If there is an arbitrary getter, all bets are off.\n  // Otherwise, we can check argument fields to cull re-computation.\n  groupby.forEach(function(g) {\n    if (g.get) hasGetter = true;\n    args.push(g.name || g);\n  });\n  this._args = hasGetter || !fields.length ? null : args;\n\n  if (!fields.length) fields = {'*': 'values'};\n\n  // Instantiate our aggregator instance.\n  // Facetor is a special subclass that can facet into data pipelines.\n  var aggr = this._aggr = new Facetor()\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  // Collect output fields sets by this aggregate.\n  this._out = getFields(aggr);\n\n  // If we are processing tuples, key them by '_id'.\n  if (this._type !== TYPES.VALUE) { aggr.key('_id'); }\n\n  return aggr;\n};\n\nfunction getFields(aggr) {\n  // Collect the output fields set by this aggregate.\n  var f = [], i, n, j, m, dims, vals, meas;\n\n  dims = aggr._dims;\n  for (i=0, n=dims.length; i<n; ++i) {\n    f.push(dims[i].name);\n  }\n\n  vals = aggr._aggr;\n  for (i=0, n=vals.length; i<n; ++i) {\n    meas = vals[i].measures.fields;\n    for (j=0, m=meas.length; j<m; ++j) {\n      f.push(meas[j]);\n    }\n  }\n\n  return f;\n}\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['aggregate']);\n\n  var output = ChangeSet.create(input),\n      aggr = this.aggr(),\n      out = this._out,\n      args = this._args,\n      reeval = true,\n      p = Tuple.prev,\n      add, rem, mod, mark, i;\n\n  // Upon reset, retract prior tuples and re-initialize.\n  if (reset) {\n    output.rem.push.apply(output.rem, aggr.result());\n    aggr.clear();\n    this._aggr = null;\n    aggr = this.aggr();\n  }\n\n  // Get update methods according to input type.\n  if (this._type === TYPES.TUPLE) {\n    add  = function(x) { aggr._add(x); Tuple.prev_init(x); };\n    rem  = function(x) { aggr._rem(p(x)); };\n    mod  = function(x) { aggr._mod(x, p(x)); };\n    mark = function(x) { aggr._markMod(x, p(x)); };\n  } else {\n    var gby = this._acc.groupby,\n        val = this._acc.value,\n        get = this._type === TYPES.VALUE ? val : function(x) {\n          return { _id: x._id, groupby: gby(x), value: val(x) };\n        };\n    add  = function(x) { aggr._add(get(x)); Tuple.prev_init(x); };\n    rem  = function(x) { aggr._rem(get(p(x))); };\n    mod  = function(x) { aggr._mod(get(x), get(p(x))); };\n    mark = function(x) { aggr._mark(get(x), get(p(x))); };\n  }\n\n  input.add.forEach(add);\n  if (reset) {\n    // A signal change triggered reflow. Add everything.\n    // No need for rem, we cleared the aggregator.\n    input.mod.forEach(add);\n  } else {\n    input.rem.forEach(rem);\n\n    // If possible, check argument fields to see if we need to re-process mods.\n    if (args) for (i=0, reeval=false; i<args.length; ++i) {\n      if (input.fields[args[i]]) { reeval = true; break; }\n    }\n    input.mod.forEach(reeval ? mod : mark);\n  }\n\n  // Indicate output fields and return aggregate tuples.\n  for (i=0; i<out.length; ++i) {\n    output.fields[out[i]] = 1;\n  }\n  return (aggr._input = input, aggr.changes(output));\n};\n\nmodule.exports = Aggregate;\n\nvar VALID_OPS = Aggregate.VALID_OPS;\n\nAggregate.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Aggregate transform\",\n  \"description\": \"Compute summary aggregate statistics\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"aggregate\"]},\n    \"groupby\": {\n      \"type\": \"array\",\n      \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]},\n      \"description\": \"A list of fields to split the data into groups.\"\n    },\n    \"summarize\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"array\",\n            \"description\": \"An array of aggregate functions.\",\n            \"items\": {\"oneOf\": [{\"enum\": VALID_OPS}, {\"$ref\": \"#/refs/signal\"}]}\n          }\n        },\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\n                \"description\": \"The name of the field to aggregate.\",\n                \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n              },\n              \"ops\": {\n                \"type\": \"array\",\n                \"description\": \"An array of aggregate functions.\",\n                \"items\": {\"oneOf\": [{\"enum\": VALID_OPS}, {\"$ref\": \"#/refs/signal\"}]}\n              },\n              \"as\": {\n                \"type\": \"array\",\n                \"description\": \"An optional array of names to use for the output fields.\",\n                \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n              }\n            },\n            \"additionalProperties\": false,\n            \"required\": [\"field\", \"ops\"]\n          }\n        }\n      ]\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Aggregate.js\n// module id = 3Y21\n// module chunks = 0","var util = require('./util'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports;\n\nu.$year   = util.$func('year', time.year.unit);\nu.$month  = util.$func('month', time.months.unit);\nu.$date   = util.$func('date', time.dates.unit);\nu.$day    = util.$func('day', time.weekdays.unit);\nu.$hour   = util.$func('hour', time.hours.unit);\nu.$minute = util.$func('minute', time.minutes.unit);\nu.$second = util.$func('second', time.seconds.unit);\n\nu.$utcYear   = util.$func('utcYear', utc.year.unit);\nu.$utcMonth  = util.$func('utcMonth', utc.months.unit);\nu.$utcDate   = util.$func('utcDate', utc.dates.unit);\nu.$utcDay    = util.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = util.$func('utcHour', utc.hours.unit);\nu.$utcMinute = util.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = util.$func('utcSecond', utc.seconds.unit);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/accessor.js\n// module id = 3bKu\n// module chunks = 0","var df = require('vega-dataflow'),\n    Base = df.Node.prototype, // jshint ignore:line\n    Deps = df.Dependencies,\n    Parameter = require('./Parameter');\n\nfunction Transform(graph) {\n  if (graph) Base.init.call(this, graph);\n}\n\nTransform.addParameters = function(proto, params) {\n  proto._parameters = proto._parameters || {};\n  for (var name in params) {\n    var p = params[name],\n        param = new Parameter(name, p.type, proto);\n\n    proto._parameters[name] = param;\n\n    if (p.type === 'custom') {\n      if (p.set) param.set = p.set.bind(param);\n      if (p.get) param.get = p.get.bind(param);\n    }\n\n    if (p.hasOwnProperty('default')) param.set(p.default);\n  }\n};\n\nvar prototype = (Transform.prototype = Object.create(Base));\nprototype.constructor = Transform;\n\nprototype.param = function(name, value) {\n  var param = this._parameters[name];\n  return (param === undefined) ? this :\n    (arguments.length === 1) ? param.get() : param.set(value);\n};\n\n// Perform transformation. Subclasses should override.\nprototype.transform = function(input/*, reset */) {\n  return input;\n};\n\nprototype.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed.\n  var reset = this._stamp < input.stamp &&\n    this.dependency(Deps.SIGNALS).reduce(function(c, s) {\n      return c += input.signals[s] ? 1 : 0;\n    }, 0);\n  return this.transform(input, reset);\n};\n\nprototype.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Transform.js\n// module id = 4JPs\n// module chunks = 0","function toMap(list) {\n  var map = {}, i, n;\n  for (i=0, n=list.length; i<n; ++i) map[list[i]] = 1;\n  return map;\n}\n\nfunction keys(object) {\n  var list = [], k;\n  for (k in object) list.push(k);\n  return list;\n}\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants'),\n      functions = (opt.functions || require('./functions'))(codegen),\n      functionDefs = opt.functionDefs ? opt.functionDefs(codegen) : {},\n      idWhiteList = opt.idWhiteList ? toMap(opt.idWhiteList) : null,\n      idBlackList = opt.idBlackList ? toMap(opt.idBlackList) : null,\n      memberDepth = 0,\n      FIELD_VAR = opt.fieldVar || 'datum',\n      GLOBAL_VAR = opt.globalVar || 'signals',\n      globals = {},\n      fields = {},\n      dataSources = {};\n\n  function codegen_wrap(ast) {\n    var retval = {\n      code: codegen(ast),\n      globals: keys(globals),\n      fields: keys(fields),\n      dataSources: keys(dataSources),\n      defs: functionDefs\n    };\n    globals = {};\n    fields = {};\n    dataSources = {};\n    return retval;\n  }\n\n  /* istanbul ignore next */\n  var lookupGlobal = typeof GLOBAL_VAR === 'function' ? GLOBAL_VAR :\n    function (id) {\n      return GLOBAL_VAR + '[\"' + id + '\"]';\n    };\n\n  function codegen(ast) {\n    if (typeof ast === 'string') return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error('Unsupported type: ' + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    'Literal': function(n) {\n        return n.raw;\n      },\n    'Identifier': function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            globals[id] = 1;\n            return lookupGlobal(id);\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error('Illegal identifier: ' + id);\n        }\n        return id;\n      },\n    'Program': function(n) {\n        return n.body.map(codegen).join('\\n');\n      },\n    'MemberExpression': function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === FIELD_VAR) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? '.'+p : '['+p+']');\n      },\n    'CallExpression': function(n) {\n        if (n.callee.type !== 'Identifier') {\n          throw new Error('Illegal callee type: ' + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error('Unrecognized function: ' + callee);\n        return fn instanceof Function ?\n          fn(args, globals, fields, dataSources) :\n          fn + '(' + args.map(codegen).join(',') + ')';\n      },\n    'ArrayExpression': function(n) {\n        return '[' + n.elements.map(codegen).join(',') + ']';\n      },\n    'BinaryExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'UnaryExpression': function(n) {\n        return '(' + n.operator + codegen(n.argument) + ')';\n      },\n    'ConditionalExpression': function(n) {\n        return '(' + codegen(n.test) +\n          '?' + codegen(n.consequent) +\n          ':' + codegen(n.alternate) +\n          ')';\n      },\n    'LogicalExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'ObjectExpression': function(n) {\n        return '{' + n.properties.map(codegen).join(',') + '}';\n      },\n    'Property': function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + ':' + codegen(n.value);\n      },\n    'ExpressionStatement': function(n) {\n        return codegen(n.expression);\n      }\n  };\n\n  codegen_wrap.functions = functions;\n  codegen_wrap.functionDefs = functionDefs;\n  codegen_wrap.constants = constants;\n  return codegen_wrap;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/codegen.js\n// module id = 4XOj\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field:      {type: 'field', default: null},\n    startAngle: {type: 'value', default: 0},\n    endAngle:   {type: 'value', default: 2 * Math.PI},\n    sort:       {type: 'value', default: false}\n  });\n\n  this._output = {\n    'start': 'layout_start',\n    'end':   'layout_end',\n    'mid':   'layout_mid'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Pie.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Pie;\n\nfunction ones() { return 1; }\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['pie']);\n\n  var output = this._output,\n      field = this.param('field').accessor || ones,\n      start = this.param('startAngle'),\n      stop = this.param('endAngle'),\n      sort = this.param('sort');\n\n  var values = data.map(field),\n      a = start,\n      k = (stop - start) / dl.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    Tuple.set(t, output.start, a);\n    Tuple.set(t, output.mid, (a + 0.5 * v * k));\n    Tuple.set(t, output.end, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\nPie.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Pie transform\",\n  \"description\": \"Computes a pie chart layout.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"pie\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The data values to encode as angular spans. \" +\n        \"If this property is omitted, all pie slices will have equal spans.\"\n    },\n    \"startAngle\": {\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 2 * Math.PI\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"endAngle\": {\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 2 * Math.PI\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 2 * Math.PI,\n    },\n    \"sort\": {\n      \"description\": \" If true, will sort the data prior to computing angles.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"layout_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"layout_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"layout_mid\"}\n      }\n    }\n  },\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Pie.js\n// module id = 58eP\n// module chunks = 0","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (!load.useXHR && startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (load.useXHR) {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    } else {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  return load.loader(opt, callback);\n}\n\nfunction loader(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + opt.url);\n  } else if (load.useXHR) {\n    // on client, use xhr\n    return load.xhr(url, opt, callback);\n  } else if (startsWith(url, fileProtocol)) {\n    // on server, if url starts with 'file://', strip it and load from file\n    return load.file(url.slice(fileProtocol.length), opt, callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // on server, if no protocol assume file\n    return load.file(url, opt, callback);\n  } else {\n    // for regular URLs on server\n    return load.http(url, opt, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, opt, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (typeof XDomainRequest !== 'undefined' &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n\n  request.open('GET', url, async);\n  /* istanbul ignore else */\n  if (request.setRequestHeader) {\n    var headers = util.extend({}, load.headers, opt.headers);\n    for (var name in headers) {\n      request.setRequestHeader(name, headers[name]);\n    }\n  }\n  request.send();\n\n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, opt, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  fs.readFile(filename, callback);\n}\n\nfunction http(url, opt, callback) {\n  var headers = util.extend({}, load.headers, opt.headers);\n\n  var options = {url: url, encoding: null, gzip: true, headers: headers};\n  if (!callback) {\n    return require('sync-request')('GET', url, options).getBody();\n  }\n  require('request')(options, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      error = error ||\n        'Load failed with response code ' + response.statusCode + '.';\n      callback(error, null);\n    }\n  });\n}\n\nfunction startsWith(string, searchString) {\n  return string == null ? false : string.lastIndexOf(searchString, 0) === 0;\n}\n\n// Allow these functions to be overriden by the user of the library\nload.loader = loader;\nload.sanitizeUrl = sanitizeUrl;\nload.xhr = xhr;\nload.file = file;\nload.http = http;\n\n// Default settings\nload.useXHR = (typeof XMLHttpRequest !== 'undefined');\nload.headers = {};\n\nmodule.exports = load;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/load.js\n// module id = 5AQc\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction CountPattern(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field:     {type: 'field', default: 'data'},\n    pattern:   {type: 'value', default: '[\\\\w\\']+'},\n    case:      {type: 'value', default: 'lower'},\n    stopwords: {type: 'value', default: ''}\n  });\n\n  this._output = {text: 'text', count: 'count'};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (CountPattern.prototype = Object.create(Transform.prototype));\nprototype.constructor = CountPattern;\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['countpattern']);\n\n  var get = this.param('field').accessor,\n      pattern = this.param('pattern'),\n      stop = this.param('stopwords'),\n      rem = false;\n\n  // update parameters\n  if (this._stop !== stop) {\n    this._stop = stop;\n    this._stop_re = new RegExp('^' + stop + '$', 'i');\n    reset = true;\n  }\n\n  if (this._pattern !== pattern) {\n    this._pattern = pattern;\n    this._match = new RegExp(this._pattern, 'g');\n    reset = true;\n  }\n\n  if (reset) this._counts = {};\n\n  function curr(t) { return (Tuple.prev_init(t), get(t)); }\n  function prev(t) { return get(Tuple.prev(t)); }\n\n  this._add(input.add, curr);\n  if (!reset) this._rem(input.rem, prev);\n  if (reset || (rem = input.fields[get.field])) {\n    if (rem) this._rem(input.mod, prev);\n    this._add(input.mod, curr);\n  }\n\n  // generate output tuples\n  return this._changeset(input);\n};\n\nprototype._changeset = function(input) {\n  var counts = this._counts,\n      tuples = this._tuples || (this._tuples = {}),\n      change = df.ChangeSet.create(input),\n      out = this._output, w, t, c;\n\n  for (w in counts) {\n    t = tuples[w];\n    c = counts[w] || 0;\n    if (!t && c) {\n      tuples[w] = (t = Tuple.ingest({}));\n      t[out.text] = w;\n      t[out.count] = c;\n      change.add.push(t);\n    } else if (c === 0) {\n      if (t) change.rem.push(t);\n      delete counts[w];\n      delete tuples[w];\n    } else if (t[out.count] !== c) {\n      Tuple.set(t, out.count, c);\n      change.mod.push(t);\n    }\n  }\n  return change;\n};\n\nprototype._tokenize = function(text) {\n  switch (this.param('case')) {\n    case 'upper': text = text.toUpperCase(); break;\n    case 'lower': text = text.toLowerCase(); break;\n  }\n  return text.match(this._match);\n};\n\nprototype._add = function(tuples, get) {\n  var counts = this._counts,\n      stop = this._stop_re,\n      tok, i, j, t;\n\n  for (j=0; j<tuples.length; ++j) {\n    tok = this._tokenize(get(tuples[j]));\n    for (i=0; i<tok.length; ++i) {\n      if (!stop.test(t=tok[i])) {\n        counts[t] = 1 + (counts[t] || 0);\n      }\n    }\n  }\n};\n\nprototype._rem = function(tuples, get) {\n  var counts = this._counts,\n      stop = this._stop_re,\n      tok, i, j, t;\n\n  for (j=0; j<tuples.length; ++j) {\n    tok = this._tokenize(get(tuples[j]));\n    for (i=0; i<tok.length; ++i) {\n      if (!stop.test(t=tok[i])) {\n        counts[t] -= 1;\n      }\n    }\n  }\n};\n\nmodule.exports = CountPattern;\n\nCountPattern.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"CountPattern transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"countpattern\"]},\n    \"field\": {\n      \"description\": \"The field containing the text to analyze.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 'data'\n    },\n    \"pattern\": {\n      \"description\": \"A regexp pattern for matching words in text.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"[\\\\w\\']+\"\n    },\n    \"case\": {\n      \"description\": \"Text case transformation to apply.\",\n      \"oneOf\": [{\"enum\": [\"lower\", \"upper\", \"none\"]}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"lower\"\n    },\n    \"stopwords\": {\n      \"description\": \"A regexp pattern for matching stopwords to omit.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"text\": {\"type\": \"string\", \"default\": \"text\"},\n        \"count\": {\"type\": \"string\", \"default\": \"count\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/CountPattern.js\n// module id = 6+LD\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n    selector = require('vega-event-selector'),\n    parseSignals = require('./signals');\n\nvar GATEKEEPER = '_vgGATEKEEPER',\n    EVALUATOR  = '_vgEVALUATOR';\n\nvar vgEvent = {\n  getItem: function() { return this.item; },\n  getGroup: function(name) {\n    var group = name ? this.name[name] : this.group,\n        mark = group && group.mark,\n        interactive = mark && (mark.interactive || mark.interactive === undefined);\n    return interactive ? group : {};\n  },\n  getXY: function(item) {\n      var p = {x: this.x, y: this.y};\n      if (typeof item === 'string') {\n        item = this.name[item];\n      }\n      for (; item; item = item.mark && item.mark.group) {\n        p.x -= item.x || 0;\n        p.y -= item.y || 0;\n      }\n      return p;\n    },\n  getX: function(item) { return this.getXY(item).x; },\n  getY: function(item) { return this.getXY(item).y; }\n};\n\nfunction parseStreams(view) {\n  var model = view.model(),\n      trueFn  = model.expr('true'),\n      falseFn = model.expr('false'),\n      spec    = model.defs().signals,\n      registry = {handlers: {}, nodes: {}},\n      internal = dl.duplicate(registry),  // Internal event processing\n      external = dl.duplicate(registry);  // External event processing\n\n  dl.array(spec).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if (sig.expr) return;  // Cannot have an expr and stream definition.\n\n    dl.array(sig.streams).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = model.expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse.\n  dl.keys(internal.handlers).forEach(function(type) {\n    view.on(type, function(evt, item) {\n      evt.preventDefault(); // stop text selection\n      extendEvent(evt, item);\n      fire(internal, type, (item && item.datum) || {}, (item && item.mark && item.mark.group && item.mark.group.datum) || {}, evt);\n    });\n  });\n\n  // add external event listeners\n  dl.keys(external.handlers).forEach(function(type) {\n    if (typeof window === 'undefined') return; // No external support\n\n    var h = external.handlers[type],\n        t = type.split(':'), // --> no element pseudo-selectors\n        elt = (t[0] === 'window') ? [window] :\n              window.document.querySelectorAll(t[0]);\n\n    function handler(evt) {\n      extendEvent(evt);\n      fire(external, type, d3.select(this).datum(), this.parentNode && d3.select(this.parentNode).datum(), evt);\n    }\n\n    for (var i=0; i<elt.length; ++i) {\n      elt[i].addEventListener(t[1], handler);\n    }\n\n    h.elements = elt;\n    h.listener = handler;\n  });\n\n  // remove external event listeners\n  external.detach = function() {\n    dl.keys(external.handlers).forEach(function(type) {\n      var h = external.handlers[type],\n          t = type.split(':'),\n          elt = dl.array(h.elements);\n\n      for (var i=0; i<elt.length; ++i) {\n        elt[i].removeEventListener(t[1], h.listener);\n      }\n    });\n  };\n\n  // export detach method\n  return external.detach;\n\n  // -- helper functions -----\n\n  function extendEvent(evt, item) {\n    var mouse = d3.mouse((d3.event=evt, view.renderer().scene())),\n        pad = view.padding(),\n        names = {}, mark, group, i;\n\n    if (item) {\n      mark = item.mark;\n      group = mark.marktype === 'group' ? item : mark.group;\n      for (i=item; i!=null; i=i.mark.group) {\n        if (i.mark.def.name) {\n          names[i.mark.def.name] = i;\n        }\n      }\n    }\n    names.root = view.model().scene().items[0];\n\n    evt.vg = Object.create(vgEvent);\n    evt.vg.group = group;\n    evt.vg.item = item || {};\n    evt.vg.name = names;\n    evt.vg.x = mouse[0] - pad.left;\n    evt.vg.y = mouse[1] - pad.top;\n  }\n\n  function fire(registry, type, datum, parent, evt) {\n    var handlers = registry.handlers[type],\n        node = registry.nodes[type],\n        cs = df.ChangeSet.create(null, true),\n        filtered = false,\n        val, i, n, h;\n\n    function invoke(f) {\n      return !f.fn(datum, parent, evt);\n    }\n\n    for (i=0, n=handlers.length; i<n; ++i) {\n      h = handlers[i];\n      filtered = h.filters.some(invoke);\n      if (filtered) continue;\n\n      val = h.exp.fn(datum, parent, evt);\n      if (h.spec.scale) {\n        val = parseSignals.scale(model, h.spec, val, datum, evt);\n      }\n\n      if (val !== h.signal.value() || h.signal.verbose()) {\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n    }\n\n    model.propagate(cs, node);\n  }\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if (s.event)       domEvent(sig, s, exp, spec);\n      else if (s.signal) signal(sig, s, exp, spec);\n      else if (s.start)  orderedStream(sig, s, exp, spec);\n      else if (s.stream) {\n        if (s.filters) s.stream.forEach(function(ms) {\n          ms.filters = dl.array(ms.filters).concat(s.filters);\n        });\n        mergedStream(sig, s.stream, exp, spec);\n      }\n    });\n  }\n\n  function domEvent(sig, selector, exp, spec) {\n    var evt = selector.event,\n        name = selector.name,\n        mark = selector.mark,\n        target   = selector.target,\n        filters  = dl.array(selector.filters),\n        registry = target ? external : internal,\n        type = target ? target+':'+evt : evt,\n        node = registry.nodes[type] || (registry.nodes[type] = new df.Node(model)),\n        handlers = registry.handlers[type] || (registry.handlers[type] = []);\n\n    if (name) {\n      filters.push('!!event.vg.name[\"' + name + '\"]'); // Mimic event bubbling\n    } else if (mark) {\n      filters.push('event.vg.item.mark && event.vg.item.mark.marktype==='+dl.str(mark));\n    }\n\n    handlers.push({\n      signal: sig,\n      exp: exp,\n      spec: spec,\n      filters: filters.map(function(f) { return model.expr(f); })\n    });\n\n    node.addListener(sig);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = sig.name(), s = model.signal(n+EVALUATOR, null);\n    s.evaluate = function(input) {\n      if (!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = exp.fn();\n      if (spec.scale) {\n        val = parseSignals.scale(model, spec, val);\n      }\n\n      if (val !== sig.value() || sig.verbose()) {\n        sig.value(val);\n        input.signals[n] = 1;\n        input.reflow = true;\n      }\n\n      return input;\n    };\n    s.dependency(df.Dependencies.SIGNALS, selector.signal);\n    s.addListener(sig);\n    model.signal(selector.signal).addListener(s);\n  }\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(),\n        gk = name + GATEKEEPER,\n        middle  = selector.middle,\n        filters = middle.filters || (middle.filters = []),\n        gatekeeper = model.signal(gk) || model.signal(gk, false);\n\n    // Register an anonymous signal to act as a gatekeeper. Its value is\n    // true or false depending on whether the start or end streams occur.\n    // The middle signal then simply filters for the gatekeeper's value.\n    mergedStream(gatekeeper, [selector.start], trueFn, {});\n    mergedStream(gatekeeper, [selector.end], falseFn, {});\n\n    filters.push(gatekeeper.name());\n    mergedStream(sig, [selector.middle], exp, spec);\n  }\n}\n\nmodule.exports = parseStreams;\nparseStreams.schema = {\n  \"defs\": {\n    \"streams\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n\n        \"properties\": {\n          \"type\": {\"type\": \"string\"},\n          \"expr\": {\"type\": \"string\"},\n          \"scale\": {\"$ref\": \"#/refs/scopedScale\"}\n        },\n\n        \"additionalProperties\": false,\n        \"required\": [\"type\", \"expr\"]\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/streams.js\n// module id = 6gf1\n// module chunks = 0","\"use strict\";\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar time_1 = require('./../time');\nvar timeUnit;\n(function (timeUnit) {\n    function parse(model) {\n        return model.reduce(function (timeUnitComponent, fieldDef, channel) {\n            var ref = fielddef_1.field(fieldDef, { nofn: true, datum: true });\n            if (fieldDef.type === type_1.TEMPORAL && fieldDef.timeUnit) {\n                var hash = fielddef_1.field(fieldDef);\n                timeUnitComponent[hash] = {\n                    type: 'formula',\n                    field: fielddef_1.field(fieldDef),\n                    expr: time_1.parseExpression(fieldDef.timeUnit, ref)\n                };\n            }\n            return timeUnitComponent;\n        }, {});\n    }\n    timeUnit.parseUnit = parse;\n    function parseFacet(model) {\n        var timeUnitComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(timeUnitComponent, childDataComponent.timeUnit);\n            delete childDataComponent.timeUnit;\n        }\n        return timeUnitComponent;\n    }\n    timeUnit.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var timeUnitComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(timeUnitComponent, childDataComponent.timeUnit);\n                delete childDataComponent.timeUnit;\n            }\n        });\n        return timeUnitComponent;\n    }\n    timeUnit.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.vals(component.timeUnit);\n    }\n    timeUnit.assemble = assemble;\n})(timeUnit = exports.timeUnit || (exports.timeUnit = {}));\n//# sourceMappingURL=timeunit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/timeunit.js\n// module id = 736r\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\nfunction isUnionedDomain(domain) {\n    if (!util_1.isArray(domain)) {\n        return 'fields' in domain;\n    }\n    return false;\n}\nexports.isUnionedDomain = isUnionedDomain;\nfunction isDataRefDomain(domain) {\n    if (!util_1.isArray(domain)) {\n        return 'data' in domain;\n    }\n    return false;\n}\nexports.isDataRefDomain = isDataRefDomain;\n//# sourceMappingURL=vega.schema.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/vega.schema.js\n// module id = 7YRp\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render');\n\nfunction path(g, o) {\n  if (o.path == null) return true;\n  var p = o.pathCache || (o.pathCache = parse(o.path));\n  render(g, p, o.x, o.y);\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/path.js\n// module id = 7Zus\n// module chunks = 0","module.exports = function(b) {\n  function noop() { }\n  function add(x,y) { b.add(x, y); }\n\n  return {\n    bounds: function(_) {\n      if (!arguments.length) return b;\n      return (b = _, this);\n    },\n    beginPath: noop,\n    closePath: noop,\n    moveTo: add,\n    lineTo: add,\n    quadraticCurveTo: function(x1, y1, x2, y2) {\n      b.add(x1, y1);\n      b.add(x2, y2);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {\n      b.add(x1, y1);\n      b.add(x2, y2);\n      b.add(x3, y3);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/BoundsContext.js\n// module id = 81R7\n// module chunks = 0","var d3 = require('d3'),\n    config = {};\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: '',\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  retina: true\n};\n\n// root scenegraph group\nconfig.scene = {\n  fill: undefined,\n  fillOpacity: undefined,\n  stroke: undefined,\n  strokeOpacity: undefined,\n  strokeWidth: undefined,\n  strokeDash: undefined,\n  strokeDashOffset: undefined\n};\n\n// default axis properties\nconfig.axis = {\n  layer: 'back',\n  ticks: 10,\n  padding: 3,\n  axisColor: '#000',\n  axisWidth: 1,\n  gridColor: '#000',\n  gridOpacity: 0.15,\n  tickColor: '#000',\n  tickLabelColor: '#000',\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: 'sans-serif',\n  titleColor: '#000',\n  titleFont: 'sans-serif',\n  titleFontSize: 11,\n  titleFontWeight: 'bold',\n  titleOffset: 'auto',\n  titleOffsetAutoMin: 30,\n  titleOffsetAutoMax: 10000,\n  titleOffsetAutoMargin: 4\n};\n\n// default legend properties\nconfig.legend = {\n  orient: 'right',\n  offset: 20,\n  padding: 3, // padding between legend items and border\n  margin: 2,  // extra margin between two consecutive legends\n  gradientStrokeColor: '#888',\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: '#000',\n  labelFontSize: 10,\n  labelFont: 'sans-serif',\n  labelAlign: 'left',\n  labelBaseline: 'middle',\n  labelOffset: 8,\n  symbolShape: 'circle',\n  symbolSize: 50,\n  symbolColor: '#888',\n  symbolStrokeWidth: 1,\n  titleColor: '#000',\n  titleFont: 'sans-serif',\n  titleFontSize: 11,\n  titleFontWeight: 'bold'\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10:  d3.scale.category10().range(),\n  category20:  d3.scale.category20().range(),\n  category20b: d3.scale.category20b().range(),\n  category20c: d3.scale.category20c().range(),\n  shapes: [\n    'circle',\n    'cross',\n    'diamond',\n    'square',\n    'triangle-down',\n    'triangle-up'\n  ]\n};\n\nmodule.exports = config;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/config.js\n// module id = 8NMF\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar common_1 = require('../common');\nvar rule;\n(function (rule) {\n    function markType() {\n        return 'rule';\n    }\n    rule.markType = markType;\n    function properties(model) {\n        var p = {};\n        if (model.config().mark.orient === 'vertical') {\n            if (model.has(channel_1.X)) {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x = { value: 0 };\n            }\n            if (model.has(channel_1.Y)) {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y = { field: { group: 'height' } };\n            }\n            if (model.has(channel_1.Y2)) {\n                p.y2 = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y2, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y2 = { value: 0 };\n            }\n        }\n        else {\n            if (model.has(channel_1.Y)) {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y = { value: 0 };\n            }\n            if (model.has(channel_1.X)) {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x = { value: 0 };\n            }\n            if (model.has(channel_1.X2)) {\n                p.x2 = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X2, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x2 = { field: { group: 'width' } };\n            }\n        }\n        common_1.applyColorAndOpacity(p, model);\n        if (model.has(channel_1.SIZE)) {\n            p.strokeWidth = {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            };\n        }\n        else {\n            p.strokeWidth = { value: sizeValue(model) };\n        }\n        return p;\n    }\n    rule.properties = properties;\n    function sizeValue(model) {\n        var fieldDef = model.fieldDef(channel_1.SIZE);\n        if (fieldDef && fieldDef.value !== undefined) {\n            return fieldDef.value;\n        }\n        return model.config().mark.ruleSize;\n    }\n    function labels(model) {\n        return undefined;\n    }\n    rule.labels = labels;\n})(rule = exports.rule || (exports.rule = {}));\n//# sourceMappingURL=rule.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/rule.js\n// module id = 8lgt\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x = o.x || 0,\n        y = o.y || 0,\n        w = o.width || (o.image && o.image.width) || 0,\n        h = o.height || (o.image && o.image.height) || 0,\n        opac;\n    x = x - (o.align==='center' ? w/2 : o.align==='right' ? w : 0);\n    y = y - (o.baseline==='middle' ? h/2 : o.baseline==='bottom' ? h : 0);\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick()\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/image.js\n// module id = 9+55\n// module chunks = 0","var parseMark = require('./mark'),\n    parseProperties = require('./properties');\n\nfunction parseRootMark(model, spec, width, height) {\n  return {\n    type:       'group',\n    width:      width,\n    height:     height,\n    properties: defaults(spec.scene || {}, model),\n    scales:     spec.scales  || [],\n    axes:       spec.axes    || [],\n    legends:    spec.legends || [],\n    marks:      (spec.marks || []).map(function(m) { return parseMark(model, m, true); })\n  };\n}\n\nvar PROPERTIES = [\n  'fill', 'fillOpacity', 'stroke', 'strokeOpacity',\n  'strokeWidth', 'strokeDash', 'strokeDashOffset'\n];\n\nfunction defaults(spec, model) {\n  var config = model.config().scene,\n      props = {}, i, n, m, p, s;\n\n  for (i=0, n=m=PROPERTIES.length; i<n; ++i) {\n    p = PROPERTIES[i];\n    if ((s=spec[p]) !== undefined) {\n      props[p] = s.signal ? s : {value: s};\n    } else if (config[p]) {\n      props[p] = {value: config[p]};\n    } else {\n      --m;\n    }\n  }\n\n  return m ? {update: parseProperties(model, 'group', props)} : {};\n}\n\nmodule.exports = parseRootMark;\n\nparseRootMark.schema = {\n  \"defs\": {\n    \"container\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"scene\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"fill\": {\n              \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"fillOpacity\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"stroke\": {\n              \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeOpacity\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeWidth\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeDash\": {\n              \"oneOf\": [\n                {\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \n                {\"$ref\": \"#/refs/signal\"}\n              ]\n            },\n            \"strokeDashOffset\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n          }\n        },\n        \"scales\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/scale\"}\n        },\n        \"axes\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/axis\"}\n        },\n        \"legends\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/legend\"}\n        },\n        \"marks\": {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\":[{\"$ref\": \"#/defs/groupMark\"}, {\"$ref\": \"#/defs/visualMark\"}]}\n        }\n      }\n    },\n\n\n    \"groupMark\": {\n      \"allOf\": [\n        {\n          \"properties\": { \"type\": {\"enum\": [\"group\"]} },\n          \"required\": [\"type\"]\n        },\n        {\"$ref\": \"#/defs/mark\"},\n        {\"$ref\": \"#/defs/container\"}\n      ]\n    },\n\n    \"visualMark\": {\n      \"allOf\": [\n        {\n          \"not\": { \"properties\": { \"type\": {\"enum\": [\"group\"]} } },\n        },\n        {\"$ref\": \"#/defs/mark\"}\n      ]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/marks.js\n// module id = 92+E\n// module chunks = 0","module.exports = {\n  Handler:  require('./SVGHandler'),\n  Renderer: require('./SVGRenderer'),\n  string: {\n    Renderer : require('./SVGStringRenderer')\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/index.js\n// module id = 95dH\n// module chunks = 0","var Renderer = require('../Renderer'),\n    ImageLoader = require('../../util/ImageLoader'),\n    SVG = require('../../util/svg'),\n    text = require('../../util/text'),\n    DOM = require('../../util/dom'),\n    openTag = DOM.openTag,\n    closeTag = DOM.closeTag,\n    MARKS = require('./marks');\n\nfunction SVGStringRenderer(loadConfig) {\n  Renderer.call(this);\n\n  this._loader = new ImageLoader(loadConfig);\n\n  this._text = {\n    head: '',\n    root: '',\n    foot: '',\n    defs: '',\n    body: ''\n  };\n\n  this._defs = {\n    clip_id:  1,\n    gradient: {},\n    clipping: {}\n  };\n}\n\nvar base = Renderer.prototype;\nvar prototype = (SVGStringRenderer.prototype = Object.create(base));\nprototype.constructor = SVGStringRenderer;\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  var p = this._padding,\n      t = this._text;\n\n  var attr = {\n    'class':  'marks',\n    'width':  this._width + p.left + p.right,\n    'height': this._height + p.top + p.bottom,\n  };\n  for (var key in SVG.metadata) {\n    attr[key] = SVG.metadata[key];\n  }\n\n  t.head = openTag('svg', attr);\n  t.root = openTag('g', {\n    transform: 'translate(' + p.left + ',' + p.top + ')'\n  });\n  t.foot = closeTag('g') + closeTag('svg');\n\n  return this;\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.render = function(scene) {\n  this._text.body = this.mark(scene);\n  this._text.defs = this.buildDefs();\n  return this;\n};\n\nprototype.reset = function() {\n  this._defs.clip_id = 0;\n  return this;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      defs = '',\n      i, id, def, stops;\n\n  for (id in all.gradient) {\n    def = all.gradient[id];\n    stops = def.stops;\n\n    defs += openTag('linearGradient', {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (i=0; i<stops.length; ++i) {\n      defs += openTag('stop', {\n        offset: stops[i].offset,\n        'stop-color': stops[i].color\n      }) + closeTag('stop');\n    }\n    \n    defs += closeTag('linearGradient');\n  }\n  \n  for (id in all.clipping) {\n    def = all.clipping[id];\n\n    defs += openTag('clipPath', {id: id});\n\n    defs += openTag('rect', {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + closeTag('rect');\n\n    defs += closeTag('clipPath');\n  }\n  \n  return (defs.length > 0) ? openTag('defs') + defs + closeTag('defs') : '';\n};\n\nprototype.imageURL = function(url) {\n  return this._loader.imageURL(url);\n};\n\nvar object;\n\nfunction emit(name, value, ns, prefixed) {\n  object[prefixed || name] = value;\n}\n\nprototype.attributes = function(attr, item) {\n  object = {};\n  attr(emit, item, this);\n  return object;\n};\n\nprototype.mark = function(scene) {\n  var mdef = MARKS[scene.marktype],\n      tag  = mdef.tag,\n      attr = mdef.attr,\n      nest = mdef.nest || false,\n      data = nest ?\n          (scene.items && scene.items.length ? [scene.items[0]] : []) :\n          (scene.items || []),\n      defs = this._defs,\n      str = '',\n      style, i, item;\n\n  if (tag !== 'g' && scene.interactive === false) {\n    style = 'style=\"pointer-events: none;\"';\n  }\n\n  // render opening group tag\n  str += openTag('g', {\n    'class': DOM.cssClass(scene)\n  }, style);\n\n  // render contained elements\n  for (i=0; i<data.length; ++i) {\n    item = data[i];\n    style = (tag !== 'g') ? styles(item, scene, tag, defs) : null;\n    str += openTag(tag, this.attributes(attr, item), style);\n    if (tag === 'text') {\n      str += escape_text(text.value(item.text));\n    } else if (tag === 'g') {\n      str += openTag('rect',\n        this.attributes(mdef.background, item),\n        styles(item, scene, 'bgrect', defs)) + closeTag('rect');\n      str += this.markGroup(item);\n    }\n    str += closeTag(tag);\n  }\n\n  // render closing group tag\n  return str + closeTag('g');\n};\n\nprototype.markGroup = function(scene) {\n  var str = '',\n      axes = scene.axisItems || [],\n      items = scene.items || [],\n      legends = scene.legendItems || [],\n      j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer === 'back') {\n      str += this.mark(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    str += this.mark(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer !== 'back') {\n      str += this.mark(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    str += this.mark(legends[j]);\n  }\n\n  return str;\n};\n\nfunction styles(o, mark, tag, defs) {\n  if (o == null) return '';\n  var i, n, prop, name, value, s = '';\n\n  if (tag === 'bgrect' && mark.interactive === false) {\n    s += 'pointer-events: none;';\n  }\n\n  if (tag === 'text') {\n    s += 'font: ' + text.font(o) + ';';\n  }\n\n  for (i=0, n=SVG.styleProperties.length; i<n; ++i) {\n    prop = SVG.styleProperties[i];\n    name = SVG.styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === 'fill') {\n        s += (s.length ? ' ' : '') + 'fill: none;';\n      }\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = 'url(#' + value.id + ')';\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';';\n    }\n  }\n\n  return s ? 'style=\"' + s + '\"' : null;\n}\n\nfunction escape_text(s) {\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nmodule.exports = SVGStringRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/SVGStringRenderer.js\n// module id = 9eLo\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Heap = require('./Heap'),\n    ChangeSet = require('./ChangeSet'),\n    DataSource = require('./DataSource'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Signal = require('./Signal'),\n    Deps = require('./Dependencies');\n\nfunction Graph() {\n}\n\nvar prototype = Graph.prototype;\n\nprototype.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n  this._requestedIndexes = {};\n\n  this.doNotPropagate = {};\n};\n\nprototype.rank = function() {\n  return ++this._rank;\n};\n\nprototype.values = function(type, names, hash) {\n  var data = (type === Deps.SIGNALS ? this._signals : this._data),\n      n = (names !== undefined ? names : dl.keys(data)),\n      vals, i;\n\n  if (Array.isArray(n)) {\n    vals = hash || {};\n    for (i=0; i<n.length; ++i) {\n      vals[n[i]] = data[n[i]].values();\n    }\n    return vals;\n  } else {\n    return data[n].values();\n  }\n};\n\n// Retain for backwards-compatibility\nprototype.dataValues = function(names) {\n  return this.values(Deps.DATA, names);\n};\n\n// Retain for backwards-compatibility\nprototype.signalValues = function(names) {\n  return this.values(Deps.SIGNALS, names);\n};\n\nprototype.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if (!arguments.length) {\n    var all = [], key;\n    for (key in db) { all.push(db[key]); }\n    return all;\n  } else if (arguments.length === 1) {\n    return db[name];\n  } else {\n    return (db[name] = new DataSource(this, name, facet).pipeline(pipeline));\n  }\n};\n\nprototype.signal = function(name, init) {\n  if (arguments.length === 1) {\n    var m = this;\n    return Array.isArray(name) ?\n      name.map(function(n) { return m._signals[n]; }) :\n      this._signals[name];\n  } else {\n    return (this._signals[name] = new Signal(this, name, init));\n  }\n};\n\nprototype.signalRef = function(ref) {\n  if (!Array.isArray(ref)) {\n    ref = dl.field(ref);\n  }\n\n  var value = this.signal(ref[0]).value();\n  if (ref.length > 1) {\n    for (var i=1, n=ref.length; i<n; ++i) {\n      value = value[ref[i]];\n    }\n  }\n  return value;\n};\n\nprototype.requestIndex = function(data, field) {\n  var ri  = this._requestedIndexes,\n      reg = ri[data] || (ri[data] = {}); \n  return (reg[field] = true, this);\n};\n\nprototype.buildIndexes = function() {\n  var ri = this._requestedIndexes,\n      data = dl.keys(ri),\n      i, len, j, jlen, d, src, fields, f;\n\n  for (i=0, len=data.length; i<len; ++i) {\n    src = this.data(d=data[i]);\n    if (!src) throw Error('Data source '+dl.str(d)+' does not exist.');\n\n    fields = dl.keys(ri[d]);\n    for (j=0, jlen=fields.length; j<jlen; ++j) {\n      if ((f=fields[j]) === null) continue;\n      src.getIndex(f);\n      ri[d][f] = null;\n    }\n  }\n\n  return this;\n};\n\n// Stamp should be specified with caution. It is necessary for inline datasources,\n// which need to be populated during the same cycle even though propagation has\n// passed that part of the dataflow graph. \n// If skipSignals is true, Signal nodes do not get reevaluated but their listeners\n// are queued for propagation. This is useful when setting signal values in batch\n// (e.g., time travel to the initial state).\nprototype.propagate = function(pulse, node, stamp, skipSignals) {\n  var pulses = {},\n      listeners, next, nplse, tpls, ntpls, i, len, isSg;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(function(a, b) {\n    // Sort on qrank (queue-rank).\n    // Rank can change during propagation due to rewiring.\n    return a._qrank - b._qrank;\n  });\n\n  if (pulse.stamp) throw Error('Pulse already has a non-zero stamp.');\n\n  pulse.stamp = stamp || ++this._stamp;\n  pulses[node._id] = pulse;\n  pq.push(node.qrank(true));\n\n  while (pq.size() > 0) {\n    node  = pq.peek();\n    isSg  = node instanceof Signal;\n    pulse = pulses[node._id];\n\n    if (node.rank() !== node.qrank()) {\n      // A node's rank might change during a propagation. Re-queue if so.\n      pq.replace(node.qrank(true));\n    } else {\n      // Evaluate node and propagate pulse.\n      pq.pop();\n      pulses[node._id] = null;\n      listeners = node._listeners;\n\n      if (!isSg || (isSg && !skipSignals)) {\n        pulse = this.evaluate(pulse, node);\n      }\n\n      // Propagate the pulse.\n      if (pulse !== this.doNotPropagate) {\n        // Ensure reflow pulses always send reflow pulses even if skipped.\n        if (!pulse.reflow && node.reflows()) {\n          pulse = ChangeSet.create(pulse, true);\n        }\n\n        for (i=0, len=listeners.length; i<len; ++i) {\n          next = listeners[i];\n\n          if ((nplse = pulses[next._id]) !== undefined) {\n            if (nplse === null) throw Error('Already propagated to node.');\n            if (nplse === pulse) continue;  // Re-queueing the same pulse.\n\n            // We've already queued this node. Ensure there should be at most one\n            // pulse with tuples (add/mod/rem), and the remainder will be reflows.\n            tpls  = pulse.add.length || pulse.mod.length || pulse.rem.length;\n            ntpls = nplse.add.length || nplse.mod.length || nplse.rem.length;\n\n            if (tpls && ntpls) throw Error('Multiple changeset pulses to same node');\n\n            // Combine reflow and tuples into a single pulse.\n            pulses[next._id] = tpls ? pulse : nplse;\n            pulses[next._id].reflow = pulse.reflow || nplse.reflow;\n          } else {\n            // First time we're seeing this node, queue it for propagation.\n            pq.push(next.qrank(true));\n            pulses[next._id] = pulse;\n          }\n        }\n      }\n    }\n  }\n\n  return this.done(pulse);\n};\n\n// Perform final bookkeeping on the graph, after propagation is complete.\n//  - For all updated datasources, synchronize their previous values.\nprototype.done = function(pulse) {\n  log.debug(pulse, ['bookkeeping']);\n  for (var d in pulse.data) { this.data(d).synchronize(); }\n  return this;\n};\n\n// Process a new branch of the dataflow graph prior to connection:\n// (1) Insert new Collector nodes as needed.\n// (2) Track + return mutation/routing status of the branch.\nprototype.preprocess = function(branch) {\n  var graph = this,\n      mutates = 0,\n      node, router, collector, collects;\n\n  for (var i=0; i<branch.length; ++i) {\n    node = branch[i];\n\n    // Batch nodes need access to a materialized dataset.\n    if (node.batch() && !node._collector) {\n      if (router || !collector) {\n        node = new Collector(graph);\n        branch.splice(i, 0, node);\n        router = false;\n      } else {\n        node._collector = collector;\n      }\n    }\n\n    if ((collects = node.collector())) collector = node;\n    router  = router  || node.router() && !collects;\n    mutates = mutates || node.mutates();\n\n    // A collector needs to be inserted after tuple-producing\n    // nodes for correct previous value tracking.\n    if (node.produces()) {\n      branch.splice(i+1, 0, new Collector(graph));\n      router = false;\n    }\n  }\n\n  return {router: router, collector: collector, mutates: mutates};\n};\n\nprototype.connect = function(branch) {\n  var collector, node, data, signals, i, n, j, m, x, y;\n\n  // connect the pipeline\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      if (!(x=this.data(y=data[j]))) {\n        throw new Error('Unknown data source ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      if (!(x=this.signal(y=signals[j]))) {\n        throw new Error('Unknown signal ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    if (i > 0) branch[i-1].addListener(node);\n  }\n\n  return branch;\n};\n\nprototype.disconnect = function(branch) {\n  var collector, node, data, signals, i, n, j, m;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      this.data(data[j]).removeListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      this.signal(signals[j]).removeListener(collector);\n    }\n\n    node.disconnect();\n  }\n\n  return branch;\n};\n\nprototype.synchronize = function(branch) {\n  var ids = {},\n      node, data, i, n, j, m, d, id;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (!node.collector()) continue;\n\n    for (j=0, data=node.data(), m=data.length; j<m; ++j) {\n      id = (d = data[j])._id;\n      if (ids[id]) continue;\n      Tuple.prev_update(d);\n      ids[id] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.reevaluate = function(pulse, node) {\n  var reflowed = pulse.reflow && node.last() >= pulse.stamp,\n      run = node.router() || pulse.add.length || pulse.rem.length;\n\n  return run || !reflowed || node.reevaluate(pulse);\n};\n\nprototype.evaluate = function(pulse, node) {\n  if (!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse;\n};\n\nmodule.exports = Graph;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Graph.js\n// module id = ARV7\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nvar defaultRatio = 0.5 * (1 + Math.sqrt(5));\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: 'array<field>', default: ['-value']},\n    children: {type: 'field', default: 'children'},\n    parent: {type: 'field', default: 'parent'},\n    field: {type: 'field', default: 'value'},\n    // treemap parameters\n    size: {type: 'array<value>', default: require('./screen').size},\n    round: {type: 'value', default: true},\n    sticky: {type: 'value', default: false},\n    ratio: {type: 'value', default: defaultRatio},\n    padding: {type: 'value', default: null},\n    mode: {type: 'value', default: 'squarify'}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    'x':      'layout_x',\n    'y':      'layout_y',\n    'width':  'layout_width',\n    'height': 'layout_height',\n    'depth':  'layout_depth',\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Treemap.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Treemap;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['treemap']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      sticky = this.param('sticky'),\n      parent = this.param('parent').accessor,\n      root = data.filter(function(d) { return parent(d) === null; })[0];\n\n  // layout.sticky resets state _regardless_ of input value\n  // so, we perform out own check first\n  if (layout.sticky() !== sticky) { layout.sticky(sticky); }\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.param('sort').field))\n    .children(this.param('children').accessor)\n    .value(this.param('field').accessor)\n    .size(this.param('size'))\n    .round(this.param('round'))\n    .ratio(this.param('ratio'))\n    .padding(this.param('padding'))\n    .mode(this.param('mode'))\n    .nodes(root);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    Tuple.set(n, output.x, n.x);\n    Tuple.set(n, output.y, n.y);\n    Tuple.set(n, output.width, n.dx);\n    Tuple.set(n, output.height, n.dy);\n    Tuple.set(n, output.depth, n.depth);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  input.fields[output.depth] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n\nTreemap.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Treemap transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"treemap\"]},\n    \"sort\": {\n      \"description\": \"A list of fields to use as sort criteria for sibling nodes.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [\"-value\"]\n    },\n    \"children\": {\n      \"description\": \"The data field for the children node array\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"children\"\n    },\n    \"parent\": {\n      \"description\": \"The data field for the parent node\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"parent\"\n    },\n    \"field\": {\n      \"description\": \"The values to use to determine the area of each leaf-level treemap cell.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"mode\": {\n      \"description\": \"The treemap layout algorithm to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"squarify\", \"slice\", \"dice\", \"slice-dice\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"squarify\"\n    },\n    \"size\": {\n      \"description\": \"The dimensions of the treemap layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [500, 500]\n    },\n    \"round\": {\n      \"description\": \"If true, treemap cell dimensions will be rounded to integer pixels.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": true\n    },\n    \"sticky\": {\n      \"description\": \"If true, repeated runs of the treemap will use cached partition boundaries.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"ratio\": {\n      \"description\": \"The target aspect ratio for the layout to optimize.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": defaultRatio\n    },\n    \"padding\": {\n      \"oneOf\": [\n        {\"type\": \"number\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 4,\n          \"maxItems\": 4\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"description\": \"he padding (in pixels) to provide around internal nodes in the treemap.\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"width\": {\"type\": \"string\", \"default\": \"layout_width\"},\n        \"height\": {\"type\": \"string\", \"default\": \"layout_height\"},\n        \"depth\": {\"type\": \"string\", \"default\": \"layout_depth\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Treemap.js\n// module id = Aj/a\n// module chunks = 0","var log = require('vega-logging'),\n    Tuple = require('./Tuple'),\n    Base = require('./Node').prototype,\n    ChangeSet = require('./ChangeSet');\n\nfunction Collector(graph) {\n  Base.init.call(this, graph);\n  this._data = [];\n  this.router(true).collector(true);\n}\n\nvar prototype = (Collector.prototype = Object.create(Base));\nprototype.constructor = Collector;\n\nprototype.data = function() {\n  return this._data;\n};\n\nprototype.evaluate = function(input) {\n  log.debug(input, [\"collecting\"]);\n\n  // Create a new output changeset to prevent pollution when the Graph\n  // merges reflow and regular changesets.\n  var output = ChangeSet.create(input);\n\n  if (input.rem.length) {\n    this._data = Tuple.idFilter(this._data, input.rem);\n    output.rem = input.rem.slice(0);\n  }\n\n  if (input.add.length) {\n    this._data = this._data.concat(input.add);\n    output.add = input.add.slice(0);\n  }\n\n  if (input.mod.length) {\n    output.mod = input.mod.slice(0);\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  if (input.reflow) {\n    output.mod = output.mod.concat(\n      Tuple.idFilter(this._data, output.add, output.mod, output.rem));\n    output.reflow = false;\n  }\n\n  return output;\n};\n\nmodule.exports = Collector;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Collector.js\n// module id = B1p+\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    Node  = df.Node, // jshint ignore:line\n    Deps  = df.Dependencies,\n    Tuple = df.Tuple,\n    Collector = df.Collector,\n    log = require('vega-logging'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    parseLegends = require('../parse/legends');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar Types = GroupBuilder.TYPES = {\n  GROUP:  \"group\",\n  MARK:   \"mark\",\n  AXIS:   \"axis\",\n  LEGEND: \"legend\"\n};\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def) {\n  var builder = this, name;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) {\n    s = builder.scale((name=s.name), new Scale(graph, s, builder));\n    builder.scale(name+\":prev\", s);\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    acc[x.scale] = 1;\n    return acc;\n  }, {});\n\n  scales = (def.legends||[]).reduce(function(acc, x) {\n    acc[x.size || x.shape || x.fill || x.stroke || x.opacity] = 1;\n    return acc;\n  }, scales);\n\n  this._recursor.dependency(Deps.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function() {\n  var output  = Builder.prototype.evaluate.apply(this, arguments),\n      model   = this._graph,\n      builder = this,\n      scales = this._scales,\n      items  = this._mark.items;\n\n  // If scales need to be reevaluated, we need to send all group items forward.\n  if (output.mod.length < items.length) {\n    var fullUpdate = dl.keys(scales).some(function(s) {\n      return scales[s].reevaluate(output);\n    });\n\n    if (!fullUpdate && this._def.axes) {\n      fullUpdate = this._def.axes.reduce(function(acc, a) {\n        return acc || output.scales[a.scale];\n      }, false);\n    }\n\n    if (!fullUpdate && this._def.legends) {\n      fullUpdate = this._def.legends.reduce(function(acc, l) {\n        return acc || output.scales[l.size || l.shape || l.fill || l.stroke];\n      }, false);\n    }\n\n    if (fullUpdate) {\n      output.mod = output.mod.concat(Tuple.idFilter(items,\n          output.mod, output.add, output.rem));\n    }\n  }\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  output.rem.forEach(function(group) { model.group(group._id, null); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    });\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for (; i<len; ++i) {\n    child = children[i];\n    if (child.type == Types.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = dl.array(this._def.marks).length > 0,\n      hasAxes = dl.array(this._def.axes).length > 0,\n      hasLegends = dl.array(this._def.legends).length > 0,\n      i, j, c, len, group, pipeline, def, inline = false;\n\n  for (i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if (hasMarks) buildMarks.call(this, input, group);\n    if (hasAxes)  buildAxes.call(this, input, group);\n    if (hasLegends) buildLegends.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node,\n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== Types.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined);\n      inline = inline && (pipeline[pipeline.length-1].listeners().length === 1); // Reactive geom source\n      inline = inline && (def.from && !def.from.mark); // Reactive geom target\n      c.inline = inline;\n\n      if (inline) this._graph.evaluate(input, c.builder);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  function removeTemp(c) {\n    if (c.type == Types.MARK && !c.inline &&\n        builder._graph.data(c.from) !== undefined) {\n      builder._recursor.removeListener(c.builder);\n    }\n  }\n\n  function updateAxis(a) {\n    var scale = a.scale();\n    if (!input.scales[scale.scaleName]) return;\n    a.reset().def();\n  }\n\n  function updateLegend(l) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke() || l.opacity();\n    if (!input.scales[scale.scaleName]) return;\n    l.reset().def();\n  }\n\n  for (i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n\n    // Remove temporary connection for marks that draw from a source\n    if (hasMarks) builder._children[group._id].forEach(removeTemp);\n\n    // Update axis data defs\n    if (hasAxes) group.axes.forEach(updateAxis);\n\n    // Update legend data defs\n    if (hasLegends) group.legends.forEach(updateLegend);\n  }\n\n  function disconnectChildren(c) {\n    builder._recursor.removeListener(c.builder);\n    c.builder.disconnect();\n  }\n\n  for (i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(disconnectChildren);\n    delete builder._children[group._id];\n  }\n\n  return input;\n}\n\nfunction scale(name, x) {\n  var group = this, s = null;\n  if (arguments.length === 2) return (group._scales[name] = x, x);\n  while (s == null) {\n    s = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if (!group) break;\n  }\n  return s;\n}\n\nfunction buildGroup(input, group) {\n  log.debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};\n  group.scale = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n\n  group.legends = group.legends || [];\n  group.legendItems = group.legendItems || [];\n\n  // Index group by ID to enable safe scoped scale lookups.\n  this._graph.group(group._id, group);\n}\n\nfunction buildMarks(input, group) {\n  log.debug(input, [\"building children marks #\"+group._id]);\n  var marks = this._def.marks,\n      mark, from, inherit, i, len, b;\n\n  for (i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = group.datum._facetID;\n    group.items[i] = {group: group, _scaleRefs: {}};\n    b = (mark.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({\n      builder: b,\n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit),\n      type: Types.MARK\n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axis: a, layer: def.layer};\n    b = (def.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(Deps.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: Types.AXIS, scale: scale });\n  });\n}\n\nfunction buildLegends(input, group) {\n  var legends = group.legends,\n      legendItems = group.legendItems,\n      builder = this;\n\n  parseLegends(this._graph, this._def.legends, legends, group);\n  legends.forEach(function(l, i) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke() || l.opacity(),\n        def = l.def(),\n        b = null;\n\n    legendItems[i] = {group: group, legend: l};\n    b = (def.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, legendItems[i], builder)\n      .dependency(Deps.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: Types.LEGEND, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/GroupBuilder.js\n// module id = BB2X\n// module chunks = 0","var df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: 'expr'}});\n\n  this._skip = {};\n  return this.router(true);\n}\n\nvar prototype = (Filter.prototype = Object.create(Transform.prototype));\nprototype.constructor = Filter;\n\nprototype.transform = function(input) {\n  log.debug(input, ['filtering']);\n\n  var output = df.ChangeSet.create(input),\n      skip = this._skip,\n      test = this.param('test');\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test(x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test(x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n\nFilter.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Filter transform\",\n  \"description\": \"Filters elements from a data set to remove unwanted items.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"filter\"]},\n    \"test\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) for the filter predicate.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"test\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Filter.js\n// module id = BO8z\n// module chunks = 0","var BoundsContext = require('./BoundsContext'),\n    Bounds = require('./Bounds'),\n    canvas = require('./canvas'),\n    svg = require('./svg'),\n    text = require('./text'),\n    paths = require('../path'),\n    parse = paths.parse,\n    drawPath = paths.render,\n    areaPath = svg.path.area,\n    linePath = svg.path.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    g2D = null,\n    bc = BoundsContext();\n\nfunction context() {\n  return g2D || (g2D = canvas.instance(1,1).getContext('2d'));\n}\n\nfunction strokeBounds(o, bounds) {\n  if (o.stroke && o.opacity !== 0 && o.stokeOpacity !== 0) {\n    bounds.expand(o.strokeWidth != null ? o.strokeWidth : 1);\n  }\n  return bounds;\n}\n\nfunction pathBounds(o, path, bounds, x, y) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    drawPath(bc.bounds(bounds), path, x, y);\n    strokeBounds(o, bounds);\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path ? o.pathCache || (o.pathCache = parse(o.path)) : null;\n  return pathBounds(o, p, bounds, o.x, o.y);\n}\n\nfunction area(mark, bounds) {\n  if (mark.items.length === 0) return bounds;\n  var items = mark.items,\n      item = items[0],\n      p = item.pathCache || (item.pathCache = parse(areaPath(items)));\n  return pathBounds(item, p, bounds);\n}\n\nfunction line(mark, bounds) {\n  if (mark.items.length === 0) return bounds;\n  var items = mark.items,\n      item = items[0],\n      p = item.pathCache || (item.pathCache = parse(linePath(items)));\n  return pathBounds(item, p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x, y;\n  return strokeBounds(o, bounds.set(\n    x = o.x || 0,\n    y = o.y || 0,\n    (x + o.width) || 0,\n    (y + o.height) || 0\n  ));\n}\n\nfunction image(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = o.width || 0,\n      h = o.height || 0;\n  x = x - (o.align === 'center' ? w/2 : (o.align === 'right' ? w : 0));\n  y = y - (o.baseline === 'middle' ? h/2 : (o.baseline === 'bottom' ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  return strokeBounds(o, bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  ));\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa % halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  return strokeBounds(o, bounds.set(\n    cx + xmin,\n    cy + ymin,\n    cx + xmax,\n    cy + ymax\n  ));\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case 'cross':\n      t = 3 * Math.sqrt(size / 5) / 2;\n      bounds.set(x-t, y-t, x+t, y+t);\n      break;\n\n    case 'diamond':\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case 'square':\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case 'triangle-down':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case 'triangle-up':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n\n  return strokeBounds(o, bounds);\n}\n\nfunction textMark(o, bounds, noRotate) {\n  var g = context(),\n      h = text.size(o),\n      a = o.align,\n      r = o.radius || 0,\n      x = (o.x || 0),\n      y = (o.y || 0),\n      dx = (o.dx || 0),\n      dy = (o.dy || 0) + text.offset(o) - Math.round(0.8*h), // use 4/5 offset\n      w, t;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal alignment\n  g.font = text.font(o);\n  w = g.measureText(text.value(o.text)).width;\n  if (a === 'center') {\n    dx -= (w / 2);\n  } else if (a === 'right') {\n    dx -= w;\n  } else {\n    // left by default, do nothing\n  }\n\n  bounds.set(dx+=x, dy+=y, dx+w, dy+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, x, y);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      items = g.items || [],\n      legends = g.legendItems || [],\n      j, m;\n\n  if (!g.clip) {\n    for (j=0, m=axes.length; j<m; ++j) {\n      bounds.union(axes[j].bounds);\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      if (items[j].bounds) bounds.union(items[j].bounds);\n    }\n    if (includeLegends) {\n      for (j=0, m=legends.length; j<m; ++j) {\n        bounds.union(legends[j].bounds);\n      }\n    }\n  }\n  if (g.clip || g.width || g.height) {\n    strokeBounds(g, bounds\n      .add(0, 0)\n      .add(g.width || 0, g.height || 0));\n  }\n  return bounds.translate(g.x || 0, g.y || 0);\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   textMark,\n  path:   path,\n  area:   area,\n  line:   line\n};\nmethods.area.nest = true;\nmethods.line.nest = true;\n\nfunction itemBounds(item, func, opt) {\n  var type = item.mark.marktype;\n  func = func || methods[type];\n  if (func.nest) item = item.mark;\n\n  var curr = item.bounds,\n      prev = item['bounds:prev'] || (item['bounds:prev'] = new Bounds());\n\n  if (curr) {\n    prev.clear().union(curr);\n    curr.clear();\n  } else {\n    item.bounds = new Bounds();\n  }\n  func(item, item.bounds, opt);\n  if (!curr) prev.clear().union(item.bounds);\n  return item.bounds;\n}\n\nvar DUMMY_ITEM = {mark: null};\n\nfunction markBounds(mark, bounds, opt) {\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      hasi  = items && items.length,\n      i, n, o, b;\n\n  if (func.nest) {\n    o = hasi ? items[0]\n      : (DUMMY_ITEM.mark = mark, DUMMY_ITEM); // no items, so fake it\n    b = itemBounds(o, func, opt);\n    bounds = bounds && bounds.union(b) || b;\n    return bounds;\n  }\n\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  if (hasi) {  \n    for (i=0, n=items.length; i<n; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  return (mark.bounds = bounds);\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  textMark,\n  group: group\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/bound.js\n// module id = BONk\n// module chunks = 0","module.exports = {\n  aggregate:    require('./Aggregate'),\n  bin:          require('./Bin'),\n  cross:        require('./Cross'),\n  countpattern: require('./CountPattern'),\n  linkpath:     require('./LinkPath'),\n  facet:        require('./Facet'),\n  filter:       require('./Filter'),\n  fold:         require('./Fold'),\n  force:        require('./Force'),\n  formula:      require('./Formula'),\n  geo:          require('./Geo'),\n  geopath:      require('./GeoPath'),\n  hierarchy:    require('./Hierarchy'),\n  impute:       require('./Impute'),\n  lookup:       require('./Lookup'),\n  pie:          require('./Pie'),\n  rank:         require('./Rank'),\n  sort:         require('./Sort'),\n  stack:        require('./Stack'),\n  treeify:      require('./Treeify'),\n  treemap:      require('./Treemap'),\n  voronoi:      require('./Voronoi'),\n  wordcloud:    require('./Wordcloud')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/index.js\n// module id = C8zq\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Gradient = require('vega-scenegraph').Gradient,\n    parseProperties = require('../parse/properties'),\n    parseMark = require('../parse/mark'),\n    util = require('../util');\n\nfunction lgnd(model) {\n  var size  = null,\n      shape = null,\n      fill  = null,\n      stroke  = null,\n      opacity = null,\n      spacing = null,\n      values  = null,\n      formatString = null,\n      formatType   = null,\n      title  = null,\n      config = model.config().legend,\n      orient = config.orient,\n      offset = config.offset,\n      padding = config.padding,\n      tickArguments = [5],\n      legendStyle = {},\n      symbolStyle = {},\n      gradientStyle = {},\n      titleStyle = {},\n      labelStyle = {},\n      m = { // Legend marks as references for updates\n        titles:  {},\n        symbols: {},\n        labels:  {},\n        gradient: {}\n      };\n\n  var legend = {},\n      legendDef = {};\n\n  function reset() { legendDef.type = null; }\n  function ingest(d, i) { return {data: d, index: i}; }\n\n  legend.def = function() {\n    var scale = size || shape || fill || stroke || opacity;\n\n    if (!legendDef.type) {\n      legendDef = (scale===fill || scale===stroke) && !discrete(scale.type) ?\n        quantDef(scale) : ordinalDef(scale);\n    }\n    legendDef.orient = orient;\n    legendDef.offset = offset;\n    legendDef.padding = padding;\n    legendDef.margin = config.margin;\n    return legendDef;\n  };\n\n  function discrete(type) {\n    return type==='ordinal' || type==='quantize' ||\n           type==='quantile' || type==='threshold';\n  }\n\n  function ordinalDef(scale) {\n    var def = o_legend_def(size, shape, fill, stroke, opacity);\n\n    // generate data\n    var data = (values == null ?\n      (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) :\n      values).map(ingest);\n\n    var fmt = util.getTickFormat(scale, data.length, formatType, formatString);\n\n    // determine spacing between legend entries\n    var fs, range, offset, pad=5, domain = d3.range(data.length);\n    if (size) {\n      range = data.map(function(x) { return Math.sqrt(size(x.data)); });\n      offset = d3.max(range);\n      range = range.reduce(function(a,b,i,z) {\n          if (i > 0) a[i] = a[i-1] + z[i-1]/2 + pad;\n          return (a[i] += b/2, a); }, [0]).map(Math.round);\n    } else {\n      offset = Math.round(Math.sqrt(config.symbolSize));\n      range = spacing ||\n        (fs = labelStyle.fontSize) && (fs.value + pad) ||\n        (config.labelFontSize + pad);\n      range = domain.map(function(d,i) {\n        return Math.round(offset/2 + i*range);\n      });\n    }\n\n    // account for padding and title size\n    var sz = padding, ts;\n    if (title) {\n      ts = titleStyle.fontSize;\n      sz += 5 + ((ts && ts.value) || config.titleFontSize);\n    }\n    for (var i=0, n=range.length; i<n; ++i) range[i] += sz;\n\n    // build scale for label layout\n    def.scales = def.scales || [{}];\n    dl.extend(def.scales[0], {\n      name: 'legend',\n      type: 'ordinal',\n      points: true,\n      domain: domain,\n      range: range\n    });\n\n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d) {\n      d.label = fmt(d.data);\n      d.offset = offset;\n    });\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return data; };\n    def.marks[2].from = def.marks[1].from;\n\n    return def;\n  }\n\n  function o_legend_def(size, shape, fill, stroke, opacity) {\n    // setup legend marks\n    var titles  = dl.extend(m.titles, legendTitle(config)),\n        symbols = dl.extend(m.symbols, legendSymbols(config)),\n        labels  = dl.extend(m.labels, vLegendLabels(config));\n\n    // extend legend marks\n    legendSymbolExtend(symbols, size, shape, fill, stroke, opacity);\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update,  titleStyle);\n    dl.extend(symbols.properties.update, symbolStyle);\n    dl.extend(labels.properties.update,  labelStyle);\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    labels.properties.enter.x.offset += padding + 1;\n    symbols.properties.enter.x.offset = padding + 1;\n    labels.properties.update.x.offset += padding + 1;\n    symbols.properties.update.x.offset = padding + 1;\n\n    dl.extend(legendDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, 'group', legendStyle),\n        legendPosition: {\n          encode: legendPosition.bind(null, config),\n          signals: [], scales:[], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, symbols, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  function quantDef(scale) {\n    var def = q_legend_def(scale),\n        dom = scale.domain(),\n        data  = (values == null ? dom : values).map(ingest),\n        width = (gradientStyle.width && gradientStyle.width.value) || config.gradientWidth,\n        fmt = util.getTickFormat(scale, data.length, formatType, formatString);\n\n    // build scale for label layout\n    def.scales = def.scales || [{}];\n    var layoutSpec = dl.extend(def.scales[0], {\n      name: 'legend',\n      type: scale.type,\n      round: true,\n      zero: false,\n      domain: [dom[0], dom[dom.length-1]],\n      range: [padding, width+padding]\n    });\n    if (scale.type==='pow') layoutSpec.exponent = scale.exponent();\n\n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d,i) {\n      d.label = fmt(d.data);\n      d.align = i==(data.length-1) ? 'right' : i===0 ? 'left' : 'center';\n    });\n\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return [1]; };\n    def.marks[2].from = function() { return data; };\n    return def;\n  }\n\n  function q_legend_def(scale) {\n    // setup legend marks\n    var titles = dl.extend(m.titles, legendTitle(config)),\n        gradient = dl.extend(m.gradient, legendGradient(config)),\n        labels = dl.extend(m.labels, hLegendLabels(config)),\n        grad = new Gradient();\n\n    // setup color gradient\n    var dom = scale.domain(),\n        min = dom[0],\n        max = dom[dom.length-1],\n        f = scale.copy().domain([min, max]).range([0,1]);\n\n    var stops = (scale.type !== 'linear' && scale.ticks) ?\n      scale.ticks.call(scale, 15) : dom;\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== stops[stops.length-1]) stops.push(max);\n\n    for (var i=0, n=stops.length; i<n; ++i) {\n      grad.stop(f(stops[i]), scale(stops[i]));\n    }\n    gradient.properties.enter.fill = {value: grad};\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update, titleStyle);\n    dl.extend(gradient.properties.update, gradientStyle);\n    dl.extend(labels.properties.update, labelStyle);\n\n    // account for gradient size\n    var gp = gradient.properties, gh = gradientStyle.height,\n        hh = (gh && gh.value) || gp.enter.height.value;\n    labels.properties.enter.y.value = hh;\n    labels.properties.update.y.value = hh;\n\n    // account for title size as needed\n    if (title) {\n      var tp = titles.properties, fs = titleStyle.fontSize,\n          sz = 4 + ((fs && fs.value) || tp.enter.fontSize.value);\n      gradient.properties.enter.y.value += sz;\n      labels.properties.enter.y.value += sz;\n      gradient.properties.update.y.value += sz;\n      labels.properties.update.y.value += sz;\n    }\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    gradient.properties.enter.x.value += padding;\n    gradient.properties.enter.y.value += padding;\n    labels.properties.enter.y.value += padding;\n    gradient.properties.update.x.value += padding;\n    gradient.properties.update.y.value += padding;\n    labels.properties.update.y.value += padding;\n\n    dl.extend(legendDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, 'group', legendStyle),\n        legendPosition: {\n          encode: legendPosition.bind(null, config),\n          signals: [], scales: [], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, gradient, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  legend.size = function(x) {\n    if (!arguments.length) return size;\n    if (size !== x) { size = x; reset(); }\n    return legend;\n  };\n\n  legend.shape = function(x) {\n    if (!arguments.length) return shape;\n    if (shape !== x) { shape = x; reset(); }\n    return legend;\n  };\n\n  legend.fill = function(x) {\n    if (!arguments.length) return fill;\n    if (fill !== x) { fill = x; reset(); }\n    return legend;\n  };\n\n  legend.stroke = function(x) {\n    if (!arguments.length) return stroke;\n    if (stroke !== x) { stroke = x; reset(); }\n    return legend;\n  };\n\n  legend.opacity = function(x) {\n    if (!arguments.length) return opacity;\n    if (opacity !== x) { opacity = x; reset(); }\n    return legend;\n  };\n\n  legend.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return legend;\n  };\n\n  legend.format = function(x) {\n    if (!arguments.length) return formatString;\n    if (formatString !== x) {\n      formatString = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.formatType = function(x) {\n    if (!arguments.length) return formatType;\n    if (formatType !== x) {\n      formatType = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.spacing = function(x) {\n    if (!arguments.length) return spacing;\n    if (spacing !== +x) { spacing = +x; reset(); }\n    return legend;\n  };\n\n  legend.orient = function(x) {\n    if (!arguments.length) return orient;\n    orient = x in LEGEND_ORIENT ? x + '' : config.orient;\n    return legend;\n  };\n\n  legend.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = +x;\n    return legend;\n  };\n\n  legend.values = function(x) {\n    if (!arguments.length) return values;\n    values = x;\n    return legend;\n  };\n\n  legend.legendProperties = function(x) {\n    if (!arguments.length) return legendStyle;\n    legendStyle = x;\n    return legend;\n  };\n\n  legend.symbolProperties = function(x) {\n    if (!arguments.length) return symbolStyle;\n    symbolStyle = x;\n    return legend;\n  };\n\n  legend.gradientProperties = function(x) {\n    if (!arguments.length) return gradientStyle;\n    gradientStyle = x;\n    return legend;\n  };\n\n  legend.labelProperties = function(x) {\n    if (!arguments.length) return labelStyle;\n    labelStyle = x;\n    return legend;\n  };\n\n  legend.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    titleStyle = x;\n    return legend;\n  };\n\n  legend.reset = function() {\n    reset();\n    return legend;\n  };\n\n  return legend;\n}\n\nvar LEGEND_ORIENT = {\n  'left': 'x1',\n  'right': 'x2',\n  'top-left': 'x1',\n  'top-right': 'x2',\n  'bottom-left': 'x1',\n  'bottom-right': 'x2'\n};\n\nfunction legendPosition(config, item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item, i,\n      def = item.mark.def,\n      offset = def.offset,\n      orient = def.orient,\n      pad = def.padding * 2,\n      ao  = orient === 'left' ? 0 : group.width,\n      lw  = ~~item.bounds.width() + (item.width ? 0 : pad),\n      lh  = ~~item.bounds.height() + (item.height ? 0 : pad),\n      pos = group._legendPositions ||\n        (group._legendPositions = {right: 0.5, left: 0.5});\n\n  o.x = 0.5;\n  o.y = 0.5;\n  o.width = lw;\n  o.height = lh;\n\n  if (orient === 'left' || orient === 'right') {\n    o.y = pos[orient];\n    pos[orient] += lh + def.margin;\n\n    // Calculate axis offset.\n    var axes  = group.axes,\n        items = group.axisItems,\n        bound = LEGEND_ORIENT[orient];\n    for (i=0; i<axes.length; ++i) {\n      if (axes[i].orient() === orient) {\n        ao = Math.max(ao, Math.abs(items[i].bounds[bound]));\n      }\n    }\n  }\n\n  switch (orient) {\n    case 'left':\n      o.x -= ao + offset + lw;\n      break;\n    case 'right':\n      o.x += ao + offset;\n      break;\n    case 'top-left':\n      o.x += offset;\n      o.y += offset;\n      break;\n    case 'top-right':\n      o.x += group.width - lw - offset;\n      o.y += offset;\n      break;\n    case 'bottom-left':\n      o.x += offset;\n      o.y += group.height - lh - offset;\n      break;\n    case 'bottom-right':\n      o.x += group.width - lw - offset;\n      o.y += group.height - lh - offset;\n      break;\n  }\n\n  var baseline = config.baseline,\n      totalHeight = 0;\n  for (i=0; i<group.legendItems.length; i++) {\n    var currItem = group.legendItems[i];\n    totalHeight += currItem.bounds.height() + (item.height ? 0 : pad);\n  }\n\n  if (baseline === 'middle') {\n    o.y += offset + (group.height / 2) - (totalHeight / 2);\n  } else if (baseline === 'bottom') {\n    o.y += offset + group.height - totalHeight;\n  }\n\n  if (trans) trans.interpolate(item, o);\n  var enc = item.mark.def.properties.enter.encode;\n  enc.call(enc, item, group, trans, db, signals, predicates);\n  return true;\n}\n\nfunction legendSymbolExtend(mark, size, shape, fill, stroke, opacity) {\n  var e = mark.properties.enter,\n      u = mark.properties.update;\n  if (size)    e.size    = u.size    = {scale: size.scaleName,   field: 'data'};\n  if (shape)   e.shape   = u.shape   = {scale: shape.scaleName,  field: 'data'};\n  if (fill)    e.fill    = u.fill    = {scale: fill.scaleName,   field: 'data'};\n  if (stroke)  e.stroke  = u.stroke  = {scale: stroke.scaleName, field: 'data'};\n  if (opacity) u.opacity = {scale: opacity.scaleName, field: 'data'};\n}\n\nfunction legendTitle(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        fill: {value: config.titleColor},\n        font: {value: config.titleFont},\n        fontSize: {value: config.titleFontSize},\n        fontWeight: {value: config.titleFontWeight},\n        baseline: {value: 'top'},\n        text: {field: 'data'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction legendSymbols(config) {\n  return {\n    type: 'symbol',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {field: 'offset', mult: 0.5},\n        y: {scale: 'legend', field: 'index'},\n        shape: {value: config.symbolShape},\n        size: {value: config.symbolSize},\n        stroke: {value: config.symbolColor},\n        strokeWidth: {value: config.symbolStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {field: 'offset', mult: 0.5},\n        y: {scale: 'legend', field: 'index'},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction vLegendLabels(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {field: 'offset', offset: 5},\n        y: {scale: 'legend', field: 'index'},\n        fill: {value: config.labelColor},\n        font: {value: config.labelFont},\n        fontSize: {value: config.labelFontSize},\n        align: {value: config.labelAlign},\n        baseline: {value: config.labelBaseline},\n        text: {field: 'label'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        opacity: {value: 1},\n        x: {field: 'offset', offset: 5},\n        y: {scale: 'legend', field: 'index'},\n      }\n    }\n  };\n}\n\nfunction legendGradient(config) {\n  return {\n    type: 'rect',\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        width: {value: config.gradientWidth},\n        height: {value: config.gradientHeight},\n        stroke: {value: config.gradientStrokeColor},\n        strokeWidth: {value: config.gradientStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {value: 0},\n        y: {value: 0},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction hLegendLabels(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {scale: 'legend', field: 'data'},\n        y: {value: 20},\n        dy: {value: 2},\n        fill: {value: config.labelColor},\n        font: {value: config.labelFont},\n        fontSize: {value: config.labelFontSize},\n        align: {field: 'align'},\n        baseline: {value: 'top'},\n        text: {field: 'label'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {scale: 'legend', field: 'data'},\n        y: {value: 20},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nmodule.exports = lgnd;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/legend.js\n// module id = CXWl\n// module chunks = 0","var dl = require('datalib'),\n    parse = require('../parse'),\n    Scale = require('../scene/Scale'),\n    config = require('./config');\n\nfunction compile(module, opt, schema) {\n  var s = module.schema;\n  if (!s) return;\n  if (s.refs) dl.extend(schema.refs, s.refs);\n  if (s.defs) dl.extend(schema.defs, s.defs);\n}\n\nmodule.exports = function(opt) {\n  var schema = null;\n  opt = opt || {};\n\n  // Compile if we're not loading the schema from a URL.\n  // Load from a URL to extend the existing base schema.\n  if (opt.url) {\n    schema = dl.json(dl.extend({url: opt.url}, config.load));\n  } else {\n    schema = {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"title\": \"Vega Visualization Specification Language\",\n      \"defs\": {},\n      \"refs\": {},\n      \"$ref\": \"#/defs/spec\"\n    };\n\n    dl.keys(parse).forEach(function(k) { compile(parse[k], opt, schema); });\n\n    // Scales aren't in the parser, add schema manually\n    compile(Scale, opt, schema);\n  }\n\n  // Extend schema to support custom mark properties or property sets.\n  if (opt.properties) dl.keys(opt.properties).forEach(function(k) {\n    schema.defs.propset.properties[k] = {\"$ref\": \"#/refs/\"+opt.properties[k]+\"Value\"};\n  });\n\n  if (opt.propertySets) dl.keys(opt.propertySets).forEach(function(k) {\n    schema.defs.mark.properties.properties.properties[k] = {\"$ref\": \"#/defs/propset\"};\n  });\n\n  return schema;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/schema.js\n// module id = CiyH\n// module chunks = 0","var deps = module.exports = {\n  ALL: ['data', 'fields', 'scales', 'signals']\n};\ndeps.ALL.forEach(function(k) { deps[k.toUpperCase()] = k; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Dependencies.js\n// module id = D3vM\n// module chunks = 0","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nfunction parseTransforms(model, def) {\n  var transform = transforms[def.type],\n      tx;\n\n  if (!transform) throw new Error('\"' + def.type + '\" is not a valid transformation');\n\n  tx = new transform(model);\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    tx.param(k, def[k]);\n  });\n\n  return tx;\n}\n\nmodule.exports = parseTransforms;\n\nvar keys = dl.keys(transforms)\n  .filter(function(k) { return transforms[k].schema; });\n\nvar defs = keys.reduce(function(acc, k) {\n  return (acc[k+'Transform'] = transforms[k].schema, acc);\n}, {});\n\nparseTransforms.schema = {\n  \"defs\": dl.extend(defs, {\n    \"transform\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": keys.map(function(k) {\n          return {\"$ref\": \"#/defs/\"+k+\"Transform\"};\n        })\n      }\n    }\n  })\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/transforms.js\n// module id = DUWk\n// module chunks = 0","\"use strict\";\nvar config_1 = require('./config');\nvar encoding_1 = require('./encoding');\nvar mark_1 = require('./mark');\nvar stack_1 = require('./stack');\nvar channel_1 = require('./channel');\nvar vlEncoding = require('./encoding');\nvar util_1 = require('./util');\nfunction isFacetSpec(spec) {\n    return spec['facet'] !== undefined;\n}\nexports.isFacetSpec = isFacetSpec;\nfunction isExtendedUnitSpec(spec) {\n    if (isSomeUnitSpec(spec)) {\n        var hasRow = encoding_1.has(spec.encoding, channel_1.ROW);\n        var hasColumn = encoding_1.has(spec.encoding, channel_1.COLUMN);\n        return hasRow || hasColumn;\n    }\n    return false;\n}\nexports.isExtendedUnitSpec = isExtendedUnitSpec;\nfunction isUnitSpec(spec) {\n    if (isSomeUnitSpec(spec)) {\n        return !isExtendedUnitSpec(spec);\n    }\n    return false;\n}\nexports.isUnitSpec = isUnitSpec;\nfunction isSomeUnitSpec(spec) {\n    return spec['mark'] !== undefined;\n}\nexports.isSomeUnitSpec = isSomeUnitSpec;\nfunction isLayerSpec(spec) {\n    return spec['layers'] !== undefined;\n}\nexports.isLayerSpec = isLayerSpec;\nfunction normalize(spec) {\n    if (isExtendedUnitSpec(spec)) {\n        return normalizeExtendedUnitSpec(spec);\n    }\n    if (isUnitSpec(spec)) {\n        return normalizeUnitSpec(spec);\n    }\n    return spec;\n}\nexports.normalize = normalize;\nfunction normalizeExtendedUnitSpec(spec) {\n    var hasRow = encoding_1.has(spec.encoding, channel_1.ROW);\n    var hasColumn = encoding_1.has(spec.encoding, channel_1.COLUMN);\n    var encoding = util_1.duplicate(spec.encoding);\n    delete encoding.column;\n    delete encoding.row;\n    return util_1.extend(spec.name ? { name: spec.name } : {}, spec.description ? { description: spec.description } : {}, { data: spec.data }, spec.transform ? { transform: spec.transform } : {}, {\n        facet: util_1.extend(hasRow ? { row: spec.encoding.row } : {}, hasColumn ? { column: spec.encoding.column } : {}),\n        spec: normalizeUnitSpec({\n            mark: spec.mark,\n            encoding: encoding\n        })\n    }, spec.config ? { config: spec.config } : {});\n}\nexports.normalizeExtendedUnitSpec = normalizeExtendedUnitSpec;\nfunction normalizeUnitSpec(spec) {\n    var config = spec.config;\n    var overlayConfig = config && config.overlay;\n    var overlayWithLine = overlayConfig && spec.mark === mark_1.AREA &&\n        util_1.contains([config_1.AreaOverlay.LINEPOINT, config_1.AreaOverlay.LINE], overlayConfig.area);\n    var overlayWithPoint = overlayConfig && ((overlayConfig.line && spec.mark === mark_1.LINE) ||\n        (overlayConfig.area === config_1.AreaOverlay.LINEPOINT && spec.mark === mark_1.AREA));\n    if (spec.mark === mark_1.ERRORBAR) {\n        return normalizeErrorBarUnitSpec(spec);\n    }\n    if (encoding_1.isRanged(spec.encoding)) {\n        return normalizeRangedUnitSpec(spec);\n    }\n    if (isStacked(spec)) {\n        return spec;\n    }\n    if (overlayWithPoint || overlayWithLine) {\n        return normalizeOverlay(spec, overlayWithPoint, overlayWithLine);\n    }\n    return spec;\n}\nexports.normalizeUnitSpec = normalizeUnitSpec;\nfunction normalizeRangedUnitSpec(spec) {\n    if (spec.encoding) {\n        var hasX = encoding_1.has(spec.encoding, channel_1.X);\n        var hasY = encoding_1.has(spec.encoding, channel_1.Y);\n        var hasX2 = encoding_1.has(spec.encoding, channel_1.X2);\n        var hasY2 = encoding_1.has(spec.encoding, channel_1.Y2);\n        if ((hasX2 && !hasX) || (hasY2 && !hasY)) {\n            var normalizedSpec = util_1.duplicate(spec);\n            if (hasX2 && !hasX) {\n                normalizedSpec.encoding.x = normalizedSpec.encoding.x2;\n                delete normalizedSpec.encoding.x2;\n            }\n            if (hasY2 && !hasY) {\n                normalizedSpec.encoding.y = normalizedSpec.encoding.y2;\n                delete normalizedSpec.encoding.y2;\n            }\n            return normalizedSpec;\n        }\n    }\n    return spec;\n}\nexports.normalizeRangedUnitSpec = normalizeRangedUnitSpec;\nfunction normalizeErrorBarUnitSpec(spec) {\n    var layerSpec = util_1.extend(spec.name ? { name: spec.name } : {}, spec.description ? { description: spec.description } : {}, spec.data ? { data: spec.data } : {}, spec.transform ? { transform: spec.transform } : {}, spec.config ? { config: spec.config } : {}, { layers: [] });\n    if (!spec.encoding) {\n        return layerSpec;\n    }\n    if (spec.mark === mark_1.ERRORBAR) {\n        var ruleSpec = {\n            mark: mark_1.RULE,\n            encoding: util_1.extend(spec.encoding.x ? { x: util_1.duplicate(spec.encoding.x) } : {}, spec.encoding.y ? { y: util_1.duplicate(spec.encoding.y) } : {}, spec.encoding.x2 ? { x2: util_1.duplicate(spec.encoding.x2) } : {}, spec.encoding.y2 ? { y2: util_1.duplicate(spec.encoding.y2) } : {}, {})\n        };\n        var lowerTickSpec = {\n            mark: mark_1.TICK,\n            encoding: util_1.extend(spec.encoding.x ? { x: util_1.duplicate(spec.encoding.x) } : {}, spec.encoding.y ? { y: util_1.duplicate(spec.encoding.y) } : {}, spec.encoding.size ? { size: util_1.duplicate(spec.encoding.size) } : {}, {})\n        };\n        var upperTickSpec = {\n            mark: mark_1.TICK,\n            encoding: util_1.extend({\n                x: spec.encoding.x2 ? util_1.duplicate(spec.encoding.x2) : util_1.duplicate(spec.encoding.x),\n                y: spec.encoding.y2 ? util_1.duplicate(spec.encoding.y2) : util_1.duplicate(spec.encoding.y)\n            }, spec.encoding.size ? { size: util_1.duplicate(spec.encoding.size) } : {})\n        };\n        layerSpec.layers.push(normalizeUnitSpec(ruleSpec));\n        layerSpec.layers.push(normalizeUnitSpec(lowerTickSpec));\n        layerSpec.layers.push(normalizeUnitSpec(upperTickSpec));\n    }\n    return layerSpec;\n}\nexports.normalizeErrorBarUnitSpec = normalizeErrorBarUnitSpec;\nfunction normalizeOverlay(spec, overlayWithPoint, overlayWithLine) {\n    var outerProps = ['name', 'description', 'data', 'transform'];\n    var baseSpec = util_1.omit(spec, outerProps.concat('config'));\n    var baseConfig = util_1.duplicate(spec.config);\n    delete baseConfig.overlay;\n    var layerSpec = util_1.extend(util_1.pick(spec, outerProps), { layers: [baseSpec] }, util_1.keys(baseConfig).length > 0 ? { config: baseConfig } : {});\n    if (overlayWithLine) {\n        var lineSpec = util_1.duplicate(baseSpec);\n        lineSpec.mark = mark_1.LINE;\n        var markConfig = util_1.extend({}, config_1.defaultOverlayConfig.lineStyle, spec.config.overlay.lineStyle);\n        if (util_1.keys(markConfig).length > 0) {\n            lineSpec.config = { mark: markConfig };\n        }\n        layerSpec.layers.push(lineSpec);\n    }\n    if (overlayWithPoint) {\n        var pointSpec = util_1.duplicate(baseSpec);\n        pointSpec.mark = mark_1.POINT;\n        var markConfig = util_1.extend({}, config_1.defaultOverlayConfig.pointStyle, spec.config.overlay.pointStyle);\n        ;\n        if (util_1.keys(markConfig).length > 0) {\n            pointSpec.config = { mark: markConfig };\n        }\n        layerSpec.layers.push(pointSpec);\n    }\n    return layerSpec;\n}\nexports.normalizeOverlay = normalizeOverlay;\nfunction alwaysNoOcclusion(spec) {\n    return vlEncoding.isAggregate(spec.encoding);\n}\nexports.alwaysNoOcclusion = alwaysNoOcclusion;\nfunction fieldDefs(spec) {\n    return vlEncoding.fieldDefs(spec.encoding);\n}\nexports.fieldDefs = fieldDefs;\n;\nfunction getCleanSpec(spec) {\n    return spec;\n}\nexports.getCleanSpec = getCleanSpec;\nfunction isStacked(spec) {\n    return stack_1.stack(spec.mark, spec.encoding, spec.config) !== null;\n}\nexports.isStacked = isStacked;\nfunction transpose(spec) {\n    var oldenc = spec.encoding;\n    var encoding = util_1.duplicate(spec.encoding);\n    encoding.x = oldenc.y;\n    encoding.y = oldenc.x;\n    encoding.row = oldenc.column;\n    encoding.column = oldenc.row;\n    spec.encoding = encoding;\n    return spec;\n}\nexports.transpose = transpose;\n//# sourceMappingURL=spec.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/spec.js\n// module id = F9eC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nfunction autoMaxBins(channel) {\n    switch (channel) {\n        case channel_1.ROW:\n        case channel_1.COLUMN:\n        case channel_1.SIZE:\n        case channel_1.SHAPE:\n            return 6;\n        default:\n            return 10;\n    }\n}\nexports.autoMaxBins = autoMaxBins;\n//# sourceMappingURL=bin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/bin.js\n// module id = FmT5\n// module chunks = 0","\"use strict\";\n(function (ScaleType) {\n    ScaleType[ScaleType[\"LINEAR\"] = 'linear'] = \"LINEAR\";\n    ScaleType[ScaleType[\"LOG\"] = 'log'] = \"LOG\";\n    ScaleType[ScaleType[\"POW\"] = 'pow'] = \"POW\";\n    ScaleType[ScaleType[\"SQRT\"] = 'sqrt'] = \"SQRT\";\n    ScaleType[ScaleType[\"QUANTILE\"] = 'quantile'] = \"QUANTILE\";\n    ScaleType[ScaleType[\"QUANTIZE\"] = 'quantize'] = \"QUANTIZE\";\n    ScaleType[ScaleType[\"ORDINAL\"] = 'ordinal'] = \"ORDINAL\";\n    ScaleType[ScaleType[\"TIME\"] = 'time'] = \"TIME\";\n    ScaleType[ScaleType[\"UTC\"] = 'utc'] = \"UTC\";\n})(exports.ScaleType || (exports.ScaleType = {}));\nvar ScaleType = exports.ScaleType;\n(function (NiceTime) {\n    NiceTime[NiceTime[\"SECOND\"] = 'second'] = \"SECOND\";\n    NiceTime[NiceTime[\"MINUTE\"] = 'minute'] = \"MINUTE\";\n    NiceTime[NiceTime[\"HOUR\"] = 'hour'] = \"HOUR\";\n    NiceTime[NiceTime[\"DAY\"] = 'day'] = \"DAY\";\n    NiceTime[NiceTime[\"WEEK\"] = 'week'] = \"WEEK\";\n    NiceTime[NiceTime[\"MONTH\"] = 'month'] = \"MONTH\";\n    NiceTime[NiceTime[\"YEAR\"] = 'year'] = \"YEAR\";\n})(exports.NiceTime || (exports.NiceTime = {}));\nvar NiceTime = exports.NiceTime;\nexports.defaultScaleConfig = {\n    round: true,\n    textBandWidth: 90,\n    bandSize: 21,\n    padding: 1,\n    useRawDomain: false,\n    opacity: [0.3, 0.8],\n    nominalColorRange: 'category10',\n    sequentialColorRange: ['#AFC6A3', '#09622A'],\n    shapeRange: 'shapes',\n    fontSizeRange: [8, 40],\n    ruleSizeRange: [1, 5],\n    tickSizeRange: [1, 20]\n};\nexports.defaultFacetScaleConfig = {\n    round: true,\n    padding: 16\n};\n//# sourceMappingURL=scale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/scale.js\n// module id = Fw/k\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar common_1 = require('../common');\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar text;\n(function (text_1) {\n    function markType() {\n        return 'text';\n    }\n    text_1.markType = markType;\n    function background(model) {\n        return {\n            x: { value: 0 },\n            y: { value: 0 },\n            width: { field: { group: 'width' } },\n            height: { field: { group: 'height' } },\n            fill: {\n                scale: model.scaleName(channel_1.COLOR),\n                field: model.field(channel_1.COLOR, model.fieldDef(channel_1.COLOR).type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n            }\n        };\n    }\n    text_1.background = background;\n    function properties(model) {\n        var p = {};\n        common_1.applyMarkConfig(p, model, ['angle', 'align', 'baseline', 'dx', 'dy', 'font', 'fontWeight',\n            'fontStyle', 'radius', 'theta', 'text']);\n        var config = model.config();\n        var textFieldDef = model.fieldDef(channel_1.TEXT);\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config, textFieldDef);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        p.fontSize = size(model.encoding().size, model.scaleName(channel_1.SIZE), config);\n        p.text = text(model.encoding().text, model.scaleName(channel_1.TEXT), config);\n        if (model.config().mark.applyColorToBackground && !model.has(channel_1.X) && !model.has(channel_1.Y)) {\n            p.fill = { value: 'black' };\n            var opacity = model.config().mark.opacity;\n            if (opacity) {\n                p.opacity = { value: opacity };\n            }\n            ;\n        }\n        else {\n            common_1.applyColorAndOpacity(p, model);\n        }\n        return p;\n    }\n    text_1.properties = properties;\n    function x(xFieldDef, scaleName, config, textFieldDef) {\n        if (xFieldDef) {\n            if (xFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(xFieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        if (textFieldDef && textFieldDef.type === type_1.QUANTITATIVE) {\n            return { field: { group: 'width' }, offset: -5 };\n        }\n        else {\n            return { value: config.scale.textBandWidth / 2 };\n        }\n    }\n    function y(yFieldDef, scaleName, config) {\n        if (yFieldDef) {\n            if (yFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(yFieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(sizeFieldDef, scaleName, config) {\n        if (sizeFieldDef) {\n            if (sizeFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(sizeFieldDef)\n                };\n            }\n            if (sizeFieldDef.value) {\n                return { value: sizeFieldDef.value };\n            }\n        }\n        return { value: config.mark.fontSize };\n    }\n    function text(textFieldDef, scaleName, config) {\n        if (textFieldDef) {\n            if (textFieldDef.field) {\n                if (type_1.QUANTITATIVE === textFieldDef.type) {\n                    var format = common_1.numberFormat(textFieldDef, config.mark.format, config);\n                    var filter = 'number' + (format ? ':\\'' + format + '\\'' : '');\n                    return {\n                        template: '{{' + fielddef_1.field(textFieldDef, { datum: true }) + ' | ' + filter + '}}'\n                    };\n                }\n                else if (type_1.TEMPORAL === textFieldDef.type) {\n                    return {\n                        template: common_1.timeTemplate(fielddef_1.field(textFieldDef, { datum: true }), textFieldDef.timeUnit, config.mark.format, config.mark.shortTimeLabels, config)\n                    };\n                }\n                else {\n                    return { field: textFieldDef.field };\n                }\n            }\n            else if (textFieldDef.value) {\n                return { value: textFieldDef.value };\n            }\n        }\n        return { value: config.mark.text };\n    }\n})(text = exports.text || (exports.text = {}));\n//# sourceMappingURL=text.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/text.js\n// module id = G+HP\n// module chunks = 0","var dl = require('datalib'),\n    d3 = require('d3'),\n    d3_cloud = require('d3-cloud'),\n    canvas = require('vega-scenegraph').canvas,\n    Tuple = require('vega-dataflow/src/Tuple'),\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Wordcloud(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: 'array<value>', default: require('./screen').size},\n    text: {type: 'field', default: 'data'},\n    rotate: {type: 'field|value', default: 0},\n    font: {type: 'field|value', default: {value: 'sans-serif'}},\n    fontSize: {type: 'field|value', default: 14},\n    fontStyle: {type: 'field|value', default: {value: 'normal'}},\n    fontWeight: {type: 'field|value', default: {value: 'normal'}},\n    fontScale: {type: 'array<value>', default: [10, 50]},\n    padding: {type: 'value', default: 1},\n    spiral: {type: 'value', default: 'archimedean'}\n  });\n\n  this._layout = d3_cloud().canvas(canvas.instance);\n\n  this._output = {\n    'x':          'layout_x',\n    'y':          'layout_y',\n    'font':       'layout_font',\n    'fontSize':   'layout_fontSize',\n    'fontStyle':  'layout_fontStyle',\n    'fontWeight': 'layout_fontWeight',\n    'rotate':     'layout_rotate',\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Wordcloud.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Wordcloud;\n\nfunction get(p) {\n  return (p && p.accessor) || p;\n}\n\nfunction wrap(tuple) {\n  var x = Object.create(tuple);\n  x._tuple = tuple;\n  return x;\n}\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['wordcloud']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      fontSize = this.param('fontSize'),\n      range = fontSize.accessor && this.param('fontScale'),\n      size, scale;\n  fontSize = fontSize.accessor || d3.functor(fontSize);\n\n  // create font size scaling function as needed\n  if (range.length) {\n    scale = d3.scale.sqrt()\n      .domain(dl.extent(data, size=fontSize))\n      .range(range);\n    fontSize = function(x) { return scale(size(x)); };\n  }\n\n  // configure layout\n  layout\n    .size(this.param('size'))\n    .text(get(this.param('text')))\n    .padding(this.param('padding'))\n    .spiral(this.param('spiral'))\n    .rotate(get(this.param('rotate')))\n    .font(get(this.param('font')))\n    .fontStyle(get(this.param('fontStyle')))\n    .fontWeight(get(this.param('fontWeight')))\n    .fontSize(fontSize)\n    .words(data.map(wrap)) // wrap to avoid tuple writes\n    .on('end', function(words) {\n      var size = layout.size(),\n          dx = size[0] >> 1,\n          dy = size[1] >> 1,\n          w, t, i, len;\n\n      for (i=0, len=words.length; i<len; ++i) {\n        w = words[i];\n        t = w._tuple;\n        Tuple.set(t, output.x, w.x + dx);\n        Tuple.set(t, output.y, w.y + dy);\n        Tuple.set(t, output.font, w.font);\n        Tuple.set(t, output.fontSize, w.size);\n        Tuple.set(t, output.fontStyle, w.style);\n        Tuple.set(t, output.fontWeight, w.weight);\n        Tuple.set(t, output.rotate, w.rotate);\n      }\n    })\n    .start();\n\n  // return changeset\n  for (var key in output) input.fields[output[key]] = 1;\n  return input;\n};\n\nmodule.exports = Wordcloud;\n\nvar Parameter = require('./Parameter');\nWordcloud.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Wordcloud transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"wordcloud\"]},\n    \"size\": {\n      \"description\": \"The dimensions of the wordcloud layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [900, 500]\n    },\n    \"font\": {\n      \"description\": \"The font face to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"sans-serif\"\n    },\n    \"fontStyle\": {\n      \"description\": \"The font style to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"normal\"\n    },\n    \"fontWeight\": {\n      \"description\": \"The font weight to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"normal\"\n    },\n    \"fontSize\": {\n      \"description\": \"The font size to use for a word.\",\n      \"oneOf\": [{\"type\": \"number\"}, Parameter.schema, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 14\n    },\n    \"fontScale\": {\n      \"description\": \"The minimum and maximum scaled font sizes, or null to prevent scaling.\",\n      \"oneOf\": [\n        { \"type\": \"null\" },\n        {\n          \"type\": \"array\",\n          \"minItems\": 2,\n          \"maxItems\": 2,\n          \"items\": {\"oneOf\": [{\"type\":\"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n        }\n      ],\n      \"default\": [10, 50]\n    },\n    \"rotate\": {\n      \"description\": \"The field or number to set the roration angle (in degrees).\",\n      \"oneOf\": [\n        {\"type\": \"number\"}, {\"type\": \"string\"},\n        Parameter.schema, {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"text\": {\n      \"description\": \"The field containing the text to use for each word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 'data'\n    },\n    \"spiral\": {\n      \"description\": \"The type of spiral used for positioning words, either 'archimedean' or 'rectangular'.\",\n      \"oneOf\": [{\"enum\": [\"archimedean\", \"rectangular\"]}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"archimedean\"\n    },\n    \"padding\": {\n      \"description\": \"The padding around each word.\",\n      \"oneOf\": [{\"type\": \"number\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 1\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"font\": {\"type\": \"string\", \"default\": \"layout_font\"},\n        \"fontSize\": {\"type\": \"string\", \"default\": \"layout_fontSize\"},\n        \"fontStyle\": {\"type\": \"string\", \"default\": \"layout_fontStyle\"},\n        \"fontWeight\": {\"type\": \"string\", \"default\": \"layout_fontWeight\"},\n        \"rotate\": {\"type\": \"string\", \"default\": \"layout_rotate\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Wordcloud.js\n// module id = GXXi\n// module chunks = 0","var util = require('./util'),\n    d3_time = require('d3-time'),\n    d3_timeF = require('d3-time-format'),\n    d3_numberF = require('d3-format'),\n    numberF = d3_numberF, // defaults to EN-US\n    timeF = d3_timeF,     // defaults to EN-US\n    tmpDate = new Date(2000, 0, 1),\n    monthFull, monthAbbr, dayFull, dayAbbr;\n\n\nmodule.exports = {\n  // Update number formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-format\n  numberLocale: numberLocale,\n  number:       function(f) { return numberF.format(f); },\n  numberPrefix: function(f, v) { return numberF.formatPrefix(f, v); },\n\n  // Update time formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-time-format\n  timeLocale:   timeLocale,\n  time:         function(f) { return timeF.format(f); },\n  utc:          function(f) { return timeF.utcFormat(f); },\n\n  // Set number and time locale simultaneously.\n  locale:       function(l) { numberLocale(l); timeLocale(l); },\n\n  // automatic formatting functions\n  auto: {\n    number:   autoNumberFormat,\n    linear:   linearNumberFormat,\n    time:     function() { return timeAutoFormat(); },\n    utc:      function() { return utcAutoFormat(); }\n  },\n\n  month:      monthFormat,      // format month name from integer code\n  day:        dayFormat,        // format week day name from integer code\n  quarter:    quarterFormat,    // format quarter name from timestamp\n  utcQuarter: utcQuarterFormat  // format quarter name from utc timestamp\n};\n\n// -- Locales ----\n\n// transform 'en-US' style locale string to match d3-format v0.4+ convention\nfunction localeRef(l) {\n  return l.length > 4 && 'locale' + (\n    l[0].toUpperCase() + l[1].toLowerCase() +\n    l[3].toUpperCase() + l[4].toLowerCase()\n  );\n}\n\nfunction numberLocale(l) {\n  var f = util.isString(l) ? d3_numberF[localeRef(l)] : d3_numberF.locale(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  numberF = f;\n}\n\nfunction timeLocale(l) {\n  var f = util.isString(l) ? d3_timeF[localeRef(l)] : d3_timeF.locale(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  timeF = f;\n  monthFull = monthAbbr = dayFull = dayAbbr = null;\n}\n\n// -- Number Formatting ----\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction linearRange(domain, count) {\n  if (!domain.length) domain = [0];\n  if (count == null) count = 10;\n\n  var start = domain[0],\n      stop = domain[domain.length - 1];\n\n  if (stop < start) { error = stop; stop = start; start = error; }\n\n  var span = (stop - start) || (count = 1, start || stop || 1),\n      step = Math.pow(10, Math.floor(Math.log(span / count) / Math.LN10)),\n      error = span / count / step;\n\n  // Filter ticks to get closer to the desired count.\n  if (error >= e10) step *= 10;\n  else if (error >= e5) step *= 5;\n  else if (error >= e2) step *= 2;\n\n  // Round start and stop values to step interval.\n  return [\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  ];\n}\n\nfunction trimZero(f, decimal) {\n  return function(x) {\n    var s = f(x),\n        n = s.indexOf(decimal);\n    if (n < 0) return s;\n\n    var idx = rightmostDigit(s, n),\n        end = idx < s.length ? s.slice(idx) : '';\n\n    while (--idx > n) {\n      if (s[idx] !== '0') { ++idx; break; }\n    }\n    return s.slice(0, idx) + end;\n  };\n}\n\nfunction rightmostDigit(s, n) {\n  var i = s.lastIndexOf('e'), c;\n  if (i > 0) return i;\n  for (i=s.length; --i > n;) {\n    c = s.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i+1; // is digit\n  }\n}\n\nfunction autoNumberFormat(f) {\n  var decimal = numberF.format('.1f')(1)[1]; // get decimal char\n  if (f == null) f = ',';\n  f = d3_numberF.formatSpecifier(f);\n  if (f.precision == null) f.precision = 12;\n  switch (f.type) {\n    case '%': f.precision -= 2; break;\n    case 'e': f.precision -= 1; break;\n  }\n  return trimZero(numberF.format(f), decimal);\n}\n\nfunction linearNumberFormat(domain, count, f) {\n  var range = linearRange(domain, count);\n\n  if (f == null) f = ',f';\n\n  switch (f = d3_numberF.formatSpecifier(f), f.type) {\n    case 's': {\n      var value = Math.max(Math.abs(range[0]), Math.abs(range[1]));\n      if (f.precision == null) f.precision = d3_numberF.precisionPrefix(range[2], value);\n      return numberF.formatPrefix(f, value);\n    }\n    case '':\n    case 'e':\n    case 'g':\n    case 'p':\n    case 'r': {\n      if (f.precision == null) f.precision = d3_numberF.precisionRound(range[2], Math.max(Math.abs(range[0]), Math.abs(range[1]))) - (f.type === 'e');\n      break;\n    }\n    case 'f':\n    case '%': {\n      if (f.precision == null) f.precision = d3_numberF.precisionFixed(range[2]) - 2 * (f.type === '%');\n      break;\n    }\n  }\n  return numberF.format(f);\n}\n\n// -- Datetime Formatting ----\n\nfunction timeAutoFormat() {\n  var f = timeF.format,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.second(date) < d ? formatMillisecond\n        : d3_time.minute(date) < d ? formatSecond\n        : d3_time.hour(date) < d ? formatMinute\n        : d3_time.day(date) < d ? formatHour\n        : d3_time.month(date) < d ?\n          (d3_time.week(date) < d ? formatDay : formatWeek)\n        : d3_time.year(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction utcAutoFormat() {\n  var f = timeF.utcFormat,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.utcSecond(date) < d ? formatMillisecond\n        : d3_time.utcMinute(date) < d ? formatSecond\n        : d3_time.utcHour(date) < d ? formatMinute\n        : d3_time.utcDay(date) < d ? formatHour\n        : d3_time.utcMonth(date) < d ?\n          (d3_time.utcWeek(date) < d ? formatDay : formatWeek)\n        : d3_time.utcYear(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction monthFormat(month, abbreviate) {\n  var f = abbreviate ?\n    (monthAbbr || (monthAbbr = timeF.format('%b'))) :\n    (monthFull || (monthFull = timeF.format('%B')));\n  return (tmpDate.setMonth(month), f(tmpDate));\n}\n\nfunction dayFormat(day, abbreviate) {\n  var f = abbreviate ?\n    (dayAbbr || (dayAbbr = timeF.format('%a'))) :\n    (dayFull || (dayFull = timeF.format('%A')));\n  return (tmpDate.setMonth(0), tmpDate.setDate(2 + day), f(tmpDate));\n}\n\nfunction quarterFormat(date) {\n  return Math.floor(date.getMonth() / 3) + 1;\n}\n\nfunction utcQuarterFormat(date) {\n  return Math.floor(date.getUTCMonth() / 3) + 1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/format.js\n// module id = GXhC\n// module chunks = 0","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/* istanbul ignore next */\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/parser.js\n// module id = H3bJ\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar line;\n(function (line) {\n    function markType() {\n        return 'line';\n    }\n    line.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        var _size = size(model.encoding().size, config);\n        if (_size) {\n            p.strokeWidth = _size;\n        }\n        common_1.applyColorAndOpacity(p, model);\n        common_1.applyMarkConfig(p, model, ['interpolate', 'tension']);\n        return p;\n    }\n    line.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: 0 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { field: { group: 'height' } };\n    }\n    function size(fieldDef, config) {\n        if (fieldDef && fieldDef.value !== undefined) {\n            return { value: fieldDef.value };\n        }\n        return { value: config.mark.lineSize };\n    }\n    function labels(model) {\n        return undefined;\n    }\n    line.labels = labels;\n})(line = exports.line || (exports.line = {}));\n//# sourceMappingURL=line.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/line.js\n// module id = HES2\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    if (o.fill && util.fill(g, o, opac)) {\n      g.fillRect(x, y, w, h);\n    }\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.strokeRect(x, y, w, h);\n    }\n  }\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick()\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/rect.js\n// module id = HaGw\n// module chunks = 0","\"use strict\";\nvar axis_1 = require('../axis');\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nfunction parseAxisComponent(model, axisChannels) {\n    return axisChannels.reduce(function (axis, channel) {\n        if (model.axis(channel)) {\n            axis[channel] = parseAxis(channel, model);\n        }\n        return axis;\n    }, {});\n}\nexports.parseAxisComponent = parseAxisComponent;\nfunction parseInnerAxis(channel, model) {\n    var isCol = channel === channel_1.COLUMN, isRow = channel === channel_1.ROW, type = isCol ? 'x' : isRow ? 'y' : channel;\n    var def = {\n        type: type,\n        scale: model.scaleName(channel),\n        grid: true,\n        tickSize: 0,\n        properties: {\n            labels: {\n                text: { value: '' }\n            },\n            axis: {\n                stroke: { value: 'transparent' }\n            }\n        }\n    };\n    var axis = model.axis(channel);\n    ['layer', 'ticks', 'values', 'subdivide'].forEach(function (property) {\n        var method;\n        var value = (method = exports[property]) ?\n            method(model, channel, def) :\n            axis[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = model.axis(channel).properties || {};\n    ['grid'].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](model, channel, props[group] || {}, def) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseInnerAxis = parseInnerAxis;\nfunction parseAxis(channel, model) {\n    var isCol = channel === channel_1.COLUMN, isRow = channel === channel_1.ROW, type = isCol ? 'x' : isRow ? 'y' : channel;\n    var axis = model.axis(channel);\n    var def = {\n        type: type,\n        scale: model.scaleName(channel)\n    };\n    [\n        'format', 'grid', 'layer', 'offset', 'orient', 'tickSize', 'ticks', 'tickSizeEnd', 'title', 'titleOffset',\n        'tickPadding', 'tickSize', 'tickSizeMajor', 'tickSizeMinor', 'values', 'subdivide'\n    ].forEach(function (property) {\n        var method;\n        var value = (method = exports[property]) ?\n            method(model, channel, def) :\n            axis[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = model.axis(channel).properties || {};\n    [\n        'axis', 'labels',\n        'grid', 'title', 'ticks', 'majorTicks', 'minorTicks'\n    ].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](model, channel, props[group] || {}, def) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseAxis = parseAxis;\nfunction format(model, channel) {\n    return common_1.numberFormat(model.fieldDef(channel), model.axis(channel).format, model.config());\n}\nexports.format = format;\nfunction offset(model, channel) {\n    return model.axis(channel).offset;\n}\nexports.offset = offset;\nfunction gridShow(model, channel) {\n    var grid = model.axis(channel).grid;\n    if (grid !== undefined) {\n        return grid;\n    }\n    return !model.isOrdinalScale(channel) && !model.fieldDef(channel).bin;\n}\nexports.gridShow = gridShow;\nfunction grid(model, channel) {\n    if (channel === channel_1.ROW || channel === channel_1.COLUMN) {\n        return undefined;\n    }\n    return gridShow(model, channel) && ((channel === channel_1.Y || channel === channel_1.X) && !(model.parent() && model.parent().isFacet()));\n}\nexports.grid = grid;\nfunction layer(model, channel, def) {\n    var layer = model.axis(channel).layer;\n    if (layer !== undefined) {\n        return layer;\n    }\n    if (def.grid) {\n        return 'back';\n    }\n    return undefined;\n}\nexports.layer = layer;\n;\nfunction orient(model, channel) {\n    var orient = model.axis(channel).orient;\n    if (orient) {\n        return orient;\n    }\n    else if (channel === channel_1.COLUMN) {\n        return axis_1.AxisOrient.TOP;\n    }\n    return undefined;\n}\nexports.orient = orient;\nfunction ticks(model, channel) {\n    var ticks = model.axis(channel).ticks;\n    if (ticks !== undefined) {\n        return ticks;\n    }\n    if (channel === channel_1.X && !model.fieldDef(channel).bin) {\n        return 5;\n    }\n    return undefined;\n}\nexports.ticks = ticks;\nfunction tickSize(model, channel) {\n    var tickSize = model.axis(channel).tickSize;\n    if (tickSize !== undefined) {\n        return tickSize;\n    }\n    return undefined;\n}\nexports.tickSize = tickSize;\nfunction tickSizeEnd(model, channel) {\n    var tickSizeEnd = model.axis(channel).tickSizeEnd;\n    if (tickSizeEnd !== undefined) {\n        return tickSizeEnd;\n    }\n    return undefined;\n}\nexports.tickSizeEnd = tickSizeEnd;\nfunction title(model, channel) {\n    var axis = model.axis(channel);\n    if (axis.title !== undefined) {\n        return axis.title;\n    }\n    var fieldTitle = fielddef_1.title(model.fieldDef(channel), model.config());\n    var maxLength;\n    if (axis.titleMaxLength) {\n        maxLength = axis.titleMaxLength;\n    }\n    else if (channel === channel_1.X && !model.isOrdinalScale(channel_1.X)) {\n        var unitModel = model;\n        maxLength = unitModel.config().cell.width / model.axis(channel_1.X).characterWidth;\n    }\n    else if (channel === channel_1.Y && !model.isOrdinalScale(channel_1.Y)) {\n        var unitModel = model;\n        maxLength = unitModel.config().cell.height / model.axis(channel_1.Y).characterWidth;\n    }\n    return maxLength ? util_1.truncate(fieldTitle, maxLength) : fieldTitle;\n}\nexports.title = title;\nfunction titleOffset(model, channel) {\n    var titleOffset = model.axis(channel).titleOffset;\n    if (titleOffset !== undefined) {\n        return titleOffset;\n    }\n    return undefined;\n}\nexports.titleOffset = titleOffset;\nvar properties;\n(function (properties) {\n    function axis(model, channel, axisPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.axisColor !== undefined ?\n            { stroke: { value: axis.axisColor } } :\n            {}, axis.axisWidth !== undefined ?\n            { strokeWidth: { value: axis.axisWidth } } :\n            {}, axisPropsSpec || {});\n    }\n    properties.axis = axis;\n    function grid(model, channel, gridPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.gridColor !== undefined ? { stroke: { value: axis.gridColor } } : {}, axis.gridOpacity !== undefined ? { strokeOpacity: { value: axis.gridOpacity } } : {}, axis.gridWidth !== undefined ? { strokeWidth: { value: axis.gridWidth } } : {}, axis.gridDash !== undefined ? { strokeDashOffset: { value: axis.gridDash } } : {}, gridPropsSpec || {});\n    }\n    properties.grid = grid;\n    function labels(model, channel, labelsSpec, def) {\n        var fieldDef = model.fieldDef(channel);\n        var axis = model.axis(channel);\n        var config = model.config();\n        if (!axis.labels) {\n            return util_1.extend({\n                text: ''\n            }, labelsSpec);\n        }\n        if (util_1.contains([type_1.NOMINAL, type_1.ORDINAL], fieldDef.type) && axis.labelMaxLength) {\n            labelsSpec = util_1.extend({\n                text: {\n                    template: '{{ datum.data | truncate:' + axis.labelMaxLength + ' }}'\n                }\n            }, labelsSpec || {});\n        }\n        else if (fieldDef.type === type_1.TEMPORAL) {\n            labelsSpec = util_1.extend({\n                text: {\n                    template: common_1.timeTemplate('datum.data', fieldDef.timeUnit, axis.format, axis.shortTimeLabels, config)\n                }\n            }, labelsSpec);\n        }\n        if (axis.labelAngle !== undefined) {\n            labelsSpec.angle = { value: axis.labelAngle };\n        }\n        else {\n            if (channel === channel_1.X && (fielddef_1.isDimension(fieldDef) || fieldDef.type === type_1.TEMPORAL)) {\n                labelsSpec.angle = { value: 270 };\n            }\n        }\n        if (axis.labelAlign !== undefined) {\n            labelsSpec.align = { value: axis.labelAlign };\n        }\n        else {\n            if (labelsSpec.angle) {\n                if (labelsSpec.angle.value === 270) {\n                    labelsSpec.align = {\n                        value: def.orient === 'top' ? 'left' :\n                            def.type === 'x' ? 'right' :\n                                'center'\n                    };\n                }\n                else if (labelsSpec.angle.value === 90) {\n                    labelsSpec.align = { value: 'center' };\n                }\n            }\n        }\n        if (axis.labelBaseline !== undefined) {\n            labelsSpec.baseline = { value: axis.labelBaseline };\n        }\n        else {\n            if (labelsSpec.angle) {\n                if (labelsSpec.angle.value === 270) {\n                    labelsSpec.baseline = { value: def.type === 'x' ? 'middle' : 'bottom' };\n                }\n                else if (labelsSpec.angle.value === 90) {\n                    labelsSpec.baseline = { value: 'bottom' };\n                }\n            }\n        }\n        if (axis.tickLabelColor !== undefined) {\n            labelsSpec.stroke = { value: axis.tickLabelColor };\n        }\n        if (axis.tickLabelFont !== undefined) {\n            labelsSpec.font = { value: axis.tickLabelFont };\n        }\n        if (axis.tickLabelFontSize !== undefined) {\n            labelsSpec.fontSize = { value: axis.tickLabelFontSize };\n        }\n        return util_1.keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n    }\n    properties.labels = labels;\n    function ticks(model, channel, ticksPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.tickColor !== undefined ? { stroke: { value: axis.tickColor } } : {}, axis.tickWidth !== undefined ? { strokeWidth: { value: axis.tickWidth } } : {}, ticksPropsSpec || {});\n    }\n    properties.ticks = ticks;\n    function title(model, channel, titlePropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.titleColor !== undefined ? { stroke: { value: axis.titleColor } } : {}, axis.titleFont !== undefined ? { font: { value: axis.titleFont } } : {}, axis.titleFontSize !== undefined ? { fontSize: { value: axis.titleFontSize } } : {}, axis.titleFontWeight !== undefined ? { fontWeight: { value: axis.titleFontWeight } } : {}, titlePropsSpec || {});\n    }\n    properties.title = title;\n})(properties = exports.properties || (exports.properties = {}));\n//# sourceMappingURL=axis.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/axis.js\n// module id = HeGT\n// module chunks = 0","module.exports = {\n  ChangeSet:    require('./ChangeSet'),\n  Collector:    require('./Collector'),\n  DataSource:   require('./DataSource'),\n  Dependencies: require('./Dependencies'),\n  Graph:        require('./Graph'),\n  Node:         require('./Node'),\n  Signal:       require('./Signal'),\n  Tuple:        require('./Tuple'),\n  debug:        require('vega-logging').debug\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/index.js\n// module id = Hqva\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar axis_1 = require('../axis');\nvar channel_1 = require('../channel');\nvar config_1 = require('../config');\nvar data_1 = require('../data');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar scale_1 = require('../scale');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar axis_2 = require('./axis');\nvar common_1 = require('./common');\nvar data_2 = require('./data/data');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar scale_2 = require('./scale');\nvar FacetModel = (function (_super) {\n    __extends(FacetModel, _super);\n    function FacetModel(spec, parent, parentGivenName) {\n        _super.call(this, spec, parent, parentGivenName);\n        var config = this._config = this._initConfig(spec.config, parent);\n        var child = this._child = common_1.buildModel(spec.spec, this, this.name('child'));\n        var facet = this._facet = this._initFacet(spec.facet);\n        this._scale = this._initScale(facet, config, child);\n        this._axis = this._initAxis(facet, config, child);\n    }\n    FacetModel.prototype._initConfig = function (specConfig, parent) {\n        return util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), specConfig, parent ? parent.config() : {});\n    };\n    FacetModel.prototype._initFacet = function (facet) {\n        facet = util_1.duplicate(facet);\n        var model = this;\n        encoding_1.channelMappingForEach(this.channels(), facet, function (fieldDef, channel) {\n            if (!fielddef_1.isDimension(fieldDef)) {\n                model.addWarning(channel + ' encoding should be ordinal.');\n            }\n            if (fieldDef.type) {\n                fieldDef.type = type_1.getFullName(fieldDef.type);\n            }\n        });\n        return facet;\n    };\n    FacetModel.prototype._initScale = function (facet, config, child) {\n        return [channel_1.ROW, channel_1.COLUMN].reduce(function (_scale, channel) {\n            if (facet[channel]) {\n                var scaleSpec = facet[channel].scale || {};\n                _scale[channel] = util_1.extend({\n                    type: scale_1.ScaleType.ORDINAL,\n                    round: config.facet.scale.round,\n                    padding: (channel === channel_1.ROW && child.has(channel_1.Y)) || (channel === channel_1.COLUMN && child.has(channel_1.X)) ?\n                        config.facet.scale.padding : 0\n                }, scaleSpec);\n            }\n            return _scale;\n        }, {});\n    };\n    FacetModel.prototype._initAxis = function (facet, config, child) {\n        return [channel_1.ROW, channel_1.COLUMN].reduce(function (_axis, channel) {\n            if (facet[channel]) {\n                var axisSpec = facet[channel].axis;\n                if (axisSpec !== false) {\n                    var modelAxis = _axis[channel] = util_1.extend({}, config.facet.axis, axisSpec === true ? {} : axisSpec || {});\n                    if (channel === channel_1.ROW) {\n                        var yAxis = child.axis(channel_1.Y);\n                        if (yAxis && yAxis.orient !== axis_1.AxisOrient.RIGHT && !modelAxis.orient) {\n                            modelAxis.orient = axis_1.AxisOrient.RIGHT;\n                        }\n                        if (child.has(channel_1.X) && !modelAxis.labelAngle) {\n                            modelAxis.labelAngle = modelAxis.orient === axis_1.AxisOrient.RIGHT ? 90 : 270;\n                        }\n                    }\n                }\n            }\n            return _axis;\n        }, {});\n    };\n    FacetModel.prototype.facet = function () {\n        return this._facet;\n    };\n    FacetModel.prototype.has = function (channel) {\n        return !!this._facet[channel];\n    };\n    FacetModel.prototype.child = function () {\n        return this._child;\n    };\n    FacetModel.prototype.hasSummary = function () {\n        var summary = this.component.data.summary;\n        for (var i = 0; i < summary.length; i++) {\n            if (util_1.keys(summary[i].measures).length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    FacetModel.prototype.dataTable = function () {\n        return (this.hasSummary() ? data_1.SUMMARY : data_1.SOURCE) + '';\n    };\n    FacetModel.prototype.fieldDef = function (channel) {\n        return this.facet()[channel];\n    };\n    FacetModel.prototype.stack = function () {\n        return null;\n    };\n    FacetModel.prototype.parseData = function () {\n        this.child().parseData();\n        this.component.data = data_2.parseFacetData(this);\n    };\n    FacetModel.prototype.parseSelectionData = function () {\n    };\n    FacetModel.prototype.parseLayoutData = function () {\n        this.child().parseLayoutData();\n        this.component.layout = layout_1.parseFacetLayout(this);\n    };\n    FacetModel.prototype.parseScale = function () {\n        var child = this.child();\n        var model = this;\n        child.parseScale();\n        var scaleComponent = this.component.scale = scale_2.parseScaleComponent(this);\n        util_1.keys(child.component.scale).forEach(function (channel) {\n            if (true) {\n                scaleComponent[channel] = child.component.scale[channel];\n                util_1.vals(scaleComponent[channel]).forEach(function (scale) {\n                    var scaleNameWithoutPrefix = scale.name.substr(child.name('').length);\n                    var newName = model.scaleName(scaleNameWithoutPrefix);\n                    child.renameScale(scale.name, newName);\n                    scale.name = newName;\n                });\n                delete child.component.scale[channel];\n            }\n        });\n    };\n    FacetModel.prototype.parseMark = function () {\n        this.child().parseMark();\n        this.component.mark = util_1.extend({\n            name: this.name('cell'),\n            type: 'group',\n            from: util_1.extend(this.dataTable() ? { data: this.dataTable() } : {}, {\n                transform: [{\n                        type: 'facet',\n                        groupby: [].concat(this.has(channel_1.ROW) ? [this.field(channel_1.ROW)] : [], this.has(channel_1.COLUMN) ? [this.field(channel_1.COLUMN)] : [])\n                    }]\n            }),\n            properties: {\n                update: getFacetGroupProperties(this)\n            }\n        }, this.child().assembleGroup());\n    };\n    FacetModel.prototype.parseAxis = function () {\n        this.child().parseAxis();\n        this.component.axis = axis_2.parseAxisComponent(this, [channel_1.ROW, channel_1.COLUMN]);\n    };\n    FacetModel.prototype.parseAxisGroup = function () {\n        var xAxisGroup = parseAxisGroup(this, channel_1.X);\n        var yAxisGroup = parseAxisGroup(this, channel_1.Y);\n        this.component.axisGroup = util_1.extend(xAxisGroup ? { x: xAxisGroup } : {}, yAxisGroup ? { y: yAxisGroup } : {});\n    };\n    FacetModel.prototype.parseGridGroup = function () {\n        var child = this.child();\n        this.component.gridGroup = util_1.extend(!child.has(channel_1.X) && this.has(channel_1.COLUMN) ? { column: getColumnGridGroups(this) } : {}, !child.has(channel_1.Y) && this.has(channel_1.ROW) ? { row: getRowGridGroups(this) } : {});\n    };\n    FacetModel.prototype.parseLegend = function () {\n        this.child().parseLegend();\n        this.component.legend = this._child.component.legend;\n        this._child.component.legend = {};\n    };\n    FacetModel.prototype.assembleParentGroupProperties = function () {\n        return null;\n    };\n    FacetModel.prototype.assembleData = function (data) {\n        data_2.assembleData(this, data);\n        return this._child.assembleData(data);\n    };\n    FacetModel.prototype.assembleLayout = function (layoutData) {\n        this._child.assembleLayout(layoutData);\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    FacetModel.prototype.assembleMarks = function () {\n        return [].concat(util_1.vals(this.component.axisGroup), util_1.flatten(util_1.vals(this.component.gridGroup)), this.component.mark);\n    };\n    FacetModel.prototype.channels = function () {\n        return [channel_1.ROW, channel_1.COLUMN];\n    };\n    FacetModel.prototype.mapping = function () {\n        return this.facet();\n    };\n    FacetModel.prototype.isFacet = function () {\n        return true;\n    };\n    return FacetModel;\n}(model_1.Model));\nexports.FacetModel = FacetModel;\nfunction getFacetGroupProperties(model) {\n    var child = model.child();\n    var mergedCellConfig = util_1.extend({}, child.config().cell, child.config().facet.cell);\n    return util_1.extend({\n        x: model.has(channel_1.COLUMN) ? {\n            scale: model.scaleName(channel_1.COLUMN),\n            field: model.field(channel_1.COLUMN),\n            offset: model.scale(channel_1.COLUMN).padding / 2\n        } : { value: model.config().facet.scale.padding / 2 },\n        y: model.has(channel_1.ROW) ? {\n            scale: model.scaleName(channel_1.ROW),\n            field: model.field(channel_1.ROW),\n            offset: model.scale(channel_1.ROW).padding / 2\n        } : { value: model.config().facet.scale.padding / 2 },\n        width: { field: { parent: model.child().sizeName('width') } },\n        height: { field: { parent: model.child().sizeName('height') } }\n    }, child.assembleParentGroupProperties(mergedCellConfig));\n}\nfunction parseAxisGroup(model, channel) {\n    var axisGroup = null;\n    var child = model.child();\n    if (child.has(channel)) {\n        if (child.axis(channel)) {\n            if (true) {\n                axisGroup = channel === channel_1.X ? getXAxesGroup(model) : getYAxesGroup(model);\n                if (child.axis(channel) && axis_2.gridShow(child, channel)) {\n                    child.component.axis[channel] = axis_2.parseInnerAxis(channel, child);\n                }\n                else {\n                    delete child.component.axis[channel];\n                }\n            }\n            else {\n            }\n        }\n    }\n    return axisGroup;\n}\nfunction getXAxesGroup(model) {\n    var hasCol = model.has(channel_1.COLUMN);\n    return util_1.extend({\n        name: model.name('x-axes'),\n        type: 'group'\n    }, hasCol ? {\n        from: {\n            data: model.dataTable(),\n            transform: [{\n                    type: 'aggregate',\n                    groupby: [model.field(channel_1.COLUMN)],\n                    summarize: { '*': ['count'] }\n                }]\n        }\n    } : {}, {\n        properties: {\n            update: {\n                width: { field: { parent: model.child().sizeName('width') } },\n                height: {\n                    field: { group: 'height' }\n                },\n                x: hasCol ? {\n                    scale: model.scaleName(channel_1.COLUMN),\n                    field: model.field(channel_1.COLUMN),\n                    offset: model.scale(channel_1.COLUMN).padding / 2\n                } : {\n                    value: model.config().facet.scale.padding / 2\n                }\n            }\n        },\n        axes: [axis_2.parseAxis(channel_1.X, model.child())]\n    });\n}\nfunction getYAxesGroup(model) {\n    var hasRow = model.has(channel_1.ROW);\n    return util_1.extend({\n        name: model.name('y-axes'),\n        type: 'group'\n    }, hasRow ? {\n        from: {\n            data: model.dataTable(),\n            transform: [{\n                    type: 'aggregate',\n                    groupby: [model.field(channel_1.ROW)],\n                    summarize: { '*': ['count'] }\n                }]\n        }\n    } : {}, {\n        properties: {\n            update: {\n                width: {\n                    field: { group: 'width' }\n                },\n                height: { field: { parent: model.child().sizeName('height') } },\n                y: hasRow ? {\n                    scale: model.scaleName(channel_1.ROW),\n                    field: model.field(channel_1.ROW),\n                    offset: model.scale(channel_1.ROW).padding / 2\n                } : {\n                    value: model.config().facet.scale.padding / 2\n                }\n            }\n        },\n        axes: [axis_2.parseAxis(channel_1.Y, model.child())]\n    });\n}\nfunction getRowGridGroups(model) {\n    var facetGridConfig = model.config().facet.grid;\n    var rowGrid = {\n        name: model.name('row-grid'),\n        type: 'rule',\n        from: {\n            data: model.dataTable(),\n            transform: [{ type: 'facet', groupby: [model.field(channel_1.ROW)] }]\n        },\n        properties: {\n            update: {\n                y: {\n                    scale: model.scaleName(channel_1.ROW),\n                    field: model.field(channel_1.ROW)\n                },\n                x: { value: 0, offset: -facetGridConfig.offset },\n                x2: { field: { group: 'width' }, offset: facetGridConfig.offset },\n                stroke: { value: facetGridConfig.color },\n                strokeOpacity: { value: facetGridConfig.opacity },\n                strokeWidth: { value: 0.5 }\n            }\n        }\n    };\n    return [rowGrid, {\n            name: model.name('row-grid-end'),\n            type: 'rule',\n            properties: {\n                update: {\n                    y: { field: { group: 'height' } },\n                    x: { value: 0, offset: -facetGridConfig.offset },\n                    x2: { field: { group: 'width' }, offset: facetGridConfig.offset },\n                    stroke: { value: facetGridConfig.color },\n                    strokeOpacity: { value: facetGridConfig.opacity },\n                    strokeWidth: { value: 0.5 }\n                }\n            }\n        }];\n}\nfunction getColumnGridGroups(model) {\n    var facetGridConfig = model.config().facet.grid;\n    var columnGrid = {\n        name: model.name('column-grid'),\n        type: 'rule',\n        from: {\n            data: model.dataTable(),\n            transform: [{ type: 'facet', groupby: [model.field(channel_1.COLUMN)] }]\n        },\n        properties: {\n            update: {\n                x: {\n                    scale: model.scaleName(channel_1.COLUMN),\n                    field: model.field(channel_1.COLUMN)\n                },\n                y: { value: 0, offset: -facetGridConfig.offset },\n                y2: { field: { group: 'height' }, offset: facetGridConfig.offset },\n                stroke: { value: facetGridConfig.color },\n                strokeOpacity: { value: facetGridConfig.opacity },\n                strokeWidth: { value: 0.5 }\n            }\n        }\n    };\n    return [columnGrid, {\n            name: model.name('column-grid-end'),\n            type: 'rule',\n            properties: {\n                update: {\n                    x: { field: { group: 'width' } },\n                    y: { value: 0, offset: -facetGridConfig.offset },\n                    y2: { field: { group: 'height' }, offset: facetGridConfig.offset },\n                    stroke: { value: facetGridConfig.color },\n                    strokeOpacity: { value: facetGridConfig.opacity },\n                    strokeWidth: { value: 0.5 }\n                }\n            }\n        }];\n}\n//# sourceMappingURL=facet.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/facet.js\n// module id = ISRz\n// module chunks = 0","var ts = Date.now();\n\nfunction write(msg) {\n  console.log('[Vega Log]', msg);\n}\n\nfunction error(msg) {\n  console.error('[Vega Err]', msg);\n}\n\nfunction debug(input, args) {\n  if (!debug.enable) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  var state = {\n    prevTime:  Date.now() - ts,\n    stamp: input.stamp\n  };\n\n  if (input.add) {\n    state.add = input.add.length;\n    state.mod = input.mod.length;\n    state.rem = input.rem.length;\n    state.reflow = !!input.reflow;\n  }\n\n  log.apply(console, (args.push(JSON.stringify(state)), args));\n  ts = Date.now();\n}\n\nmodule.exports = {\n  log:   write,\n  error: error,\n  debug: (debug.enable = false, debug)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-logging/index.js\n// module id = J731\n// module chunks = 0","var ChangeSet = require('./ChangeSet'),\n    Node = require('./Node'), // jshint ignore:line\n    Base = Node.prototype;\n\nfunction Signal(graph, name, initialValue) {\n  Base.init.call(this, graph);\n  this._name  = name;\n  this._value = initialValue;\n  this._verbose = false; // Verbose signals re-pulse the graph even if prev === val.\n  this._handlers = [];\n  return this;\n}\n\nvar prototype = (Signal.prototype = Object.create(Base));\nprototype.constructor = Signal;\n\nprototype.name = function() {\n  return this._name;\n};\n\nprototype.value = function(val) {\n  if (!arguments.length) return this._value;\n  return (this._value = val, this);\n};\n\n// Alias to value, for shared API with DataSource\nprototype.values = prototype.value;\n\nprototype.verbose = function(v) {\n  if (!arguments.length) return this._verbose;\n  return (this._verbose = !!v, this);\n};\n\nprototype.evaluate = function(input) {\n  return input.signals[this._name] ? input : this._graph.doNotPropagate;\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nprototype.on = function(handler) {\n  var signal = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    handler(signal.name(), signal.value());\n    return input;\n  };\n\n  this._handlers.push({\n    handler: handler,\n    node: node\n  });\n\n  return this.addListener(node);\n};\n\nprototype.off = function(handler) {\n  var h = this._handlers, i, x;\n\n  for (i=h.length; --i>=0;) {\n    if (!handler || h[i].handler === handler) {\n      x = h.splice(i, 1)[0];\n      this.removeListener(x.node);\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = Signal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Signal.js\n// module id = KMnl\n// module chunks = 0","function Heap(comparator) {\n  this.cmp = comparator;\n  this.nodes = [];\n}\n\nvar prototype = Heap.prototype;\n\nprototype.size = function() {\n  return this.nodes.length;\n};\n\nprototype.clear = function() {\n  return (this.nodes = [], this);\n};\n\nprototype.peek = function() {\n  return this.nodes[0];\n};\n\nprototype.push = function(x) {\n  var array = this.nodes;\n  array.push(x);\n  return _siftdown(array, 0, array.length-1, this.cmp);\n};\n\nprototype.pop = function() {\n  var array = this.nodes,\n      last = array.pop(),\n      item;\n\n  if (array.length) {\n    item = array[0];\n    array[0] = last;\n    _siftup(array, 0, this.cmp);\n  } else {\n    item = last;\n  }\n  return item;\n};\n\nprototype.replace = function(item) {\n  var array = this.nodes,\n      retval = array[0];\n  array[0] = item;\n  _siftup(array, 0, this.cmp);\n  return retval;\n};\n\nprototype.pushpop = function(item) {\n  var array = this.nodes, ref = array[0];\n  if (array.length && this.cmp(ref, item) < 0) {\n    array[0] = item;\n    item = ref;\n    _siftup(array, 0, this.cmp);\n  }\n  return item;\n};\n\nfunction _siftdown(array, start, idx, cmp) {\n  var item, parent, pidx;\n\n  item = array[idx];\n  while (idx > start) {\n    pidx = (idx - 1) >> 1;\n    parent = array[pidx];\n    if (cmp(item, parent) < 0) {\n      array[idx] = parent;\n      idx = pidx;\n      continue;\n    }\n    break;\n  }\n  return (array[idx] = item);\n}\n\nfunction _siftup(array, idx, cmp) {\n  var start = idx,\n      end = array.length,\n      item = array[idx],\n      cidx = 2 * idx + 1, ridx;\n\n  while (cidx < end) {\n    ridx = cidx + 1;\n    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {\n      cidx = ridx;\n    }\n    array[idx] = array[cidx];\n    idx = cidx;\n    cidx = 2 * idx + 1;\n  }\n  array[idx] = item;\n  return _siftdown(array, start, idx, cmp);\n}\n\nmodule.exports = Heap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Heap.js\n// module id = KfF0\n// module chunks = 0","module.exports = {\n  path:       require('./path'),\n  render:     require('./render'),\n  Item:       require('./util/Item'),\n  bound:      require('./util/bound'),\n  Bounds:     require('./util/Bounds'),\n  canvas:     require('./util/canvas'),\n  Gradient:   require('./util/Gradient'),\n  toJSON:     require('./util/scene').toJSON,\n  fromJSON:   require('./util/scene').fromJSON\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/index.js\n// module id = LHV8\n// module chunks = 0","var d3 = require('d3'),\n    bound = require('vega-scenegraph').bound,\n    Tuple = require('vega-dataflow').Tuple,\n    Status = require('./Builder').STATUS;\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease('cubic-in-out');\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  'text': 1,\n  'url':  1\n};\n\nprototype.interpolate = function(item, values) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];\n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        Tuple.set(item, key, next);\n      } else if (typeof curr === 'number' && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        Tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === Status.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === Status.EXIT) {\n      // Only mark item as exited when it is removed.\n      curr.item.status = Status.UPDATE;\n      curr.remove = true;\n    }\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    bound.item(item);\n\n    if (f === 1) {\n      if (curr.remove) {\n        item.status = Status.EXIT;\n        item.remove();\n      }\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n}\n\nmodule.exports = Transition;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Transition.js\n// module id = Lp/H\n// module chunks = 0","module.exports = {\n  size:   [{signal: 'width'}, {signal: 'height'}],\n  mid:    [{expr: 'width/2'}, {expr: 'height/2'}],\n  extent: [\n    {expr: '[-padding.left, -padding.top]'},\n    {expr: '[width+padding.right, height+padding.bottom]'}\n  ]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/screen.js\n// module id = MRce\n// module chunks = 0","module.exports = {\n  'NaN':     'NaN',\n  'E':       'Math.E',\n  'LN2':     'Math.LN2',\n  'LN10':    'Math.LN10',\n  'LOG2E':   'Math.LOG2E',\n  'LOG10E':  'Math.LOG10E',\n  'PI':      'Math.PI',\n  'SQRT1_2': 'Math.SQRT1_2',\n  'SQRT2':   'Math.SQRT2'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/constants.js\n// module id = MSrK\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: 'array<field>'}\n  });\n\n  this._output = {key: 'key', value: 'value'};\n  this._cache = {};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Fold.prototype = Object.create(Transform.prototype));\nprototype.constructor = Fold;\n\nprototype._reset = function(input, output) {\n  for (var id in this._cache) {\n    output.rem.push.apply(output.rem, this._cache[id]);\n  }\n  this._cache = {};\n};\n\nprototype._tuple = function(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] ? Tuple.rederive(x, list[i]) : (list[i] = Tuple.derive(x));\n};\n\nprototype._fn = function(data, on, out) {\n  var i, j, n, m, d, t;\n  for (i=0, n=data.length; i<n; ++i) {\n    d = data[i];\n    for (j=0, m=on.field.length; j<m; ++j) {\n      t = this._tuple(d, j, m);\n      Tuple.set(t, this._output.key, on.field[j]);\n      Tuple.set(t, this._output.value, on.accessor[j](d));\n      out.push(t);\n    }\n  }\n};\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['folding']);\n\n  var fold = this,\n      on = this.param('fields'),\n      output = df.ChangeSet.create(input);\n\n  if (reset) this._reset(input, output);\n\n  this._fn(input.add, on, output.add);\n  this._fn(input.mod, on, reset ? output.add : output.mod);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if (input.add.length || input.rem.length ||\n      on.field.some(function(f) { return !!input.fields[f]; })) {\n    output.fields[this._output.key] = 1;\n    output.fields[this._output.value] = 1;\n  }\n  return output;\n};\n\nmodule.exports = Fold;\n\nFold.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Fold transform\",\n  \"description\": \"Collapse (\\\"fold\\\") one or more data properties into two properties.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"fold\"]},\n    \"fields\": {\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"description\": \"An array of field references indicating the data properties to fold.\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"key\": {\"type\": \"string\", \"default\": \"key\"},\n        \"value\": {\"type\": \"string\", \"default\": \"value\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"fields\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Fold.js\n// module id = MZ+b\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar sort_1 = require('../sort');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar facet_1 = require('./facet');\nvar layer_1 = require('./layer');\nvar timeunit_1 = require('../timeunit');\nvar unit_1 = require('./unit');\nvar spec_1 = require('../spec');\nfunction buildModel(spec, parent, parentGivenName) {\n    if (spec_1.isFacetSpec(spec)) {\n        return new facet_1.FacetModel(spec, parent, parentGivenName);\n    }\n    if (spec_1.isLayerSpec(spec)) {\n        return new layer_1.LayerModel(spec, parent, parentGivenName);\n    }\n    if (spec_1.isUnitSpec(spec)) {\n        return new unit_1.UnitModel(spec, parent, parentGivenName);\n    }\n    console.error('Invalid spec.');\n    return null;\n}\nexports.buildModel = buildModel;\nexports.STROKE_CONFIG = ['stroke', 'strokeWidth',\n    'strokeDash', 'strokeDashOffset', 'strokeOpacity', 'opacity'];\nexports.FILL_CONFIG = ['fill', 'fillOpacity',\n    'opacity'];\nexports.FILL_STROKE_CONFIG = util_1.union(exports.STROKE_CONFIG, exports.FILL_CONFIG);\nfunction applyColorAndOpacity(p, model) {\n    var filled = model.config().mark.filled;\n    var colorFieldDef = model.fieldDef(channel_1.COLOR);\n    var opacityFieldDef = model.fieldDef(channel_1.OPACITY);\n    if (filled) {\n        applyMarkConfig(p, model, exports.FILL_CONFIG);\n    }\n    else {\n        applyMarkConfig(p, model, exports.STROKE_CONFIG);\n    }\n    var colorValue;\n    var opacityValue;\n    if (model.has(channel_1.COLOR)) {\n        colorValue = {\n            scale: model.scaleName(channel_1.COLOR),\n            field: model.field(channel_1.COLOR, colorFieldDef.type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n        };\n    }\n    else if (colorFieldDef && colorFieldDef.value) {\n        colorValue = { value: colorFieldDef.value };\n    }\n    if (model.has(channel_1.OPACITY)) {\n        opacityValue = {\n            scale: model.scaleName(channel_1.OPACITY),\n            field: model.field(channel_1.OPACITY, opacityFieldDef.type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n        };\n    }\n    else if (opacityFieldDef && opacityFieldDef.value) {\n        opacityValue = { value: opacityFieldDef.value };\n    }\n    if (colorValue !== undefined) {\n        if (filled) {\n            p.fill = colorValue;\n        }\n        else {\n            p.stroke = colorValue;\n        }\n    }\n    else {\n        p[filled ? 'fill' : 'stroke'] = p[filled ? 'fill' : 'stroke'] ||\n            { value: model.config().mark.color };\n    }\n    if (opacityValue !== undefined) {\n        p.opacity = opacityValue;\n    }\n}\nexports.applyColorAndOpacity = applyColorAndOpacity;\nfunction applyConfig(properties, config, propsList) {\n    propsList.forEach(function (property) {\n        var value = config[property];\n        if (value !== undefined) {\n            properties[property] = { value: value };\n        }\n    });\n    return properties;\n}\nexports.applyConfig = applyConfig;\nfunction applyMarkConfig(marksProperties, model, propsList) {\n    return applyConfig(marksProperties, model.config().mark, propsList);\n}\nexports.applyMarkConfig = applyMarkConfig;\nfunction numberFormat(fieldDef, format, config) {\n    if (fieldDef.type === type_1.QUANTITATIVE && !fieldDef.bin) {\n        return format || config.numberFormat;\n    }\n    return undefined;\n}\nexports.numberFormat = numberFormat;\nfunction sortField(orderChannelDef) {\n    return (orderChannelDef.sort === sort_1.SortOrder.DESCENDING ? '-' : '') +\n        fielddef_1.field(orderChannelDef, { binSuffix: '_mid' });\n}\nexports.sortField = sortField;\nfunction timeTemplate(templateField, timeUnit, format, shortTimeLabels, config) {\n    if (!timeUnit || format) {\n        var _format = format || config.timeFormat;\n        return '{{' + templateField + ' | time:\\'' + _format + '\\'}}';\n    }\n    else {\n        return timeunit_1.template(timeUnit, templateField, shortTimeLabels);\n    }\n}\nexports.timeTemplate = timeTemplate;\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/common.js\n// module id = MtYt\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    Aggregate = require('../transforms/Aggregate');\n\nvar Properties = {\n  width: 1,\n  height: 1\n};\n\nvar Types = {\n  LINEAR: 'linear',\n  ORDINAL: 'ordinal',\n  LOG: 'log',\n  POWER: 'pow',\n  SQRT: 'sqrt',\n  TIME: 'time',\n  TIME_UTC: 'utc',\n  QUANTILE: 'quantile',\n  QUANTIZE: 'quantize',\n  THRESHOLD: 'threshold'\n};\n\nvar DataRef = {\n  DOMAIN: 'domain',\n  RANGE: 'range',\n\n  COUNT: 'count',\n  GROUPBY: 'groupby',\n  MIN: 'min',\n  MAX: 'max',\n  VALUE: 'value',\n\n  ASC: 'asc',\n  DESC: 'desc'\n};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph).reflows(true);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times.\n  if (this._updated) {\n    input.scales[this._def.name] = 1;\n    log.debug(input, [\"scale\", this._def.name]);\n  }\n  return df.ChangeSet.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    var method = (type === Deps.DATA ? 'data' : 'signal');\n    deps = dl.array(deps);\n    for (var i=0, len=deps.length; i<len; ++i) {\n      this._graph[method](deps[i]).addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + ':prev',\n      s = instance.call(this, group.scale(name)),\n      m = s.type===Types.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var config = this._graph.config(),\n      type = this._def.type || Types.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) throw Error('Unrecognized scale type: ' + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      dataDrivenRange = false,\n      pad = signal.call(this, def.padding) || 0,\n      outer  = def.outerPadding == null ? pad : signal.call(this, def.outerPadding),\n      points = def.points && signal.call(this, def.points),\n      round  = signal.call(this, def.round) || def.round == null,\n      domain, str, spatial=true;\n\n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, DataRef.RANGE, def.range, scale, group);\n  }\n\n  // domain\n  domain = dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  }\n\n  // range\n  if (!dl.equal(prev.range, rng)) {\n    // width-defined range\n    if (def.bandSize) {\n      var bw = signal.call(this, def.bandSize),\n          len = domain.length,\n          space = def.points ? (pad*bw) : (pad*bw*(len-1) + 2*outer),\n          start;\n      if (rng[0] > rng[1]) {\n        start = rng[1] || 0;\n        rng = [start + (bw * len + space), start];\n      } else {\n        start = rng[0] || 0;\n        rng = [start, start + (bw * len + space)];\n      }\n\n      if (def.reverse) rng = rng.reverse();\n    }\n\n    str = typeof rng[0] === 'string';\n    if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n      scale.range(rng); // color or shape values\n      spatial = false;\n    } else if (points && round) {\n      scale.rangeRoundPoints(rng, pad);\n    } else if (points) {\n      scale.rangePoints(rng, pad);\n    } else if (round) {\n      scale.rangeRoundBands(rng, pad, outer);\n    } else {\n      scale.rangeBands(rng, pad, outer);\n    }\n\n    prev.range = rng;\n    this._updated = true;\n  }\n\n  if (!scale.invert && spatial) invertOrdinal(scale);\n}\n\n// \"Polyfill\" ordinal scale inversion. Currently, only ordinal scales\n// with ordered numeric ranges are supported.\nvar bisect = d3.bisector(dl.numcmp).right,\n    findAsc = function(a, x) { return bisect(a,x) - 1; },\n    findDsc = d3.bisector(function(a,b) { return -1 * dl.numcmp(a,b); }).left;\n\nfunction invertOrdinal(scale) {\n  scale.invert = function(x, y) {\n    var rng = scale.range(),\n        asc = rng[0] < rng[1],\n        find = asc ? findAsc : findDsc;\n\n    if (arguments.length === 1) {\n      if (!dl.isNumber(x)) {\n        throw Error('Ordinal scale inversion is only supported for numeric input ('+x+').');\n      }\n      return scale.domain()[find(rng, x)];\n\n    } else if (arguments.length === 2) {  // Invert extents\n      if (!dl.isNumber(x) || !dl.isNumber(y)) {\n        throw Error('Extents to ordinal invert are not numbers ('+x+', '+y+').');\n      }\n\n      var domain = scale.domain(),\n          a = find(rng, x),\n          b = find(rng, y),\n          n = rng.length - 1, r;\n      if (b < a) { r = a; a = b; b = a; } // ensure a <= b\n      if (a < 0) a = 0;\n      if (b > n) b = n;\n\n      return (asc ? dl.range(a, b+1) : dl.range(b, a-1, -1))\n        .map(function(i) { return domain[i]; });\n    }\n  };\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      round = signal.call(this, def.round),\n      exponent = signal.call(this, def.exponent),\n      clamp = signal.call(this, def.clamp),\n      nice = signal.call(this, def.nice),\n      domain, interval;\n\n  // domain\n  domain = (def.type === Types.QUANTILE) ?\n    dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group) :\n    domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  }\n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (signal.call(this, def.range) === 'height') rng = rng.reverse();\n  if (rng && !dl.equal(prev.range, rng)) {\n    scale[round && scale.rangeRound ? 'rangeRound' : 'range'](rng);\n    prev.range = rng;\n    this._updated = true;\n  }\n\n  if (exponent && def.type===Types.POWER) scale.exponent(exponent);\n  if (clamp) scale.clamp(true);\n  if (nice) {\n    if (def.type === Types.TIME) {\n      interval = d3.time[nice];\n      if (!interval) log.error('Unrecognized interval: ' + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction isUniques(scale) {\n  return scale.type === Types.ORDINAL || scale.type === Types.QUANTILE;\n}\n\nfunction getRefs(def) {\n  return def.fields || dl.array(def);\n}\n\nfunction inherits(refs) {\n  return refs.some(function(r) {\n    if (!r.data) return true;\n    return r.data && dl.array(r.field).some(function(f) {\n      return f.parent;\n    });\n  });\n}\n\nfunction getFields(ref, group) {\n  return dl.array(ref.field).map(function(f) {\n    return f.parent ?\n      dl.accessor(f.parent)(group.datum) :\n      f; // String or {'signal'}\n  });\n}\n\n// Scale datarefs can be computed over multiple schema types.\n// This function determines the type of aggregator created, and\n// what data is sent to it: values, tuples, or multi-tuples that must\n// be standardized into a consistent schema.\nfunction aggrType(def, scale) {\n  var refs = getRefs(def);\n\n  // If we're operating over only a single domain, send full tuples\n  // through for efficiency (fewer accessor creations/calls)\n  if (refs.length == 1 && dl.array(refs[0].field).length == 1) {\n    return Aggregate.TYPES.TUPLE;\n  }\n\n  // With quantitative scales, we only care about min/max.\n  if (!isUniques(scale)) return Aggregate.TYPES.VALUE;\n\n  // If we don't sort, then we can send values directly to aggrs as well\n  if (!dl.isObject(def.sort)) return Aggregate.TYPES.VALUE;\n\n  return Aggregate.TYPES.MULTI;\n}\n\nfunction getCache(which, def, scale, group) {\n  var refs = getRefs(def),\n      inherit = inherits(refs),\n      atype = aggrType(def, scale),\n      uniques = isUniques(scale),\n      sort = def.sort,\n      ck = '_'+which,\n      fields = getFields(refs[0], group);\n\n  if (scale[ck] || this[ck]) return scale[ck] || this[ck];\n\n  var cache = new Aggregate(this._graph).type(atype),\n      groupby, summarize;\n\n  // If a scale's dataref doesn't inherit data from the group, we can\n  // store the dataref aggregator at the Scale (dataflow node) level.\n  if (inherit) {\n    scale[ck] = cache;\n  } else {\n    this[ck]  = cache;\n  }\n\n  if (uniques) {\n    if (atype === Aggregate.TYPES.VALUE) {\n      groupby = [{ name: DataRef.GROUPBY, get: dl.identity }];\n      summarize = {'*': DataRef.COUNT};\n    } else if (atype === Aggregate.TYPES.TUPLE) {\n      groupby = [{ name: DataRef.GROUPBY, get: dl.$(fields[0]) }];\n      summarize = dl.isObject(sort) ? [{\n        field: DataRef.VALUE,\n        get:  dl.$(sort.field),\n        ops: [sort.op]\n      }] : {'*': DataRef.COUNT};\n    } else {  // atype === Aggregate.TYPES.MULTI\n      groupby   = DataRef.GROUPBY;\n      summarize = [{ field: DataRef.VALUE, ops: [sort.op] }];\n    }\n  } else {\n    groupby = [];\n    summarize = [{\n      field: DataRef.VALUE,\n      get: (atype == Aggregate.TYPES.TUPLE) ? dl.$(fields[0]) : dl.identity,\n      ops: [DataRef.MIN, DataRef.MAX],\n      as:  [DataRef.MIN, DataRef.MAX]\n    }];\n  }\n\n  cache.param('groupby', groupby)\n    .param('summarize', summarize);\n\n  return (cache._lastUpdate = -1, cache);\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = getRefs(def),\n      inherit = inherits(refs),\n      atype = aggrType(def, scale),\n      cache = getCache.apply(this, arguments),\n      sort  = def.sort,\n      uniques = isUniques(scale),\n      i, rlen, j, flen, ref, fields, field, data, from, cmp;\n\n  function addDep(s) {\n    self.dependency(Deps.SIGNALS, s);\n  }\n\n  if (inherit || (!inherit && cache._lastUpdate < this._stamp)) {\n    for (i=0, rlen=refs.length; i<rlen; ++i) {\n      ref = refs[i];\n      from = ref.data || group.datum._facetID;\n      data = graph.data(from).last();\n\n      if (data.stamp <= this._stamp) continue;\n\n      fields = getFields(ref, group);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        field = fields[j];\n\n        if (atype === Aggregate.TYPES.VALUE) {\n          cache.accessors(null, field);\n        } else if (atype === Aggregate.TYPES.MULTI) {\n          cache.accessors(field, ref.sort || sort.field);\n        } // Else (Tuple-case) is handled by the aggregator accessors by default\n\n        cache.evaluate(data);\n      }\n\n      this.dependency(Deps.DATA, from);\n      cache.dependency(Deps.SIGNALS).forEach(addDep);\n    }\n\n    cache._lastUpdate = this._stamp;\n\n    data = cache.aggr().result();\n    if (uniques) {\n      if (dl.isObject(sort)) {\n        cmp = sort.op + '_' + DataRef.VALUE;\n        cmp = dl.comparator(cmp);\n      } else if (sort === true) {\n        cmp = dl.comparator(DataRef.GROUPBY);\n      }\n\n      if (cmp) data = data.sort(cmp);\n      cache._values = data.map(function(d) { return d[DataRef.GROUPBY]; });\n    } else {\n      data = data[0];\n      cache._values = !dl.isValid(data) ? [] : [data[DataRef.MIN], data[DataRef.MAX]];\n    }\n  }\n\n  return cache._values;\n}\n\nfunction signal(v) {\n  if (!v || !v.signal) return v;\n  var s = v.signal, ref;\n  this.dependency(Deps.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], s, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = dl.isValid(s=signal.call(this, def.domainMin)) ? s : domain[0];\n      } else {\n        domain[0] = dataRef.call(this, DataRef.DOMAIN+DataRef.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = dl.isValid(s=signal.call(this, def.domainMax)) ? s : domain[z];\n      } else {\n        domain[z] = dataRef.call(this, DataRef.DOMAIN+DataRef.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== Types.LOG && def.type !== Types.TIME && def.type !== Types.TIME_UTC && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      config = this._graph.config(),\n      rangeVal = signal.call(this, def.range),\n      rng = [null, null];\n\n  if (rangeVal !== undefined) {\n    if (typeof rangeVal === 'string') {\n      if (Properties[rangeVal]) {\n        rng = [0, group[rangeVal]];\n      } else if (config.range[rangeVal]) {\n        rng = config.range[rangeVal];\n      } else {\n        log.error('Unrecogized range: ' + rangeVal);\n        return rng;\n      }\n    } else if (dl.isArray(rangeVal)) {\n      rng = dl.duplicate(rangeVal).map(signal.bind(this));\n    } else if (dl.isObject(rangeVal)) {\n      return null; // early exit\n    } else {\n      rng = [0, rangeVal];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ?\n      signal.call(this, def.rangeMin) :\n      def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ?\n      signal.call(this, def.rangeMax) :\n      def.rangeMax;\n  }\n\n  if (def.reverse !== undefined) {\n    var rev = signal.call(this, def.reverse);\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n\n  var start = rng[0], end = rng[rng.length-1];\n  if (start === null && end !== null || start !== null && end === null) {\n    log.error('Range is underspecified. Please ensure either the ' +\n      '\"range\" property or both \"rangeMin\" and \"rangeMax\" are specified.');\n  }\n\n  return rng;\n}\n\nmodule.exports = Scale;\n\nvar rangeDef = [\n  {\"enum\": [\"width\", \"height\", \"shapes\", \"category10\", \"category20\", \"category20b\", \"category20c\"]},\n  {\n    \"type\": \"array\",\n    \"items\": {\"oneOf\": [{\"type\":\"string\"}, {\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n  },\n  {\"$ref\": \"#/refs/signal\"}\n];\n\nScale.schema = {\n  \"refs\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"data\": {\n          \"oneOf\": [\n            {\"type\": \"string\"},\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"fields\": {\n                  \"type\": \"array\",\n                  \"items\": {\"$ref\": \"#/refs/data\"}\n                }\n              },\n              \"required\": [\"fields\"]\n            }\n          ]\n        },\n        \"field\": {\n          \"oneOf\": [\n            {\"type\": \"string\"},\n            {\n              \"type\": \"array\",\n              \"items\": {\"type\": \"string\"}\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"parent\": {\"type\": \"string\"}\n              },\n              \"required\": [\"parent\"]\n            },\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"parent\": {\"type\": \"string\"}\n                },\n                \"required\": [\"parent\"]\n              }\n            }\n          ]\n        },\n        \"sort\": {\n          \"oneOf\": [{\"type\": \"boolean\"}, {\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\"type\": \"string\"},\n              \"op\": {\"enum\": require('../transforms/Aggregate').VALID_OPS}\n            }\n          }]\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n\n  \"defs\": {\n    \"scale\": {\n      \"title\": \"Scale function\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n\n          \"type\": {\n            \"enum\": [Types.LINEAR, Types.ORDINAL, Types.TIME, Types.TIME_UTC, Types.LOG,\n              Types.POWER, Types.SQRT, Types.QUANTILE, Types.QUANTIZE, Types.THRESHOLD],\n            \"default\": Types.LINEAR\n          },\n\n          \"domain\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\"type\":\"string\"},\n                    {\"type\": \"number\"},\n                    {\"$ref\": \"#/refs/signal\"}\n                  ]\n                }\n              },\n              {\"$ref\": \"#/refs/data\"},\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"fields\": {\n                    \"type\": \"array\",\n                    \"items\": {\"$ref\": \"#/refs/data\"}\n                  }\n                },\n                \"required\": [\"fields\"],\n              }\n            ]\n          },\n\n          \"domainMin\": {\n            \"oneOf\": [\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/data\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"domainMax\": {\n            \"oneOf\": [\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/data\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"rangeMin\": {\n            \"oneOf\": [\n              {\"type\":\"string\"},\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"rangeMax\": {\n            \"oneOf\": [\n              {\"type\":\"string\"},\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"reverse\": {\n            \"oneOf\": [\n              {\"type\": \"boolean\"},\n              {\"$ref\": \"#/refs/data\"}\n            ],\n          },\n          \"round\": {\"type\": \"boolean\"}\n        },\n\n        \"required\": [\"name\"]\n      }, {\n        \"oneOf\": [{\n          \"properties\": {\n            \"type\": {\"enum\": [Types.ORDINAL]},\n\n            \"range\": {\n              \"oneOf\": rangeDef.concat({\"$ref\": \"#/refs/data\"})\n            },\n\n            \"points\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"padding\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"outerPadding\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"bandSize\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n          },\n          \"required\": [\"type\"]\n        }, {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.TIME, Types.TIME_UTC]},\n            \"range\": {\"oneOf\": rangeDef},\n            \"clamp\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"nice\": {\"oneOf\": [{\"enum\": [\"second\", \"minute\", \"hour\",\n              \"day\", \"week\", \"month\", \"year\"]}, {\"$ref\": \"#/refs/signal\"}]}\n          },\n          \"required\": [\"type\"]\n        }, {\n          \"anyOf\": [{\n            \"properties\": {\n              \"type\": {\"enum\": [Types.LINEAR, Types.LOG, Types.POWER, Types.SQRT,\n                Types.QUANTILE, Types.QUANTIZE, Types.THRESHOLD], \"default\": Types.LINEAR},\n              \"range\": {\"oneOf\": rangeDef},\n              \"clamp\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n              \"nice\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n              \"zero\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]}\n            }\n          }, {\n            \"properties\": {\n              \"type\": {\"enum\": [Types.POWER]},\n              \"exponent\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n            },\n            \"required\": [\"type\"]\n          }]\n        }]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Scale.js\n// module id = NNYs\n// module chunks = 0","module.exports = {\"name\":\"datalib\",\"version\":\"1.8.0\",\"description\":\"JavaScript utilites for loading, summarizing and working with data.\",\"keywords\":[\"data\",\"table\",\"statistics\",\"parse\",\"csv\",\"tsv\",\"json\",\"utility\"],\"repository\":{\"type\":\"git\",\"url\":\"http://github.com/vega/datalib.git\"},\"author\":{\"name\":\"Jeffrey Heer\",\"url\":\"http://idl.cs.washington.edu\"},\"contributors\":[{\"name\":\"Michael Correll\",\"url\":\"http://pages.cs.wisc.edu/~mcorrell/\"},{\"name\":\"Ryan Russell\",\"url\":\"https://github.com/RussellSprouts\"}],\"license\":\"BSD-3-Clause\",\"dependencies\":{\"d3-dsv\":\"0.1\",\"d3-format\":\"0.4\",\"d3-time\":\"0.1\",\"d3-time-format\":\"0.2\",\"topojson\":\"^1.6.19\",\"request\":\"^2.67.0\",\"sync-request\":\"^2.1.0\"},\"devDependencies\":{\"browserify\":\"^12.0.1\",\"chai\":\"^3.4.1\",\"istanbul\":\"latest\",\"jshint\":\"^2.9.1-rc1\",\"mocha\":\"^2.3.4\",\"uglify-js\":\"^2.6.1\"},\"main\":\"src/index.js\",\"scripts\":{\"deploy\":\"npm run test && scripts/deploy.sh\",\"lint\":\"jshint src/\",\"test\":\"npm run lint && TZ=America/Los_Angeles mocha --recursive test/\",\"cover\":\"TZ=America/Los_Angeles istanbul cover _mocha -- --recursive test/\",\"build\":\"browserify src/index.js -d -s dl -o datalib.js\",\"postbuild\":\"uglifyjs datalib.js -c -m -o datalib.min.js\"},\"browser\":{\"buffer\":false,\"fs\":false,\"http\":false,\"request\":false,\"sync-request\":false,\"url\":false}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/package.json\n// module id = NdEd\n// module chunks = 0","// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nvar dispatch = require(\"d3-dispatch\").dispatch;\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\n\nmodule.exports = function() {\n  var size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch(\"word\", \"end\"),\n      timer = null,\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n\n  cloud.canvas = function(_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function() {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(function(d, i) {\n          d.text = text.call(this, d, i);\n          d.font = font.call(this, d, i);\n          d.style = fontStyle.call(this, d, i);\n          d.weight = fontWeight.call(this, d, i);\n          d.rotate = rotate.call(this, d, i);\n          d.size = ~~fontSize.call(this, d, i);\n          d.padding = padding.call(this, d, i);\n          return d;\n        }).sort(function(a, b) { return b.size - a.size; });\n\n    if (timer) clearInterval(timer);\n    timer = setInterval(step, 0);\n    step();\n\n    return cloud;\n\n    function step() {\n      var start = Date.now();\n      while (Date.now() - start < timeInterval && ++i < n && timer) {\n        var d = data[i];\n        d.x = (size[0] * (random() + .5)) >> 1;\n        d.y = (size[1] * (random() + .5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call(\"word\", cloud, d);\n          if (bounds) cloudBounds(bounds, d);\n          else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n      if (i >= n) {\n        cloud.stop();\n        event.call(\"end\", cloud, tags, bounds);\n      }\n    }\n  }\n\n  cloud.stop = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    var context = canvas.getContext(\"2d\");\n    context.fillStyle = context.strokeStyle = \"red\";\n    context.textAlign = \"center\";\n\n    return {context: context, ratio: ratio};\n  }\n\n  function place(board, tag, bounds) {\n    var perimeter = [{x: 0, y: 0}, {x: size[0], y: size[1]}],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n          for (var j = 0; j < h; j++) {\n            last = 0;\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.timeInterval = function(_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function(_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function(_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function(_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function(_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function(_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function(_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function(_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function(_) {\n    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function(_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function(_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function(_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function() {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n};\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return \"serif\";\n}\n\nfunction cloudFontNormal() {\n  return \"normal\";\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n    var w = c.measureText(d.text + \"m\").width * ratio,\n        h = d.size << 1;\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = (w + 0x1f) >> 5 << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= (cw << 5)) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n  for (var j = 0; j < h; j++) {\n    last = 0;\n    for (var i = 0; i <= w; i++) {\n      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n          & board[x + i]) return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function(t) {\n    var sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:  x += dx; break;\n      case 1:  y += dy; break;\n      case 2:  x -= dx; break;\n      default: y -= dy; break;\n    }\n    return [x, y];\n  };\n}\n\n// TODO reuse arrays?\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n  while (++i < n) a[i] = 0;\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement(\"canvas\");\n}\n\nfunction functor(d) {\n  return typeof d === \"function\" ? d : function() { return d; };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-cloud/index.js\n// module id = NobO\n// module chunks = 0","var dl = require('datalib');\n\nfunction parsePadding(pad) {\n  return pad == null ? 'auto' :\n    dl.isObject(pad) ? pad :\n    dl.isNumber(pad) ? {top:pad, left:pad, right:pad, bottom:pad} :\n    pad === 'strict' ? pad : 'auto';\n}\n\nmodule.exports = parsePadding;\nparsePadding.schema = {\n  \"defs\": {\n    \"padding\": {\n      \"oneOf\": [{\n        \"enum\": [\"strict\", \"auto\"]\n      }, {\n        \"type\": \"number\"\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"top\": {\"type\": \"number\"},\n          \"bottom\": {\"type\": \"number\"},\n          \"left\": {\"type\": \"number\"},\n          \"right\": {\"type\": \"number\"}\n        },\n        \"additionalProperties\": false\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/padding.js\n// module id = O3lN\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nfunction parseData(model, spec, callback) {\n  var config = model.config(),\n      count = 0;\n\n  function onError(error, d) {\n    log.error('PARSE DATA FAILED: ' + d.name + ' ' + error);\n    count = -1;\n    callback(error);\n  }\n\n  function onLoad(d) {\n    return function(error, data) {\n      if (error) {\n        onError(error, d);\n      } else if (count > 0) {\n        try {\n          model.data(d.name).values(dl.read(data, d.format));\n          if (--count === 0) callback();\n        } catch (err) {\n          onError(err, d);\n        }\n      }\n    };\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), onLoad(d));\n    }\n    try {\n      parseData.datasource(model, d);\n    } catch (err) {\n      onError(err, d);\n    }\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n}\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform || []).map(function(t) {\n        return parseTransforms(model, t);\n      }),\n      mod = (d.modify || []).map(function(m) {\n        return parseModify(model, m, d);\n      }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    // Derived ds will be pulsed by its src rather than the model.\n    ds.source(d.source).addListener(ds);\n    model.removeListener(ds.pipeline()[0]);\n  }\n\n  return ds;\n};\n\nmodule.exports = parseData;\n\nvar parseDef = {\n  \"oneOf\": [\n    {\"enum\": [\"auto\"]},\n    {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"enum\": [\"number\", \"boolean\", \"date\", \"string\"]\n      }\n    }\n  ]\n};\n\nparseData.schema = {\n  \"defs\": {\n    \"data\": {\n      \"title\": \"Input data set definition\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"transform\": {\"$ref\": \"#/defs/transform\"},\n          \"modify\": {\"$ref\": \"#/defs/modify\"},\n          \"format\": {\n            \"type\": \"object\",\n            \"oneOf\": [{\n              \"properties\": {\n                \"type\": {\"enum\": [\"json\"]},\n                \"parse\": parseDef,\n                \"property\": {\"type\": \"string\"}\n              },\n              \"additionalProperties\": false\n            }, {\n              \"properties\": {\n                \"type\": {\"enum\": [\"csv\", \"tsv\"]},\n                \"parse\": parseDef\n              },\n              \"additionalProperties\": false\n            }, {\n              \"oneOf\": [{\n                \"properties\": {\n                  \"type\": {\"enum\": [\"topojson\"]},\n                  \"feature\": {\"type\": \"string\"}\n                },\n                \"additionalProperties\": false\n              }, {\n                \"properties\": {\n                  \"type\": {\"enum\": [\"topojson\"]},\n                  \"mesh\": {\"type\": \"string\"}\n                },\n                \"additionalProperties\": false\n              }]\n            }, {\n              \"properties\": {\n                \"type\": {\"enum\": [\"treejson\"]},\n                \"children\": {\"type\": \"string\"},\n                \"parse\": parseDef\n              },\n              \"additionalProperties\": false\n            }]\n          }\n        },\n        \"required\": [\"name\"]\n      }, {\n        \"anyOf\": [{\n          \"required\": [\"name\", \"modify\"]\n        }, {\n          \"oneOf\": [{\n            \"properties\": {\"source\": {\"type\": \"string\"}},\n            \"required\": [\"source\"]\n          }, {\n            \"properties\": {\"values\": {\"type\": \"array\"}},\n            \"required\": [\"values\"]\n          }, {\n            \"properties\": {\"url\": {\"type\": \"string\"}},\n            \"required\": [\"url\"]\n          }]\n        }]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/data.js\n// module id = OTIj\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\n(function (Channel) {\n    Channel[Channel[\"X\"] = 'x'] = \"X\";\n    Channel[Channel[\"Y\"] = 'y'] = \"Y\";\n    Channel[Channel[\"X2\"] = 'x2'] = \"X2\";\n    Channel[Channel[\"Y2\"] = 'y2'] = \"Y2\";\n    Channel[Channel[\"ROW\"] = 'row'] = \"ROW\";\n    Channel[Channel[\"COLUMN\"] = 'column'] = \"COLUMN\";\n    Channel[Channel[\"SHAPE\"] = 'shape'] = \"SHAPE\";\n    Channel[Channel[\"SIZE\"] = 'size'] = \"SIZE\";\n    Channel[Channel[\"COLOR\"] = 'color'] = \"COLOR\";\n    Channel[Channel[\"TEXT\"] = 'text'] = \"TEXT\";\n    Channel[Channel[\"DETAIL\"] = 'detail'] = \"DETAIL\";\n    Channel[Channel[\"LABEL\"] = 'label'] = \"LABEL\";\n    Channel[Channel[\"PATH\"] = 'path'] = \"PATH\";\n    Channel[Channel[\"ORDER\"] = 'order'] = \"ORDER\";\n    Channel[Channel[\"OPACITY\"] = 'opacity'] = \"OPACITY\";\n})(exports.Channel || (exports.Channel = {}));\nvar Channel = exports.Channel;\nexports.X = Channel.X;\nexports.Y = Channel.Y;\nexports.X2 = Channel.X2;\nexports.Y2 = Channel.Y2;\nexports.ROW = Channel.ROW;\nexports.COLUMN = Channel.COLUMN;\nexports.SHAPE = Channel.SHAPE;\nexports.SIZE = Channel.SIZE;\nexports.COLOR = Channel.COLOR;\nexports.TEXT = Channel.TEXT;\nexports.DETAIL = Channel.DETAIL;\nexports.LABEL = Channel.LABEL;\nexports.PATH = Channel.PATH;\nexports.ORDER = Channel.ORDER;\nexports.OPACITY = Channel.OPACITY;\nexports.CHANNELS = [exports.X, exports.Y, exports.X2, exports.Y2, exports.ROW, exports.COLUMN, exports.SIZE, exports.SHAPE, exports.COLOR, exports.PATH, exports.ORDER, exports.OPACITY, exports.TEXT, exports.DETAIL, exports.LABEL];\nexports.UNIT_CHANNELS = util_1.without(exports.CHANNELS, [exports.ROW, exports.COLUMN]);\nexports.UNIT_SCALE_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.PATH, exports.ORDER, exports.DETAIL, exports.TEXT, exports.LABEL, exports.X2, exports.Y2]);\nexports.NONSPATIAL_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.X, exports.Y, exports.X2, exports.Y2]);\nexports.NONSPATIAL_SCALE_CHANNELS = util_1.without(exports.UNIT_SCALE_CHANNELS, [exports.X, exports.Y, exports.X2, exports.Y2]);\nexports.STACK_GROUP_CHANNELS = [exports.COLOR, exports.DETAIL, exports.ORDER, exports.OPACITY, exports.SIZE];\n;\nfunction supportMark(channel, mark) {\n    return !!getSupportedMark(channel)[mark];\n}\nexports.supportMark = supportMark;\nfunction getSupportedMark(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.DETAIL:\n        case exports.ORDER:\n        case exports.OPACITY:\n        case exports.ROW:\n        case exports.COLUMN:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, line: true, area: true, text: true\n            };\n        case exports.X2:\n        case exports.Y2:\n            return {\n                rule: true, bar: true, area: true\n            };\n        case exports.SIZE:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, text: true\n            };\n        case exports.SHAPE:\n            return { point: true };\n        case exports.TEXT:\n            return { text: true };\n        case exports.PATH:\n            return { line: true };\n    }\n    return {};\n}\nexports.getSupportedMark = getSupportedMark;\n;\nfunction getSupportedRole(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.OPACITY:\n        case exports.LABEL:\n        case exports.DETAIL:\n            return {\n                measure: true,\n                dimension: true\n            };\n        case exports.ROW:\n        case exports.COLUMN:\n        case exports.SHAPE:\n            return {\n                measure: false,\n                dimension: true\n            };\n        case exports.X2:\n        case exports.Y2:\n        case exports.SIZE:\n        case exports.TEXT:\n            return {\n                measure: true,\n                dimension: false\n            };\n        case exports.PATH:\n            return {\n                measure: false,\n                dimension: true\n            };\n    }\n    throw new Error('Invalid encoding channel' + channel);\n}\nexports.getSupportedRole = getSupportedRole;\nfunction hasScale(channel) {\n    return !util_1.contains([exports.DETAIL, exports.PATH, exports.TEXT, exports.LABEL, exports.ORDER], channel);\n}\nexports.hasScale = hasScale;\n//# sourceMappingURL=channel.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/channel.js\n// module id = P/aK\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Tuple = require('vega-dataflow').Tuple,\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Impute(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    orderby: {type: 'array<field>'},\n    field:   {type: 'field'},\n    method:  {type: 'value', default: 'value'},\n    value:   {type: 'value', default: 0}\n  });\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Impute.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Impute;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['imputing']);\n\n  var groupby = this.param('groupby'),\n      orderby = this.param('orderby'),\n      method = this.param('method'),\n      value = this.param('value'),\n      field = this.param('field'),\n      get = field.accessor,\n      name = field.field,\n      prev = this._imputed || [], curr = [],\n      groups = partition(data, groupby.accessor, orderby.accessor),\n      domain = groups.domain,\n      group, i, j, n, m, t;\n\n  function getval(x) {\n    return x == null ? null : get(x);\n  }\n\n  for (j=0, m=groups.length; j<m; ++j) {\n    group = groups[j];\n\n    // determine imputation value\n    if (method !== 'value') {\n      value = dl[method](group, getval);\n    }\n\n    // add tuples for missing values\n    for (i=0, n=group.length; i<n; ++i) {\n      if (group[i] == null) {\n        t = tuple(groupby.field, group.values, orderby.field, domain[i]);\n        t[name] = value;\n        curr.push(t);\n      }\n    }\n  }\n\n  // update changeset with imputed tuples\n  for (i=0, n=curr.length; i<n; ++i) {\n    input.add.push(curr[i]);\n  }\n  for (i=0, n=prev.length; i<n; ++i) {\n    input.rem.push(prev[i]);\n  }\n  this._imputed = curr;\n\n  return input;\n};\n\nfunction tuple(gb, gv, ob, ov) {\n  var t = {_imputed: true}, i;\n  for (i=0; i<gv.length; ++i) t[gb[i]] = gv[i];\n  for (i=0; i<ov.length; ++i) t[ob[i]] = ov[i];\n  return Tuple.ingest(t);\n}\n\nfunction partition(data, groupby, orderby) {\n  var groups = [],\n      get = function(f) { return f(x); },\n      val = function(d) { return (x=d, orderby.map(get)); },\n      map, i, x, k, g, domain, lut, N;\n\n  domain = groups.domain = dl.unique(data, val);\n  N = domain.length;\n  lut = domain.reduce(function(m, d, i) {\n    return (m[d] = {value:d, index:i}, m);\n  }, {});\n\n  // partition data points into groups\n  for (map={}, i=0; i<data.length; ++i) {\n    x = data[i];\n    k = groupby == null ? [] : groupby.map(get);\n    g = map[k] || (groups.push(map[k] = Array(N)), map[k].values = k, map[k]);\n    g[lut[val(x)].index] = x;\n  }\n\n  return groups;\n}\n\nmodule.exports = Impute;\n\nImpute.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Impute transform\",\n  \"description\": \"Performs imputation of missing values.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"impute\"]},\n    \"method\": {\n      \"description\": \"The imputation method to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"value\", \"mean\", \"median\", \"min\", \"max\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"value\"\n    },\n    \"value\": {\n      \"description\": \"The value to use for missing data if the method is 'value'.\",\n      \"oneOf\": [\n        {\"type\": \"number\"},\n        {\"type\": \"string\"},\n        {\"type\": \"boolean\"},\n        {\"type\": \"null\"},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"field\": {\n      \"description\": \"The data field to impute.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"groupby\": {\n      \"description\": \"A list of fields to group the data into series.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"orderby\": {\n      \"description\": \"A list of fields to determine ordering within series.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\", \"orderby\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Impute.js\n// module id = P7vC\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    ChangeSet = df.ChangeSet,\n    Base = df.Graph.prototype,\n    Node  = df.Node, // jshint ignore:line\n    GroupBuilder = require('../scene/GroupBuilder'),\n    visit = require('../scene/visit'),\n    compiler = require('../parse/expr'),\n    config = require('./config');\n\nfunction Model(cfg) {\n  this._defs = {};\n  this._predicates = {};\n\n  this._scene  = null;  // Root scenegraph node.\n  this._groups = null;  // Index of group items.\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder.\n\n  this._reset = {axes: false, legends: false};\n\n  this.config(cfg);\n  this.expr = compiler(this);\n  Base.init.call(this);\n}\n\nvar prototype = (Model.prototype = Object.create(Base));\nprototype.constructor = Model;\n\nprototype.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nprototype.config = function(cfg) {\n  if (!arguments.length) return this._config;\n  this._config = Object.create(config);\n  for (var name in cfg) {\n    var x = cfg[name], y = this._config[name];\n    if (dl.isObject(x) && dl.isObject(y)) {\n      this._config[name] = dl.extend({}, y, x);\n    } else {\n      this._config[name] = x;\n    }\n  }\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (this._defs) this._defs.width = width;\n  if (this._defs && this._defs.marks) this._defs.marks.width = width;\n  if (this._scene) {\n    this._scene.items[0].width = width;\n    this._scene.items[0]._dirty = true;\n  }\n  this._reset.axes = true;\n  return this;\n};\n\nprototype.height = function(height) {\n  if (this._defs) this._defs.height = height;\n  if (this._defs && this._defs.marks) this._defs.marks.height = height;\n  if (this._scene) {\n    this._scene.items[0].height = height;\n    this._scene.items[0]._dirty = true;\n  }\n  this._reset.axes = true;\n  return this;\n};\n\nprototype.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nprototype.data = function() {\n  var data = Base.data.apply(this, arguments);\n  if (arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, pred = {};\n  if (!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { pred[n] = m._predicates[n]; });\n  return pred;\n}\n\nprototype.predicate = function(name, predicate) {\n  if (arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nprototype.predicates = function() { return this._predicates; };\n\nprototype.scene = function(renderer) {\n  if (!arguments.length) return this._scene;\n\n  if (this._builder) {\n    this.node().removeListener(this._builder);\n    this._builder._groupBuilder.disconnect();\n  }\n\n  var m = this,\n      b = this._builder = new Node(this);\n\n  b.evaluate = function(input) {\n    if (b._groupBuilder) return input;\n\n    var gb = b._groupBuilder = new GroupBuilder(m, m._defs.marks, m._scene={}),\n        p  = gb.pipeline();\n\n    m._groups = {};\n    this.addListener(gb.connect());\n    p[p.length-1].addListener(renderer);\n    return input;\n  };\n\n  this.addListener(b);\n  return this;\n};\n\nprototype.group = function(id, item) {\n  var groups = this._groups;\n  if (arguments.length === 1) return groups[id];\n  return (groups[id] = item, this);\n};\n\nprototype.reset = function() {\n  if (this._scene && this._reset.axes) {\n    visit(this._scene, function(item) {\n      if (item.axes) item.axes.forEach(function(axis) { axis.reset(); });\n    });\n    this._reset.axes = false;\n  }\n  if (this._scene && this._reset.legends) {\n    visit(this._scene, function(item) {\n      if (item.legends) item.legends.forEach(function(l) { l.reset(); });\n    });\n    this._reset.legends = false;\n  }\n  return this;\n};\n\nprototype.addListener = function(l) {\n  this.node().addListener(l);\n};\n\nprototype.removeListener = function(l) {\n  this.node().removeListener(l);\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/Model.js\n// module id = PwiD\n// module chunks = 0","\"use strict\";\nvar scale_1 = require('./scale');\nvar axis_1 = require('./axis');\nvar legend_1 = require('./legend');\nexports.defaultCellConfig = {\n    width: 200,\n    height: 200\n};\nexports.defaultFacetCellConfig = {\n    stroke: '#ccc',\n    strokeWidth: 1\n};\nvar defaultFacetGridConfig = {\n    color: '#000000',\n    opacity: 0.4,\n    offset: 0\n};\nexports.defaultFacetConfig = {\n    scale: scale_1.defaultFacetScaleConfig,\n    axis: axis_1.defaultFacetAxisConfig,\n    grid: defaultFacetGridConfig,\n    cell: exports.defaultFacetCellConfig\n};\n(function (FontWeight) {\n    FontWeight[FontWeight[\"NORMAL\"] = 'normal'] = \"NORMAL\";\n    FontWeight[FontWeight[\"BOLD\"] = 'bold'] = \"BOLD\";\n})(exports.FontWeight || (exports.FontWeight = {}));\nvar FontWeight = exports.FontWeight;\n(function (Shape) {\n    Shape[Shape[\"CIRCLE\"] = 'circle'] = \"CIRCLE\";\n    Shape[Shape[\"SQUARE\"] = 'square'] = \"SQUARE\";\n    Shape[Shape[\"CROSS\"] = 'cross'] = \"CROSS\";\n    Shape[Shape[\"DIAMOND\"] = 'diamond'] = \"DIAMOND\";\n    Shape[Shape[\"TRIANGLEUP\"] = 'triangle-up'] = \"TRIANGLEUP\";\n    Shape[Shape[\"TRIANGLEDOWN\"] = 'triangle-down'] = \"TRIANGLEDOWN\";\n})(exports.Shape || (exports.Shape = {}));\nvar Shape = exports.Shape;\n(function (HorizontalAlign) {\n    HorizontalAlign[HorizontalAlign[\"LEFT\"] = 'left'] = \"LEFT\";\n    HorizontalAlign[HorizontalAlign[\"RIGHT\"] = 'right'] = \"RIGHT\";\n    HorizontalAlign[HorizontalAlign[\"CENTER\"] = 'center'] = \"CENTER\";\n})(exports.HorizontalAlign || (exports.HorizontalAlign = {}));\nvar HorizontalAlign = exports.HorizontalAlign;\n(function (VerticalAlign) {\n    VerticalAlign[VerticalAlign[\"TOP\"] = 'top'] = \"TOP\";\n    VerticalAlign[VerticalAlign[\"MIDDLE\"] = 'middle'] = \"MIDDLE\";\n    VerticalAlign[VerticalAlign[\"BOTTOM\"] = 'bottom'] = \"BOTTOM\";\n})(exports.VerticalAlign || (exports.VerticalAlign = {}));\nvar VerticalAlign = exports.VerticalAlign;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NORMAL\"] = 'normal'] = \"NORMAL\";\n    FontStyle[FontStyle[\"ITALIC\"] = 'italic'] = \"ITALIC\";\n})(exports.FontStyle || (exports.FontStyle = {}));\nvar FontStyle = exports.FontStyle;\n(function (Interpolate) {\n    Interpolate[Interpolate[\"LINEAR\"] = 'linear'] = \"LINEAR\";\n    Interpolate[Interpolate[\"LINEAR_CLOSED\"] = 'linear-closed'] = \"LINEAR_CLOSED\";\n    Interpolate[Interpolate[\"STEP\"] = 'step'] = \"STEP\";\n    Interpolate[Interpolate[\"STEP_BEFORE\"] = 'step-before'] = \"STEP_BEFORE\";\n    Interpolate[Interpolate[\"STEP_AFTER\"] = 'step-after'] = \"STEP_AFTER\";\n    Interpolate[Interpolate[\"BASIS\"] = 'basis'] = \"BASIS\";\n    Interpolate[Interpolate[\"BASIS_OPEN\"] = 'basis-open'] = \"BASIS_OPEN\";\n    Interpolate[Interpolate[\"BASIS_CLOSED\"] = 'basis-closed'] = \"BASIS_CLOSED\";\n    Interpolate[Interpolate[\"CARDINAL\"] = 'cardinal'] = \"CARDINAL\";\n    Interpolate[Interpolate[\"CARDINAL_OPEN\"] = 'cardinal-open'] = \"CARDINAL_OPEN\";\n    Interpolate[Interpolate[\"CARDINAL_CLOSED\"] = 'cardinal-closed'] = \"CARDINAL_CLOSED\";\n    Interpolate[Interpolate[\"BUNDLE\"] = 'bundle'] = \"BUNDLE\";\n    Interpolate[Interpolate[\"MONOTONE\"] = 'monotone'] = \"MONOTONE\";\n})(exports.Interpolate || (exports.Interpolate = {}));\nvar Interpolate = exports.Interpolate;\n(function (AreaOverlay) {\n    AreaOverlay[AreaOverlay[\"LINE\"] = 'line'] = \"LINE\";\n    AreaOverlay[AreaOverlay[\"LINEPOINT\"] = 'linepoint'] = \"LINEPOINT\";\n    AreaOverlay[AreaOverlay[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.AreaOverlay || (exports.AreaOverlay = {}));\nvar AreaOverlay = exports.AreaOverlay;\nexports.defaultOverlayConfig = {\n    line: false,\n    pointStyle: { filled: true },\n    lineStyle: {}\n};\nexports.defaultMarkConfig = {\n    color: '#4682b4',\n    shape: Shape.CIRCLE,\n    strokeWidth: 2,\n    size: 30,\n    barThinSize: 2,\n    ruleSize: 1,\n    tickThickness: 1,\n    fontSize: 10,\n    baseline: VerticalAlign.MIDDLE,\n    text: 'Abc',\n    shortTimeLabels: false,\n    applyColorToBackground: false\n};\nexports.defaultConfig = {\n    numberFormat: 's',\n    timeFormat: '%Y-%m-%d',\n    countTitle: 'Number of Records',\n    cell: exports.defaultCellConfig,\n    mark: exports.defaultMarkConfig,\n    overlay: exports.defaultOverlayConfig,\n    scale: scale_1.defaultScaleConfig,\n    axis: axis_1.defaultAxisConfig,\n    legend: legend_1.defaultLegendConfig,\n    facet: exports.defaultFacetConfig,\n};\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/config.js\n// module id = Py5Z\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('../../aggregate');\nvar data_1 = require('../../data');\nvar fielddef_1 = require('../../fielddef');\nvar util_1 = require('../../util');\nvar summary;\n(function (summary) {\n    function addDimension(dims, fieldDef) {\n        if (fieldDef.bin) {\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_start' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_mid' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_end' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_range' })] = true;\n        }\n        else {\n            dims[fielddef_1.field(fieldDef)] = true;\n        }\n        return dims;\n    }\n    function parseUnit(model) {\n        var dims = {};\n        var meas = {};\n        model.forEach(function (fieldDef, channel) {\n            if (fieldDef.aggregate) {\n                if (fieldDef.aggregate === aggregate_1.AggregateOp.COUNT) {\n                    meas['*'] = meas['*'] || {};\n                    meas['*']['count'] = true;\n                }\n                else {\n                    meas[fieldDef.field] = meas[fieldDef.field] || {};\n                    meas[fieldDef.field][fieldDef.aggregate] = true;\n                }\n            }\n            else {\n                addDimension(dims, fieldDef);\n            }\n        });\n        return [{\n                name: model.dataName(data_1.SUMMARY),\n                dimensions: dims,\n                measures: meas\n            }];\n    }\n    summary.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.summary) {\n            var summaryComponents = childDataComponent.summary.map(function (summaryComponent) {\n                summaryComponent.dimensions = model.reduce(addDimension, summaryComponent.dimensions);\n                var summaryNameWithoutPrefix = summaryComponent.name.substr(model.child().name('').length);\n                model.child().renameData(summaryComponent.name, summaryNameWithoutPrefix);\n                summaryComponent.name = summaryNameWithoutPrefix;\n                return summaryComponent;\n            });\n            delete childDataComponent.summary;\n            return summaryComponents;\n        }\n        return [];\n    }\n    summary.parseFacet = parseFacet;\n    function mergeMeasures(parentMeasures, childMeasures) {\n        for (var field_1 in childMeasures) {\n            if (childMeasures.hasOwnProperty(field_1)) {\n                var ops = childMeasures[field_1];\n                for (var op in ops) {\n                    if (ops.hasOwnProperty(op)) {\n                        if (field_1 in parentMeasures) {\n                            parentMeasures[field_1][op] = true;\n                        }\n                        else {\n                            parentMeasures[field_1] = { op: true };\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function parseLayer(model) {\n        var summaries = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source && childDataComponent.summary) {\n                childDataComponent.summary.forEach(function (childSummary) {\n                    var key = util_1.hash(childSummary.dimensions);\n                    if (key in summaries) {\n                        mergeMeasures(summaries[key].measures, childSummary.measures);\n                    }\n                    else {\n                        childSummary.name = model.dataName(data_1.SUMMARY) + '_' + util_1.keys(summaries).length;\n                        summaries[key] = childSummary;\n                    }\n                    child.renameData(child.dataName(data_1.SUMMARY), summaries[key].name);\n                    delete childDataComponent.summary;\n                });\n            }\n        });\n        return util_1.vals(summaries);\n    }\n    summary.parseLayer = parseLayer;\n    function assemble(component, model) {\n        if (!component.summary) {\n            return [];\n        }\n        return component.summary.reduce(function (summaryData, summaryComponent) {\n            var dims = summaryComponent.dimensions;\n            var meas = summaryComponent.measures;\n            var groupby = util_1.keys(dims);\n            var summarize = util_1.reduce(meas, function (aggregator, fnDictSet, field) {\n                aggregator[field] = util_1.keys(fnDictSet);\n                return aggregator;\n            }, {});\n            if (util_1.keys(meas).length > 0) {\n                summaryData.push({\n                    name: summaryComponent.name,\n                    source: model.dataName(data_1.SOURCE),\n                    transform: [{\n                            type: 'aggregate',\n                            groupby: groupby,\n                            summarize: summarize\n                        }]\n                });\n            }\n            return summaryData;\n        }, []);\n    }\n    summary.assemble = assemble;\n})(summary = exports.summary || (exports.summary = {}));\n//# sourceMappingURL=summary.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/summary.js\n// module id = QNWf\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nvar util_1 = require('./util');\nfunction countRetinal(encoding) {\n    var count = 0;\n    if (encoding.color) {\n        count++;\n    }\n    if (encoding.opacity) {\n        count++;\n    }\n    if (encoding.size) {\n        count++;\n    }\n    if (encoding.shape) {\n        count++;\n    }\n    return count;\n}\nexports.countRetinal = countRetinal;\nfunction channels(encoding) {\n    return channel_1.CHANNELS.filter(function (channel) {\n        return has(encoding, channel);\n    });\n}\nexports.channels = channels;\nfunction has(encoding, channel) {\n    var channelEncoding = encoding && encoding[channel];\n    return channelEncoding && (channelEncoding.field !== undefined ||\n        (util_1.isArray(channelEncoding) && channelEncoding.length > 0));\n}\nexports.has = has;\nfunction isAggregate(encoding) {\n    return util_1.some(channel_1.CHANNELS, function (channel) {\n        if (has(encoding, channel) && encoding[channel].aggregate) {\n            return true;\n        }\n        return false;\n    });\n}\nexports.isAggregate = isAggregate;\nfunction isRanged(encoding) {\n    return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));\n}\nexports.isRanged = isRanged;\nfunction fieldDefs(encoding) {\n    var arr = [];\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(encoding, channel)) {\n            if (util_1.isArray(encoding[channel])) {\n                encoding[channel].forEach(function (fieldDef) {\n                    arr.push(fieldDef);\n                });\n            }\n            else {\n                arr.push(encoding[channel]);\n            }\n        }\n    });\n    return arr;\n}\nexports.fieldDefs = fieldDefs;\n;\nfunction forEach(encoding, f, thisArg) {\n    channelMappingForEach(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.forEach = forEach;\nfunction channelMappingForEach(channels, mapping, f, thisArg) {\n    var i = 0;\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    f.call(thisArg, fieldDef, channel, i++);\n                });\n            }\n            else {\n                f.call(thisArg, mapping[channel], channel, i++);\n            }\n        }\n    });\n}\nexports.channelMappingForEach = channelMappingForEach;\nfunction map(encoding, f, thisArg) {\n    return channelMappingMap(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.map = map;\nfunction channelMappingMap(channels, mapping, f, thisArg) {\n    var arr = [];\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    arr.push(f.call(thisArg, fieldDef, channel));\n                });\n            }\n            else {\n                arr.push(f.call(thisArg, mapping[channel], channel));\n            }\n        }\n    });\n    return arr;\n}\nexports.channelMappingMap = channelMappingMap;\nfunction reduce(encoding, f, init, thisArg) {\n    return channelMappingReduce(channel_1.CHANNELS, encoding, f, init, thisArg);\n}\nexports.reduce = reduce;\nfunction channelMappingReduce(channels, mapping, f, init, thisArg) {\n    var r = init;\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    r = f.call(thisArg, r, fieldDef, channel);\n                });\n            }\n            else {\n                r = f.call(thisArg, r, mapping[channel], channel);\n            }\n        }\n    });\n    return r;\n}\nexports.channelMappingReduce = channelMappingReduce;\n//# sourceMappingURL=encoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/encoding.js\n// module id = QSMf\n// module chunks = 0","module.exports = function visit(node, func) {\n  var i, n, s, m, items;\n  if (func(node)) return true;\n\n  var sets = ['items', 'axisItems', 'legendItems'];\n  for (s=0, m=sets.length; s<m; ++s) {\n    if ((items = node[sets[s]])) {\n      for (i=0, n=items.length; i<n; ++i) {\n        if (visit(items[i], func)) return true;\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/visit.js\n// module id = Qpkz\n// module chunks = 0","var dl = require('datalib'),\n    Aggregator = dl.Aggregator,\n    Base = Aggregator.prototype,\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    facetID = 0;\n\nfunction Facetor() {\n  Aggregator.call(this);\n  this._facet = null;\n  this._facetID = ++facetID;\n}\n\nvar prototype = (Facetor.prototype = Object.create(Base));\nprototype.constructor = Facetor;\n\nprototype.facet = function(f) {\n  return arguments.length ? (this._facet = f, this) : this._facet;\n};\n\nprototype._ingest = function(t) {\n  return Tuple.ingest(t, null);\n};\n\nprototype._assign = Tuple.set;\n\nfunction disconnect_cell(facet) {\n  log.debug({}, ['disconnecting cell', this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nprototype._newcell = function(x, key) {\n  var cell  = Base._newcell.call(this, x, key),\n      facet = this._facet;\n\n  if (facet) {\n    var graph = facet._graph,\n        tuple = cell.tuple,\n        pipeline = facet.param('transform');\n    cell.ds = graph.data(tuple._facetID, pipeline, tuple);\n    cell.disconnect = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nprototype._newtuple = function(x, key) {\n  var t = Base._newtuple.call(this, x);\n  if (this._facet) {\n    Tuple.set(t, 'key', key);\n    Tuple.set(t, '_facetID', this._facetID + '_' + key);\n  }\n  return t;\n};\n\nprototype.clear = function() {\n  if (this._facet) {\n    for (var k in this._cells) {\n      this._cells[k].disconnect(this._facet);\n    }\n  }\n  return Base.clear.call(this);\n};\n\nprototype._on_add = function(x, cell) {\n  if (this._facet) cell.ds._input.add.push(x);\n};\n\nprototype._on_rem = function(x, cell) {\n  if (this._facet) cell.ds._input.rem.push(x);\n};\n\nprototype._on_mod = function(x, prev, cell0, cell1) {\n  if (this._facet) { // Propagate tuples\n    if (cell0 === cell1) {\n      cell0.ds._input.mod.push(x);\n    } else {\n      cell0.ds._input.rem.push(x);\n      cell1.ds._input.add.push(x);\n    }\n  }\n};\n\nprototype._on_drop = function(cell) {\n  if (this._facet) cell.disconnect(this._facet);\n};\n\nprototype._on_keep = function(cell) {\n  // propagate sort, signals, fields, etc.\n  if (this._facet) df.ChangeSet.copy(this._input, cell.ds._input);\n};\n\nmodule.exports = Facetor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Facetor.js\n// module id = QvNu\n// module chunks = 0","// open editor url in a new window, and pass a message\nmodule.exports = function(window, url, data) {\n  var editor = window.open(url),\n      wait = 10000,\n      step = 250,\n      count = ~~(wait/step);\n\n  function listen(evt) {\n    if (evt.source === editor) {\n      count = 0;\n      window.removeEventListener('message', listen, false);\n    }\n  }\n  window.addEventListener('message', listen, false);\n\n  // send message\n  // periodically resend until ack received or timeout\n  function send() {\n    if (count <= 0) return;\n    editor.postMessage(data, '*');\n    setTimeout(send, step);\n    count -= 1;\n  }\n  setTimeout(send, step);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-embed/src/post.js\n// module id = RA6T\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Bin(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'field'},\n    min: {type: 'value'},\n    max: {type: 'value'},\n    base: {type: 'value', default: 10},\n    maxbins: {type: 'value', default: 20},\n    step: {type: 'value'},\n    steps: {type: 'value'},\n    minstep: {type: 'value'},\n    div: {type: 'array<value>', default: [5, 2]}\n  });\n\n  this._output = {\n    start: 'bin_start',\n    end:   'bin_end',\n    mid:   'bin_mid'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Bin.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Bin;\n\nprototype.extent = function(data) {\n  // TODO only recompute extent upon data or field change?\n  var e = [this.param('min'), this.param('max')], d;\n  if (e[0] == null || e[1] == null) {\n    d = dl.extent(data, this.param('field').accessor);\n    if (e[0] == null) e[0] = d[0];\n    if (e[1] == null) e[1] = d[1];\n  }\n  return e;\n};\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['binning']);\n\n  var extent  = this.extent(data),\n      output  = this._output,\n      step    = this.param('step'),\n      steps   = this.param('steps'),\n      minstep = this.param('minstep'),\n      get     = this.param('field').accessor,\n      opt = {\n        min: extent[0],\n        max: extent[1],\n        base: this.param('base'),\n        maxbins: this.param('maxbins'),\n        div: this.param('div')\n      };\n\n  if (step) opt.step = step;\n  if (steps) opt.steps = steps;\n  if (minstep) opt.minstep = minstep;\n  var b = dl.bins(opt),\n      s = b.step;\n\n  function update(d) {\n    var v = get(d);\n    v = v == null ? null\n      : b.start + s * ~~((v - b.start) / s);\n    Tuple.set(d, output.start, v);\n    Tuple.set(d, output.end, v + s);\n    Tuple.set(d, output.mid, v + s/2);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Bin;\n\nBin.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Bin transform\",\n  \"description\": \"Bins values into quantitative bins (e.g., for a histogram).\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"bin\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The name of the field to bin values from.\"\n    },\n    \"min\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The minimum bin value to consider.\"\n    },\n    \"max\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum bin value to consider.\"\n    },\n    \"base\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The number base to use for automatic bin determination.\",\n      \"default\": 10\n    },\n    \"maxbins\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum number of allowable bins.\",\n      \"default\": 20\n    },\n    \"step\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"An exact step size to use between bins. If provided, options such as maxbins will be ignored.\"\n    },\n    \"steps\": {\n      \"description\": \"An array of allowable step sizes to choose from.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"number\"}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"minstep\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"A minimum allowable step size (particularly useful for integer values).\"\n    },\n    \"div\": {\n      \"description\": \"An array of scale factors indicating allowable subdivisions.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"number\"},\n          \"default\": [5, 2]\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"bin_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"bin_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"bin_mid\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Bin.js\n// module id = RdYp\n// module chunks = 0","var dl = require('datalib'),\n    expr = require('./expr'),\n    SIGNALS = require('vega-dataflow').Dependencies.SIGNALS;\n\nvar RESERVED = ['datum', 'event', 'signals', 'width', 'height', 'padding']\n    .concat(dl.keys(expr.codegen.functions));\n\nfunction parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    if (RESERVED.indexOf(s.name) !== -1) {\n      throw Error('Signal name \"'+s.name+'\" is a '+\n        'reserved keyword ('+RESERVED.join(', ')+').');\n    }\n\n    var signal = model.signal(s.name, s.init)\n      .verbose(s.verbose);\n\n    if (s.init && s.init.expr) {\n      s.init.expr = model.expr(s.init.expr);\n      signal.value(exprVal(model, s.init));\n    }\n\n    if (s.expr) {\n      s.expr = model.expr(s.expr);\n      signal.evaluate = function(input) {\n        var val = exprVal(model, s),\n            sg  = input.signals;\n        if (val !== signal.value() || signal.verbose()) {\n          signal.value(val);\n          sg[s.name] = 1;\n        }\n        return sg[s.name] ? input : model.doNotPropagate;\n      };\n      signal.dependency(SIGNALS, s.expr.globals);\n      s.expr.globals.forEach(function(dep) {\n        model.signal(dep).addListener(signal);\n      });\n    }\n  });\n\n  return spec;\n}\n\nfunction exprVal(model, spec) {\n  var e = spec.expr, v = e.fn();\n  return spec.scale ? parseSignals.scale(model, spec, v) : v;\n}\n\nparseSignals.scale = function scale(model, spec, value, datum, evt) {\n  var def = spec.scale,\n      name  = def.name || def.signal || def,\n      scope = def.scope, e;\n\n  if (scope) {\n    if (scope.signal) {\n      scope = model.signalRef(scope.signal);\n    } else if (dl.isString(scope)) { // Scope is an expression\n      e = def._expr = (def._expr || model.expr(scope));\n      scope = e.fn(datum, evt);\n    }\n  }\n\n  return expr.scale(model, def.invert, name, value, scope);\n};\n\nmodule.exports = parseSignals;\nparseSignals.schema = {\n  \"refs\": {\n    \"signal\": {\n      \"title\": \"SignalRef\",\n      \"type\": \"object\",\n      \"properties\": {\"signal\": {\"type\": \"string\"}},\n      \"required\": [\"signal\"]\n    },\n\n    \"scopedScale\": {\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"oneOf\": [{\"$ref\": \"#/refs/signal\"}, {\"type\": \"string\"}]\n            },\n            \"scope\": {\n              \"oneOf\": [\n                {\"$ref\": \"#/refs/signal\"},\n                {\"type\": \"string\"}\n              ]\n            },\n            \"invert\": {\"type\": \"boolean\", \"default\": false}\n          },\n\n          \"additionalProperties\": false,\n          \"required\": [\"name\"]\n        }\n      ]\n    }\n  },\n\n  \"defs\": {\n    \"signal\": {\n      \"type\": \"object\",\n\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"not\": {\"enum\": RESERVED}\n        },\n        \"init\": {},\n        \"verbose\": {\"type\": \"boolean\", \"default\": false},\n        \"expr\": {\"type\": \"string\"},\n        \"scale\": {\"$ref\": \"#/refs/scopedScale\"},\n        \"streams\": {\"$ref\": \"#/defs/streams\"}\n      },\n\n      \"additionalProperties\": false,\n      \"required\": [\"name\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/signals.js\n// module id = S/OH\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_dsv = {})));\n}(this, function (exports) { 'use strict';\n\n  function dsv(delimiter) {\n    return new Dsv(delimiter);\n  }\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function Dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    this.parse = function(text, f) {\n      var convert, columns, rows = this.parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    };\n\n    this.parseRows = function(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    this.format = function(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    this.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n    }\n  }\n\n  dsv.prototype = Dsv.prototype;\n\n  var csv = dsv(\",\");\n  var tsv = dsv(\"\\t\");\n\n  var version = \"0.1.14\";\n\n  exports.version = version;\n  exports.dsv = dsv;\n  exports.csv = csv;\n  exports.tsv = tsv;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/~/d3-dsv/build/d3-dsv.js\n// module id = SAbC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar bar;\n(function (bar) {\n    function markType() {\n        return 'rect';\n    }\n    bar.markType = markType;\n    function properties(model) {\n        var p = {};\n        var orient = model.config().mark.orient;\n        var stack = model.stack();\n        var xFieldDef = model.encoding().x;\n        var x2FieldDef = model.encoding().x2;\n        var xIsMeasure = fielddef_1.isMeasure(xFieldDef) || fielddef_1.isMeasure(x2FieldDef);\n        if (stack && channel_1.X === stack.fieldChannel) {\n            p.x = {\n                scale: model.scaleName(channel_1.X),\n                field: model.field(channel_1.X, { suffix: '_start' })\n            };\n            p.x2 = {\n                scale: model.scaleName(channel_1.X),\n                field: model.field(channel_1.X, { suffix: '_end' })\n            };\n        }\n        else if (xIsMeasure) {\n            if (orient === 'horizontal') {\n                if (model.has(channel_1.X)) {\n                    p.x = {\n                        scale: model.scaleName(channel_1.X),\n                        field: model.field(channel_1.X)\n                    };\n                }\n                else {\n                    p.x = {\n                        scale: model.scaleName(channel_1.X),\n                        value: 0\n                    };\n                }\n                if (model.has(channel_1.X2)) {\n                    p.x2 = {\n                        scale: model.scaleName(channel_1.X),\n                        field: model.field(channel_1.X2)\n                    };\n                }\n                else {\n                    p.x2 = {\n                        scale: model.scaleName(channel_1.X),\n                        value: 0\n                    };\n                }\n            }\n            else {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X)\n                };\n                p.width = { value: sizeValue(model, channel_1.X) };\n            }\n        }\n        else if (model.fieldDef(channel_1.X).bin) {\n            if (model.has(channel_1.SIZE) && orient !== 'horizontal') {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n                p.width = {\n                    scale: model.scaleName(channel_1.SIZE),\n                    field: model.field(channel_1.SIZE)\n                };\n            }\n            else {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_start' }),\n                    offset: 1\n                };\n                p.x2 = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_end' })\n                };\n            }\n        }\n        else {\n            if (model.has(channel_1.X)) {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X)\n                };\n            }\n            else {\n                p.x = { value: 0, offset: 2 };\n            }\n            p.width = model.has(channel_1.SIZE) && orient !== 'horizontal' ? {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            } : {\n                value: sizeValue(model, (channel_1.X))\n            };\n        }\n        var yFieldDef = model.encoding().y;\n        var y2FieldDef = model.encoding().y2;\n        var yIsMeasure = fielddef_1.isMeasure(yFieldDef) || fielddef_1.isMeasure(y2FieldDef);\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            p.y = {\n                scale: model.scaleName(channel_1.Y),\n                field: model.field(channel_1.Y, { suffix: '_start' })\n            };\n            p.y2 = {\n                scale: model.scaleName(channel_1.Y),\n                field: model.field(channel_1.Y, { suffix: '_end' })\n            };\n        }\n        else if (yIsMeasure) {\n            if (orient !== 'horizontal') {\n                if (model.has(channel_1.Y)) {\n                    p.y = {\n                        scale: model.scaleName(channel_1.Y),\n                        field: model.field(channel_1.Y)\n                    };\n                }\n                else {\n                    p.y = {\n                        scale: model.scaleName(channel_1.Y),\n                        value: 0\n                    };\n                }\n                if (model.has(channel_1.Y2)) {\n                    p.y2 = {\n                        scale: model.scaleName(channel_1.Y),\n                        field: model.field(channel_1.Y2)\n                    };\n                }\n                else {\n                    p.y2 = {\n                        scale: model.scaleName(channel_1.Y),\n                        value: 0\n                    };\n                }\n            }\n            else {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y)\n                };\n                p.height = { value: sizeValue(model, channel_1.Y) };\n            }\n        }\n        else if (model.fieldDef(channel_1.Y).bin) {\n            if (model.has(channel_1.SIZE) && orient === 'horizontal') {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n                p.height = {\n                    scale: model.scaleName(channel_1.SIZE),\n                    field: model.field(channel_1.SIZE)\n                };\n            }\n            else {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_start' })\n                };\n                p.y2 = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_end' }),\n                    offset: 1\n                };\n            }\n        }\n        else {\n            if (model.has(channel_1.Y)) {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y)\n                };\n            }\n            else {\n                p.y2 = {\n                    field: { group: 'height' },\n                    offset: -1\n                };\n            }\n            p.height = model.has(channel_1.SIZE) && orient === 'horizontal' ? {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            } : {\n                value: sizeValue(model, channel_1.Y)\n            };\n        }\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    bar.properties = properties;\n    function sizeValue(model, channel) {\n        var fieldDef = model.fieldDef(channel_1.SIZE);\n        if (fieldDef && fieldDef.value !== undefined) {\n            return fieldDef.value;\n        }\n        var markConfig = model.config().mark;\n        if (markConfig.barSize) {\n            return markConfig.barSize;\n        }\n        return model.isOrdinalScale(channel) ?\n            model.scale(channel).bandSize - 1 :\n            !model.has(channel) ?\n                model.config().scale.bandSize - 1 :\n                markConfig.barThinSize;\n    }\n    function labels(model) {\n        return undefined;\n    }\n    bar.labels = labels;\n})(bar = exports.bar || (exports.bar = {}));\n//# sourceMappingURL=bar.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/bar.js\n// module id = SIx5\n// module chunks = 0","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nfunction parseMark(model, mark, applyDefaults) {\n  var props = mark.properties || (applyDefaults && (mark.properties = {})),\n      enter = props.enter || (applyDefaults && (props.enter = {})),\n      group = mark.marks,\n      config = model.config().marks || {};\n\n  if (applyDefaults) {\n    // for scatter plots, set symbol size specified in config if not in spec\n    if (mark.type === 'symbol' && !enter.size && config.symbolSize) {\n        enter.size = {value: config.symbolSize};\n    }\n\n    // Themes define a default \"color\" that maps to fill/stroke based on mark type.\n    var colorMap = {\n      arc: 'fill', area: 'fill', rect: 'fill', symbol: 'fill', text: 'fill',\n      line: 'stroke', path: 'stroke', rule: 'stroke'\n    };\n\n    // Set default mark color if no color is given in spec, and only do so for\n    // user-defined marks (not axis/legend marks).\n    var colorProp = colorMap[mark.type];\n    if (!enter[colorProp] && config.color) {\n      enter[colorProp] = {value: config.color};\n    }\n  }\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g, true); });\n  }\n\n  return mark;\n}\n\nmodule.exports = parseMark;\n\nparseMark.schema = {\n  \"defs\": {\n    \"mark\": {\n      \"type\": \"object\",\n\n      \"properties\": {\n        \"name\": {\"type\": \"string\"},\n        \"key\": {\"type\": \"string\"},\n        \"type\": {\"enum\": [\"rect\", \"symbol\", \"path\", \"arc\",\n          \"area\", \"line\", \"rule\", \"image\", \"text\", \"group\"]},\n\n        \"from\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"data\": {\"type\": \"string\"},\n            \"mark\": {\"type\": \"string\"},\n            \"transform\": {\"$ref\": \"#/defs/transform\"}\n          },\n          \"additionalProperties\": false\n        },\n\n        \"delay\": {\"$ref\": \"#/refs/numberValue\"},\n        \"ease\": {\n          \"enum\": [\"linear\", \"quad\", \"cubic\", \"sin\",\n            \"exp\", \"circle\", \"bounce\"].reduce(function(acc, e) {\n              [\"in\", \"out\", \"in-out\", \"out-in\"].forEach(function(m) {\n                acc.push(e+\"-\"+m);\n              });\n              return acc;\n          }, [])\n        },\n\n        \"interactive\": {\"type\": \"boolean\"},\n\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"enter\":  {\"$ref\": \"#/defs/propset\"},\n            \"update\": {\"$ref\": \"#/defs/propset\"},\n            \"exit\":   {\"$ref\": \"#/defs/propset\"},\n            \"hover\":  {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false,\n          \"anyOf\": [{\"required\": [\"enter\"]}, {\"required\": [\"update\"]}]\n        }\n      },\n\n      // \"additionalProperties\": false,\n      \"required\": [\"type\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/mark.js\n// module id = SbOu\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Hierarchy(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: 'array<field>', default: null},\n    children: {type: 'field', default: 'children'},\n    parent: {type: 'field', default: 'parent'},\n    field: {type: 'value', default: null},\n    // layout parameters\n    mode: {type: 'value', default: 'tidy'}, // tidy, cluster, partition\n    size: {type: 'array<value>', default: require('./screen').size},\n    nodesize: {type: 'array<value>', default: null},\n    orient: {type: 'value', default: 'cartesian'}\n  });\n\n  this._mode = null;\n  this._output = {\n    'x':      'layout_x',\n    'y':      'layout_y',\n    'width':  'layout_width',\n    'height': 'layout_height',\n    'depth':  'layout_depth'\n  };\n  return this.mutates(true);\n}\n\nvar PARTITION = 'partition';\n\nvar SEPARATION = {\n  cartesian: function(a, b) { return (a.parent === b.parent ? 1 : 2); },\n  radial: function(a, b) { return (a.parent === b.parent ? 1 : 2) / a.depth; }\n};\n\nvar prototype = (Hierarchy.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Hierarchy;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['hierarchy layout']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      mode   = this.param('mode'),\n      sort   = this.param('sort'),\n      nodesz = this.param('nodesize'),\n      parent = this.param('parent').accessor,\n      root = data.filter(function(d) { return parent(d) === null; })[0];\n\n  if (mode !== this._mode) {\n    this._mode = mode;\n    if (mode === 'tidy') mode = 'tree';\n    layout = (this._layout = d3.layout[mode]());\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.depth] = 1;\n  if (mode === PARTITION) {\n    input.fields[output.width] = 1;\n    input.fields[output.height] = 1;\n    layout.value(this.param('field').accessor);\n  } else {\n    layout.separation(SEPARATION[this.param('orient')]);\n  }\n\n  if (nodesz.length && mode !== PARTITION) {\n    layout.nodeSize(nodesz);\n  } else {\n    layout.size(this.param('size'));\n  }\n\n  layout\n    .sort(sort.field.length ? dl.comparator(sort.field) : null)\n    .children(this.param('children').accessor)\n    .nodes(root);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    Tuple.set(n, output.x, n.x);\n    Tuple.set(n, output.y, n.y);\n    Tuple.set(n, output.depth, n.depth);\n    if (mode === PARTITION) {\n      Tuple.set(n, output.width, n.dx);\n      Tuple.set(n, output.height, n.dy);\n    }\n  });\n\n  // return changeset\n  return input;\n};\n\nmodule.exports = Hierarchy;\n\nHierarchy.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Hierarchy transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"hierarchy\"]},\n    \"sort\": {\n      \"description\": \"A list of fields to use as sort criteria for sibling nodes.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"children\": {\n      \"description\": \"The data field for the children node array\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"children\"\n    },\n    \"parent\": {\n      \"description\": \"The data field for the parent node\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"parent\"\n    },\n    \"field\": {\n      \"description\": \"The value for the area of each leaf-level node for partition layouts.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"mode\": {\n      \"description\": \"The layout algorithm mode to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"tidy\", \"cluster\", \"partition\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"tidy\"\n    },\n    \"orient\": {\n      \"description\": \"The layout orientation to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"cartesian\", \"radial\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"cartesian\"\n    },\n    \"size\": {\n      \"description\": \"The dimensions of the tree layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [500, 500]\n    },\n    \"nodesize\": {\n      \"description\": \"Sets a fixed x,y size for each node (overrides the size parameter)\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": null\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"width\": {\"type\": \"string\", \"default\": \"layout_width\"},\n        \"height\": {\"type\": \"string\", \"default\": \"layout_height\"},\n        \"depth\": {\"type\": \"string\", \"default\": \"layout_depth\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Hierarchy.js\n// module id = Sgrz\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('../aggregate');\nvar channel_1 = require('../channel');\nvar data_1 = require('../data');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar scale_1 = require('../scale');\nvar stack_1 = require('../stack');\nvar timeunit_1 = require('../timeunit');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar time_1 = require('./time');\nexports.COLOR_LEGEND = 'color_legend';\nexports.COLOR_LEGEND_LABEL = 'color_legend_label';\nfunction parseScaleComponent(model) {\n    return model.channels().reduce(function (scale, channel) {\n        if (model.scale(channel)) {\n            var fieldDef = model.fieldDef(channel);\n            var scales = {\n                main: parseMainScale(model, fieldDef, channel)\n            };\n            if (channel === channel_1.COLOR && model.legend(channel_1.COLOR) && (fieldDef.type === type_1.ORDINAL || fieldDef.bin || fieldDef.timeUnit)) {\n                scales.colorLegend = parseColorLegendScale(model, fieldDef);\n                if (fieldDef.bin) {\n                    scales.binColorLegend = parseBinColorLegendLabel(model, fieldDef);\n                }\n            }\n            scale[channel] = scales;\n        }\n        return scale;\n    }, {});\n}\nexports.parseScaleComponent = parseScaleComponent;\nfunction parseMainScale(model, fieldDef, channel) {\n    var scale = model.scale(channel);\n    var sort = model.sort(channel);\n    var scaleDef = {\n        name: model.scaleName(channel),\n        type: scale.type,\n    };\n    if (channel === channel_1.X && model.has(channel_1.X2)) {\n        if (model.has(channel_1.X)) {\n            scaleDef.domain = { fields: [domain(scale, model, channel_1.X), domain(scale, model, channel_1.X2)] };\n        }\n        else {\n            scaleDef.domain = domain(scale, model, channel_1.X2);\n        }\n    }\n    else if (channel === channel_1.Y && model.has(channel_1.Y2)) {\n        if (model.has(channel_1.Y)) {\n            scaleDef.domain = { fields: [domain(scale, model, channel_1.Y), domain(scale, model, channel_1.Y2)] };\n        }\n        else {\n            scaleDef.domain = domain(scale, model, channel_1.Y2);\n        }\n    }\n    else {\n        scaleDef.domain = domain(scale, model, channel);\n    }\n    util_1.extend(scaleDef, rangeMixins(scale, model, channel));\n    if (sort && (typeof sort === 'string' ? sort : sort.order) === 'descending') {\n        scaleDef.reverse = true;\n    }\n    [\n        'round',\n        'clamp', 'nice',\n        'exponent', 'zero',\n        'padding', 'points'\n    ].forEach(function (property) {\n        var value = exports[property](scale, channel, fieldDef, model);\n        if (value !== undefined) {\n            scaleDef[property] = value;\n        }\n    });\n    return scaleDef;\n}\nfunction parseColorLegendScale(model, fieldDef) {\n    return {\n        name: model.scaleName(exports.COLOR_LEGEND),\n        type: scale_1.ScaleType.ORDINAL,\n        domain: {\n            data: model.dataTable(),\n            field: model.field(channel_1.COLOR, (fieldDef.bin || fieldDef.timeUnit) ? {} : { prefn: 'rank_' }),\n            sort: true\n        },\n        range: { data: model.dataTable(), field: model.field(channel_1.COLOR), sort: true }\n    };\n}\nfunction parseBinColorLegendLabel(model, fieldDef) {\n    return {\n        name: model.scaleName(exports.COLOR_LEGEND_LABEL),\n        type: scale_1.ScaleType.ORDINAL,\n        domain: {\n            data: model.dataTable(),\n            field: model.field(channel_1.COLOR),\n            sort: true\n        },\n        range: {\n            data: model.dataTable(),\n            field: fielddef_1.field(fieldDef, { binSuffix: '_range' }),\n            sort: {\n                field: model.field(channel_1.COLOR, { binSuffix: '_start' }),\n                op: 'min'\n            }\n        }\n    };\n}\nfunction scaleType(scale, fieldDef, channel, mark) {\n    if (!channel_1.hasScale(channel)) {\n        return null;\n    }\n    if (util_1.contains([channel_1.ROW, channel_1.COLUMN, channel_1.SHAPE], channel)) {\n        return scale_1.ScaleType.ORDINAL;\n    }\n    if (scale.type !== undefined) {\n        return scale.type;\n    }\n    switch (fieldDef.type) {\n        case type_1.NOMINAL:\n            return scale_1.ScaleType.ORDINAL;\n        case type_1.ORDINAL:\n            if (channel === channel_1.COLOR) {\n                return scale_1.ScaleType.LINEAR;\n            }\n            return scale_1.ScaleType.ORDINAL;\n        case type_1.TEMPORAL:\n            if (channel === channel_1.COLOR) {\n                return scale_1.ScaleType.TIME;\n            }\n            if (fieldDef.timeUnit) {\n                switch (fieldDef.timeUnit) {\n                    case timeunit_1.TimeUnit.HOURS:\n                    case timeunit_1.TimeUnit.DAY:\n                    case timeunit_1.TimeUnit.MONTH:\n                    case timeunit_1.TimeUnit.QUARTER:\n                        return scale_1.ScaleType.ORDINAL;\n                    default:\n                        return scale_1.ScaleType.TIME;\n                }\n            }\n            return scale_1.ScaleType.TIME;\n        case type_1.QUANTITATIVE:\n            if (fieldDef.bin) {\n                return util_1.contains([channel_1.X, channel_1.Y, channel_1.COLOR], channel) ? scale_1.ScaleType.LINEAR : scale_1.ScaleType.ORDINAL;\n            }\n            return scale_1.ScaleType.LINEAR;\n    }\n    return null;\n}\nexports.scaleType = scaleType;\nfunction domain(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    if (scale.domain) {\n        return scale.domain;\n    }\n    if (fieldDef.type === type_1.TEMPORAL) {\n        if (time_1.rawDomain(fieldDef.timeUnit, channel)) {\n            return {\n                data: fieldDef.timeUnit,\n                field: 'date'\n            };\n        }\n        return {\n            data: model.dataTable(),\n            field: model.field(channel),\n            sort: {\n                field: model.field(channel),\n                op: 'min'\n            }\n        };\n    }\n    var stack = model.stack();\n    if (stack && channel === stack.fieldChannel) {\n        if (stack.offset === stack_1.StackOffset.NORMALIZE) {\n            return [0, 1];\n        }\n        return {\n            data: model.dataName(data_1.STACKED_SCALE),\n            field: model.field(channel, { prefn: 'sum_' })\n        };\n    }\n    var useRawDomain = _useRawDomain(scale, model, channel), sort = domainSort(model, channel, scale.type);\n    if (useRawDomain) {\n        return {\n            data: data_1.SOURCE,\n            field: model.field(channel, { noAggregate: true })\n        };\n    }\n    else if (fieldDef.bin) {\n        if (scale.type === scale_1.ScaleType.ORDINAL) {\n            return {\n                data: model.dataTable(),\n                field: model.field(channel, { binSuffix: '_range' }),\n                sort: {\n                    field: model.field(channel, { binSuffix: '_start' }),\n                    op: 'min'\n                }\n            };\n        }\n        else if (channel === channel_1.COLOR) {\n            return {\n                data: model.dataTable(),\n                field: model.field(channel, { binSuffix: '_start' })\n            };\n        }\n        else {\n            return {\n                data: model.dataTable(),\n                field: [\n                    model.field(channel, { binSuffix: '_start' }),\n                    model.field(channel, { binSuffix: '_end' })\n                ]\n            };\n        }\n    }\n    else if (sort) {\n        return {\n            data: sort.op ? data_1.SOURCE : model.dataTable(),\n            field: (fieldDef.type === type_1.ORDINAL && channel === channel_1.COLOR) ? model.field(channel, { prefn: 'rank_' }) : model.field(channel),\n            sort: sort\n        };\n    }\n    else {\n        return {\n            data: model.dataTable(),\n            field: (fieldDef.type === type_1.ORDINAL && channel === channel_1.COLOR) ? model.field(channel, { prefn: 'rank_' }) : model.field(channel),\n        };\n    }\n}\nexports.domain = domain;\nfunction domainSort(model, channel, scaleType) {\n    if (scaleType !== scale_1.ScaleType.ORDINAL) {\n        return undefined;\n    }\n    var sort = model.sort(channel);\n    if (util_1.contains(['ascending', 'descending', undefined], sort)) {\n        return true;\n    }\n    if (typeof sort !== 'string') {\n        return {\n            op: sort.op,\n            field: sort.field\n        };\n    }\n    return undefined;\n}\nexports.domainSort = domainSort;\nfunction _useRawDomain(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    return scale.useRawDomain &&\n        fieldDef.aggregate &&\n        aggregate_1.SHARED_DOMAIN_OPS.indexOf(fieldDef.aggregate) >= 0 &&\n        ((fieldDef.type === type_1.QUANTITATIVE && !fieldDef.bin) ||\n            (fieldDef.type === type_1.TEMPORAL && util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)));\n}\nfunction rangeMixins(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    var scaleConfig = model.config().scale;\n    if (scale.type === scale_1.ScaleType.ORDINAL && scale.bandSize && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return { bandSize: scale.bandSize };\n    }\n    if (scale.range && !util_1.contains([channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN], channel)) {\n        return { range: scale.range };\n    }\n    switch (channel) {\n        case channel_1.ROW:\n            return { range: 'height' };\n        case channel_1.COLUMN:\n            return { range: 'width' };\n    }\n    var unitModel = model;\n    switch (channel) {\n        case channel_1.X:\n            return {\n                rangeMin: 0,\n                rangeMax: unitModel.config().cell.width\n            };\n        case channel_1.Y:\n            return {\n                rangeMin: unitModel.config().cell.height,\n                rangeMax: 0\n            };\n        case channel_1.SIZE:\n            if (unitModel.mark() === mark_1.BAR) {\n                if (scaleConfig.barSizeRange !== undefined) {\n                    return { range: scaleConfig.barSizeRange };\n                }\n                var dimension = model.config().mark.orient === 'horizontal' ? channel_1.Y : channel_1.X;\n                return { range: [model.config().mark.barThinSize, model.scale(dimension).bandSize] };\n            }\n            else if (unitModel.mark() === mark_1.TEXT) {\n                return { range: scaleConfig.fontSizeRange };\n            }\n            else if (unitModel.mark() === mark_1.RULE) {\n                return { range: scaleConfig.ruleSizeRange };\n            }\n            else if (unitModel.mark() === mark_1.TICK) {\n                return { range: scaleConfig.tickSizeRange };\n            }\n            if (scaleConfig.pointSizeRange !== undefined) {\n                return { range: scaleConfig.pointSizeRange };\n            }\n            var bandSize = pointBandSize(unitModel);\n            return { range: [9, (bandSize - 2) * (bandSize - 2)] };\n        case channel_1.SHAPE:\n            return { range: scaleConfig.shapeRange };\n        case channel_1.COLOR:\n            if (fieldDef.type === type_1.NOMINAL) {\n                return { range: scaleConfig.nominalColorRange };\n            }\n            return { range: scaleConfig.sequentialColorRange };\n        case channel_1.OPACITY:\n            return { range: scaleConfig.opacity };\n    }\n    return {};\n}\nexports.rangeMixins = rangeMixins;\nfunction pointBandSize(model) {\n    var scaleConfig = model.config().scale;\n    var hasX = model.has(channel_1.X);\n    var hasY = model.has(channel_1.Y);\n    var xIsMeasure = fielddef_1.isMeasure(model.encoding().x);\n    var yIsMeasure = fielddef_1.isMeasure(model.encoding().y);\n    if (hasX && hasY) {\n        return xIsMeasure !== yIsMeasure ?\n            model.scale(xIsMeasure ? channel_1.Y : channel_1.X).bandSize :\n            Math.min(model.scale(channel_1.X).bandSize || scaleConfig.bandSize, model.scale(channel_1.Y).bandSize || scaleConfig.bandSize);\n    }\n    else if (hasY) {\n        return yIsMeasure ? model.config().scale.bandSize : model.scale(channel_1.Y).bandSize;\n    }\n    else if (hasX) {\n        return xIsMeasure ? model.config().scale.bandSize : model.scale(channel_1.X).bandSize;\n    }\n    return model.config().scale.bandSize;\n}\nfunction clamp(scale) {\n    if (util_1.contains([scale_1.ScaleType.LINEAR, scale_1.ScaleType.POW, scale_1.ScaleType.SQRT,\n        scale_1.ScaleType.LOG, scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)) {\n        return scale.clamp;\n    }\n    return undefined;\n}\nexports.clamp = clamp;\nfunction exponent(scale) {\n    if (scale.type === scale_1.ScaleType.POW) {\n        return scale.exponent;\n    }\n    return undefined;\n}\nexports.exponent = exponent;\nfunction nice(scale, channel, fieldDef) {\n    if (util_1.contains([scale_1.ScaleType.LINEAR, scale_1.ScaleType.POW, scale_1.ScaleType.SQRT, scale_1.ScaleType.LOG,\n        scale_1.ScaleType.TIME, scale_1.ScaleType.UTC, scale_1.ScaleType.QUANTIZE], scale.type)) {\n        if (scale.nice !== undefined) {\n            return scale.nice;\n        }\n        if (util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)) {\n            return time_1.smallestUnit(fieldDef.timeUnit);\n        }\n        return util_1.contains([channel_1.X, channel_1.Y], channel);\n    }\n    return undefined;\n}\nexports.nice = nice;\nfunction padding(scale, channel) {\n    if (scale.type === scale_1.ScaleType.ORDINAL && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return scale.padding;\n    }\n    return undefined;\n}\nexports.padding = padding;\nfunction points(scale, channel, __, model) {\n    if (scale.type === scale_1.ScaleType.ORDINAL && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return true;\n    }\n    return undefined;\n}\nexports.points = points;\nfunction round(scale, channel) {\n    if (util_1.contains([channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN, channel_1.SIZE], channel) && scale.round !== undefined) {\n        return scale.round;\n    }\n    return undefined;\n}\nexports.round = round;\nfunction zero(scale, channel, fieldDef) {\n    if (!util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC, scale_1.ScaleType.ORDINAL], scale.type)) {\n        if (scale.zero !== undefined) {\n            return scale.zero;\n        }\n        return !fieldDef.bin && util_1.contains([channel_1.X, channel_1.Y], channel);\n    }\n    return undefined;\n}\nexports.zero = zero;\n//# sourceMappingURL=scale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/scale.js\n// module id = TLMq\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'value'},\n    expr:  {type: 'expr'}\n  });\n\n  return this.mutates(true);\n}\n\nvar prototype = (Formula.prototype = Object.create(Transform.prototype));\nprototype.constructor = Formula;\n\nprototype.transform = function(input) {\n  log.debug(input, ['formulating']);\n\n  var field = this.param('field'),\n      expr = this.param('expr'),\n      updated = false;\n\n  function set(x) {\n    Tuple.set(x, field, expr(x));\n    updated = true;\n  }\n\n  input.add.forEach(set);\n\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  if (updated) input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n\nFormula.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Formula transform\",\n  \"description\": \"Extends data elements with new values according to a calculation formula.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"formula\"]},\n    \"field\": {\n      \"type\": \"string\",\n      \"description\": \"The property name in which to store the computed formula value.\"\n    },\n    \"expr\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) for the formula.\"\n    }\n  },\n  \"required\": [\"type\", \"field\", \"expr\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Formula.js\n// module id = TXaq\n// module chunks = 0","var dl = require('datalib'),\n    template = dl.template,\n    expr = require('vega-expression'),\n    args = ['datum', 'parent', 'event', 'signals'];\n\nvar compile = expr.compiler(args, {\n  idWhiteList: args,\n  fieldVar:    args[0],\n  globalVar:   function(id) {\n    return 'this.sig[' + dl.str(id) + ']._value';\n  },\n  functions:   function(codegen) {\n    var fn = expr.functions(codegen);\n    fn.eventItem  = 'event.vg.getItem';\n    fn.eventGroup = 'event.vg.getGroup';\n    fn.eventX     = 'event.vg.getX';\n    fn.eventY     = 'event.vg.getY';\n    fn.open       = openGen(codegen);\n    fn.scale      = scaleGen(codegen, false);\n    fn.iscale     = scaleGen(codegen, true);\n    fn.inrange    = 'this.defs.inrange';\n    fn.indata     = indataGen(codegen);\n    fn.format     = 'this.defs.format';\n    fn.timeFormat = 'this.defs.timeFormat';\n    fn.utcFormat  = 'this.defs.utcFormat';\n    return fn;\n  },\n  functionDefs: function(/*codegen*/) {\n    return {\n      'scale':      scale,\n      'inrange':    inrange,\n      'indata':     indata,\n      'format':     numberFormat,\n      'timeFormat': timeFormat,\n      'utcFormat':  utcFormat,\n      'open':       windowOpen\n    };\n  }\n});\n\nfunction openGen(codegen) {\n  return function (args) {\n    args = args.map(codegen);\n    var n = args.length;\n    if (n < 1 || n > 2) {\n      throw Error(\"open takes exactly 1 or 2 arguments.\");\n    }\n    return 'this.defs.open(this.model, ' +\n      args[0] + (n > 1 ? ',' + args[1] : '') + ')';\n  };\n}\n\nfunction windowOpen(model, url, name) {\n  if (typeof window !== 'undefined' && window && window.open) {\n    var opt = dl.extend({type: 'open', url: url, name: name}, model.config().load),\n        uri = dl.load.sanitizeUrl(opt);\n    if (uri) {\n      window.open(uri, name);\n    } else {\n      throw Error('Invalid URL: ' + opt.url);\n    }\n  } else {\n    throw Error('Open function can only be invoked in a browser.');\n  }\n}\n\nfunction scaleGen(codegen, invert) {\n  return function(args) {\n    args = args.map(codegen);\n    var n = args.length;\n    if (n < 2 || n > 3) {\n      throw Error(\"scale takes exactly 2 or 3 arguments.\");\n    }\n    return 'this.defs.scale(this.model, ' + invert + ', ' +\n      args[0] + ',' + args[1] + (n > 2 ? ',' + args[2] : '') + ')';\n  };\n}\n\nfunction scale(model, invert, name, value, scope) {\n  if (!scope || !scope.scale) {\n    scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n  }\n  // Verify scope is valid\n  if (model.group(scope._id) !== scope) {\n    throw Error('Scope for scale \"'+name+'\" is not a valid group item.');\n  }\n  var s = scope.scale(name);\n  return !s ? value : (invert ? s.invert(value) : s(value));\n}\n\nfunction inrange(val, a, b, exclusive) {\n  var min = a, max = b;\n  if (a > b) { min = b; max = a; }\n  return exclusive ?\n    (min < val && max > val) :\n    (min <= val && max >= val);\n}\n\nfunction indataGen(codegen) {\n  return function(args, globals, fields, dataSources) {\n    var data;\n    if (args.length !== 3) {\n      throw Error(\"indata takes 3 arguments.\");\n    }\n    if (args[0].type !== 'Literal') {\n      throw Error(\"Data source name must be a literal for indata.\");\n    }\n\n    data = args[0].value;\n    dataSources[data] = 1;\n    if (args[2].type === 'Literal') {\n      indataGen.model.requestIndex(data, args[2].value);\n    }\n\n    args = args.map(codegen);\n    return 'this.defs.indata(this.model,' +\n      args[0] + ',' + args[1] + ',' + args[2] + ')';\n  };\n}\n\nfunction indata(model, dataname, val, field) {\n  var data = model.data(dataname),\n      index = data.getIndex(field);\n  return index[val] > 0;\n}\n\nfunction numberFormat(specifier, v) {\n  return template.format(specifier, 'number')(v);\n}\n\nfunction timeFormat(specifier, d) {\n  return template.format(specifier, 'time')(d);\n}\n\nfunction utcFormat(specifier, d) {\n  return template.format(specifier, 'utc')(d);\n}\n\nfunction wrap(model) {\n  return function(str) {\n    indataGen.model = model;\n    var x = compile(str);\n    x.model = model;\n    x.sig = model ? model._signals : {};\n    return x;\n  };\n}\n\nwrap.scale = scale;\nwrap.codegen = compile.codegen;\nmodule.exports = wrap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/expr.js\n// module id = TrdW\n// module chunks = 0","module.exports = {\n  axes:       require('./axes'),\n  background: require('./background'),\n  data:       require('./data'),\n  events:     require('vega-event-selector'),\n  expr:       require('./expr'),\n  legends:    require('./legends'),\n  mark:       require('./mark'),\n  marks:      require('./marks'),\n  modify:     require('./modify'),\n  padding:    require('./padding'),\n  predicates: require('./predicates'),\n  properties: require('./properties'),\n  signals:    require('./signals'),\n  spec:       require('./spec'),\n  streams:    require('./streams'),\n  transforms: require('./transforms')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/index.js\n// module id = UaGl\n// module chunks = 0","var Transform = require('./Transform'),\n    Aggregate = require('./Aggregate');\n\nfunction Facet(graph) {\n  Transform.addParameters(this, {\n    transform: {\n      type: \"custom\",\n      set: function(pipeline) {\n        return (this._transform._pipeline = pipeline, this._transform);\n      },\n      get: function() {\n        var parse = require('../parse/transforms'),\n            facet = this._transform;\n        return facet._pipeline.map(function(t) {\n          return parse(facet._graph, t);\n        });\n      }\n    }\n  });\n\n  this._pipeline = [];\n  return Aggregate.call(this, graph);\n}\n\nvar prototype = (Facet.prototype = Object.create(Aggregate.prototype));\nprototype.constructor = Facet;\n\nprototype.aggr = function() {\n  return Aggregate.prototype.aggr.call(this).facet(this);\n};\n\nprototype.transform = function(input, reset) {\n  var output  = Aggregate.prototype.transform.call(this, input, reset);\n\n  // New facet cells should trigger a re-ranking of the dataflow graph.\n  // This ensures facet datasources are computed before scenegraph nodes.\n  // We rerank the Facet's first listener, which is the next node in the\n  // datasource's pipeline.\n  if (input.add.length) {\n    this.listeners()[0].rerank();\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n\nvar dl = require('datalib');\n\nFacet.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Facet transform\",\n  \"description\": \"A special aggregate transform that organizes a data set into groups or \\\"facets\\\".\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({}, Aggregate.schema.properties, {\n    \"type\": {\"enum\": [\"facet\"]},\n    \"transform\": {\"$ref\": \"#/defs/transform\"}\n  }),\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Facet.js\n// module id = Uikm\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\nvar mark_1 = require('./mark');\nexports.DEFAULT_REQUIRED_CHANNEL_MAP = {\n    text: ['text'],\n    line: ['x', 'y'],\n    area: ['x', 'y']\n};\nexports.DEFAULT_SUPPORTED_CHANNEL_TYPE = {\n    bar: util_1.toMap(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\n    line: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    area: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    tick: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    circle: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n    square: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n    point: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\n    text: util_1.toMap(['row', 'column', 'size', 'color', 'text'])\n};\nfunction getEncodingMappingError(spec, requiredChannelMap, supportedChannelMap) {\n    if (requiredChannelMap === void 0) { requiredChannelMap = exports.DEFAULT_REQUIRED_CHANNEL_MAP; }\n    if (supportedChannelMap === void 0) { supportedChannelMap = exports.DEFAULT_SUPPORTED_CHANNEL_TYPE; }\n    var mark = spec.mark;\n    var encoding = spec.encoding;\n    var requiredChannels = requiredChannelMap[mark];\n    var supportedChannels = supportedChannelMap[mark];\n    for (var i in requiredChannels) {\n        if (!(requiredChannels[i] in encoding)) {\n            return 'Missing encoding channel \\\"' + requiredChannels[i] +\n                '\\\" for mark \\\"' + mark + '\\\"';\n        }\n    }\n    for (var channel in encoding) {\n        if (!supportedChannels[channel]) {\n            return 'Encoding channel \\\"' + channel +\n                '\\\" is not supported by mark type \\\"' + mark + '\\\"';\n        }\n    }\n    if (mark === mark_1.BAR && !encoding.x && !encoding.y) {\n        return 'Missing both x and y for bar';\n    }\n    return null;\n}\nexports.getEncodingMappingError = getEncodingMappingError;\n//# sourceMappingURL=validate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/validate.js\n// module id = Utn/\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar source_1 = require('./source');\nvar formatparse_1 = require('./formatparse');\nvar nullfilter_1 = require('./nullfilter');\nvar filter_1 = require('./filter');\nvar bin_1 = require('./bin');\nvar formula_1 = require('./formula');\nvar nonpositivenullfilter_1 = require('./nonpositivenullfilter');\nvar summary_1 = require('./summary');\nvar stackscale_1 = require('./stackscale');\nvar timeunit_1 = require('./timeunit');\nvar timeunitdomain_1 = require('./timeunitdomain');\nvar colorrank_1 = require('./colorrank');\nfunction parseUnitData(model) {\n    return {\n        formatParse: formatparse_1.formatParse.parseUnit(model),\n        nullFilter: nullfilter_1.nullFilter.parseUnit(model),\n        filter: filter_1.filter.parseUnit(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseUnit(model),\n        source: source_1.source.parseUnit(model),\n        bin: bin_1.bin.parseUnit(model),\n        calculate: formula_1.formula.parseUnit(model),\n        timeUnit: timeunit_1.timeUnit.parseUnit(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseUnit(model),\n        summary: summary_1.summary.parseUnit(model),\n        stackScale: stackscale_1.stackScale.parseUnit(model),\n        colorRank: colorrank_1.colorRank.parseUnit(model)\n    };\n}\nexports.parseUnitData = parseUnitData;\nfunction parseFacetData(model) {\n    return {\n        formatParse: formatparse_1.formatParse.parseFacet(model),\n        nullFilter: nullfilter_1.nullFilter.parseFacet(model),\n        filter: filter_1.filter.parseFacet(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseFacet(model),\n        source: source_1.source.parseFacet(model),\n        bin: bin_1.bin.parseFacet(model),\n        calculate: formula_1.formula.parseFacet(model),\n        timeUnit: timeunit_1.timeUnit.parseFacet(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseFacet(model),\n        summary: summary_1.summary.parseFacet(model),\n        stackScale: stackscale_1.stackScale.parseFacet(model),\n        colorRank: colorrank_1.colorRank.parseFacet(model)\n    };\n}\nexports.parseFacetData = parseFacetData;\nfunction parseLayerData(model) {\n    return {\n        filter: filter_1.filter.parseLayer(model),\n        formatParse: formatparse_1.formatParse.parseLayer(model),\n        nullFilter: nullfilter_1.nullFilter.parseLayer(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseLayer(model),\n        source: source_1.source.parseLayer(model),\n        bin: bin_1.bin.parseLayer(model),\n        calculate: formula_1.formula.parseLayer(model),\n        timeUnit: timeunit_1.timeUnit.parseLayer(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseLayer(model),\n        summary: summary_1.summary.parseLayer(model),\n        stackScale: stackscale_1.stackScale.parseLayer(model),\n        colorRank: colorrank_1.colorRank.parseLayer(model)\n    };\n}\nexports.parseLayerData = parseLayerData;\nfunction assembleData(model, data) {\n    var component = model.component.data;\n    var sourceData = source_1.source.assemble(model, component);\n    if (sourceData) {\n        data.push(sourceData);\n    }\n    summary_1.summary.assemble(component, model).forEach(function (summaryData) {\n        data.push(summaryData);\n    });\n    if (data.length > 0) {\n        var dataTable = data[data.length - 1];\n        var colorRankTransform = colorrank_1.colorRank.assemble(component);\n        if (colorRankTransform.length > 0) {\n            dataTable.transform = (dataTable.transform || []).concat(colorRankTransform);\n        }\n        var nonPositiveFilterTransform = nonpositivenullfilter_1.nonPositiveFilter.assemble(component);\n        if (nonPositiveFilterTransform.length > 0) {\n            dataTable.transform = (dataTable.transform || []).concat(nonPositiveFilterTransform);\n        }\n    }\n    else {\n        if (util_1.keys(component.colorRank).length > 0) {\n            throw new Error('Invalid colorRank not merged');\n        }\n        else if (util_1.keys(component.nonPositiveFilter).length > 0) {\n            throw new Error('Invalid nonPositiveFilter not merged');\n        }\n    }\n    var stackData = stackscale_1.stackScale.assemble(component);\n    if (stackData) {\n        data.push(stackData);\n    }\n    timeunitdomain_1.timeUnitDomain.assemble(component).forEach(function (timeUnitDomainData) {\n        data.push(timeUnitDomainData);\n    });\n    return data;\n}\nexports.assembleData = assembleData;\n//# sourceMappingURL=data.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/data.js\n// module id = V22v\n// module chunks = 0","function Handler() {\n  this._active = null;\n  this._handlers = {};\n}\n\nvar prototype = Handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = el;\n  this._obj = obj || null;\n  return this.padding(pad);\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  return this;\n};\n\nprototype.scene = function(scene) {\n  if (!arguments.length) return this._scene;\n  this._scene = scene;\n  return this;\n};\n\n// add an event handler\n// subclasses should override\nprototype.on = function(/*type, handler*/) {};\n\n// remove an event handler\n// subclasses should override\nprototype.off = function(/*type, handler*/) {};\n\n// return an array with all registered event handlers\nprototype.handlers = function() {\n  var h = this._handlers, a = [], k;\n  for (k in h) { a.push.apply(a, h[k]); }\n  return a;\n};\n\nprototype.eventName = function(name) {\n  var i = name.indexOf('.');\n  return i < 0 ? name : name.slice(0,i);\n};\n\nmodule.exports = Handler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/Handler.js\n// module id = VeBo\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Item = require('vega-scenegraph').Item,\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    Tuple = df.Tuple,\n    ChangeSet = df.ChangeSet,\n    Sentinel = {},\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    parseData = require('../parse/data');\n\nfunction Builder() {\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar Status = Builder.STATUS = {\n  ENTER:  'enter',\n  UPDATE: 'update',\n  EXIT:   'exit'\n};\n\nvar CONNECTED = 1, DISCONNECTED = 2;\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n  this._status = null; // Connected or disconnected?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = (def.interactive !== false);\n  mark.items = [];\n  if (dl.isValid(def.name)) mark.name = def.name;\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if (def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain\n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== 'group');\n  this._encoder = new Encoder(this._graph, this._mark, this);\n  this._bounder = new Bounder(this._graph, this._mark);\n  this._output  = null; // Output changeset for reactive geom as Bounder reflows\n\n  if (this._ds) { this._encoder.dependency(Deps.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(Deps.DATA, this._encoder.dependency(Deps.DATA));\n  this.dependency(Deps.SCALES, this._encoder.dependency(Deps.SCALES));\n  this.dependency(Deps.SIGNALS, this._encoder.dependency(Deps.SIGNALS));\n\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here\n// because they need their group's data-joined context.\nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output, input, node;\n\n  if (geom) {\n    sibling = this.sibling(geom);\n    src  = sibling._isSuper ? sibling : sibling._bounder;\n    name = ['vg', this._parent_id, geom, src.listeners(true).length].join('_');\n    spec = {\n      name: name,\n      transform: from.transform,\n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    if (!src) throw Error('Data source \"'+this._from+'\" is not defined.');\n    name = ['vg', this._from, this._def.type, src.listeners(true).length].join('_');\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n\n  if (geom) {\n    // Bounder reflows, so we need an intermediary node to propagate\n    // the output constructed by the Builder.\n    node = new Node(this._graph).addListener(this._ds.listener());\n    node.evaluate = function(input) {\n      var out  = ChangeSet.create(input),\n          sout = sibling._output;\n\n      out.add = sout.add;\n      out.mod = sout.mod;\n      out.rem = sout.rem;\n      return out;\n    };\n    src.addListener(node);\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources.\n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    output = this._ds.source().last();\n    input  = ChangeSet.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener(), output.stamp);\n  }\n}\n\nproto.ds = function() { return this._ds; };\nproto.parent   = function() { return this._parent; };\nproto.encoder  = function() { return this._encoder; };\nproto.pipeline = function() { return [this]; };\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder._scales.forEach(function(s) {\n    if (!(s = builder._parent.scale(s))) return;\n    s.addListener(builder);\n  });\n\n  if (this._parent) {\n    if (this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return (this._status = CONNECTED, this);\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if (!this._listeners.length) return this;\n\n  function disconnectScales(scales) {\n    for(var i=0, len=scales.length, s; i<len; ++i) {\n      if (!(s = builder._parent.scale(scales[i]))) continue;\n      s.removeListener(builder);\n    }\n  }\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  disconnectScales(this._encoder._scales);\n  disconnectScales(dl.keys(this._mark._scaleRefs));\n\n  return (this._status = DISCONNECTED, this);\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  log.debug(input, ['building', (this._from || this._def.from), this._def.type]);\n\n  var self = this,\n      def = this._mark.def,\n      props  = def.properties || {},\n      update = props.update   || {},\n      output = ChangeSet.create(input),\n      fullUpdate, fcs, data, name;\n\n  if (this._ds) {\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = output.data[(name=this._ds.name())];\n    output.data[name] = null;\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data[name] = data;\n\n    fcs = this._ds.last();\n    if (!fcs) throw Error('Builder evaluated before backing DataSource.');\n    if (fcs.stamp > this._stamp) {\n      join.call(this, fcs, output, this._ds.values(), true, fullUpdate);\n    } else if (fullUpdate) {\n      output.mod = this._mark.items.slice();\n    }\n  } else {\n    data = dl.isFunction(this._def.from) ? this._def.from() : [Sentinel];\n    join.call(this, input, output, data);\n  }\n\n  // Stash output before Bounder for downstream reactive geometry.\n  this._output = output = this._graph.evaluate(output, this._encoder);\n\n  // Add any new scale references to the dependency list, and ensure\n  // they're connected.\n  if (update.nested && update.nested.length && this._status === CONNECTED) {\n    dl.keys(this._mark._scaleRefs).forEach(function(s) {\n      var scale = self._parent.scale(s);\n      if (!scale) return;\n\n      scale.addListener(self);\n      self.dependency(Deps.SCALES, s);\n      self._encoder.dependency(Deps.SCALES, s);\n    });\n  }\n\n  // Supernodes calculate bounds too, but only on items marked dirty.\n  if (this._isSuper) {\n    output.mod = output.mod.filter(function(x) { return x._dirty; });\n    output = this._graph.evaluate(output, this._bounder);\n  }\n\n  return output;\n};\n\nfunction newItem() {\n  var item = Tuple.ingest(new Item(this._mark));\n\n  // For the root node's item\n  if (this._def.width)  Tuple.set(item, 'width',  this._def.width);\n  if (this._def.height) Tuple.set(item, 'height', this._def.height);\n  return item;\n}\n\nfunction join(input, output, data, ds, fullUpdate) {\n  var keyf = keyFunction(this._def.key || (ds ? '_id' : null)),\n      prev = this._mark.items || [],\n      rem  = ds ? input.rem : prev,\n      mod  = Tuple.idMap((!ds || fullUpdate) ? data : input.mod),\n      next = [],\n      i, key, len, item, datum, enter, diff;\n\n  // Only mark rems as exiting. Due to keyf, there may be an add/mod\n  // tuple that replaces it.\n  for (i=0, len=rem.length; i<len; ++i) {\n    item = (rem[i] === prev[i]) ? prev[i] :\n      keyf ? this._map[keyf(rem[i])] : rem[i];\n    item.status = Status.EXIT;\n  }\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? Status.ENTER : Status.UPDATE;\n    diff = !enter && item.datum !== datum;\n    item.datum = datum;\n\n    if (keyf) {\n      Tuple.set(item, 'key', key);\n      this._map[key] = item;\n    }\n\n    if (enter) {\n      output.add.push(item);\n    } else if (diff || mod[datum._id]) {\n      output.mod.push(item);\n    }\n\n    next.push(item);\n  }\n\n  for (i=0, len=rem.length; i<len; ++i) {\n    item = (rem[i] === prev[i]) ? prev[i] :\n      keyf ? this._map[key = keyf(rem[i])] : rem[i];\n    if (item.status === Status.EXIT) {\n      item._dirty = true;\n      input.dirty.push(item);\n      next.push(item);\n      output.rem.push(item);\n      if (keyf) this._map[key] = null;\n    }\n  }\n\n  return (this._mark.items = next, output);\n}\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s='', i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += '|';\n      s += String(f[i](d));\n    }\n    return s;\n  };\n}\n\nmodule.exports = Builder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Builder.js\n// module id = Vp7n\n// module chunks = 0","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    themeVal = require('../util/theme-val');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction parseAxes(model, spec, axes, group) {\n  var cfg = config(model);\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model, cfg[def.type]);\n    parseAxis(cfg[def.type], def, index, axes[index], group);\n  });\n}\n\nfunction parseAxis(config, def, index, axis, group) {\n  // axis scale\n  var scale;\n  if (def.scale !== undefined) {\n    axis.scale(scale = group.scale(def.scale));\n  }\n\n  // grid by scaletype\n  var grid = config.grid;\n  if (dl.isObject(grid)) {\n    config.grid = grid[scale.type] !== undefined ? grid[scale.type] : grid.default;\n  }\n\n  // axis orientation\n  axis.orient(themeVal(def, config, 'orient', ORIENT[def.type]));\n  // axis offset\n  axis.offset(themeVal(def, config, 'offset', 0));\n  // axis layer\n  axis.layer(themeVal(def, config, 'layer', 'front'));\n  // axis grid lines\n  axis.grid(themeVal(def, config, 'grid', false));\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(themeVal(def, config, 'titleOffset'));\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  axis.tickFormatType(def.formatType || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding (config.padding for backwards compatibility).\n  axis.tickPadding(themeVal(def, config, 'tickPadding', config.padding));\n\n  // axis tick size(s)\n  var ts = themeVal(def, config, 'tickSize'),\n      size = [ts, ts, ts];\n\n  size[0] = themeVal(def, config, 'tickSizeMajor', size[0]);\n  size[1] = themeVal(def, config, 'tickSizeMinor', size[1]);\n  size[2] = themeVal(def, config, 'tickSizeEnd', size[2]);\n\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // axis tick count\n  axis.tickCount(themeVal(def, config, 'ticks'));\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks ?\n      dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks ?\n      dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nfunction config(model) {\n  var cfg  = model.config(),\n      axis = cfg.axis;\n\n  return {\n    x: dl.extend(dl.duplicate(axis), cfg.axis_x),\n    y: dl.extend(dl.duplicate(axis), cfg.axis_y)\n  };\n}\n\nmodule.exports = parseAxes;\n\nparseAxes.schema = {\n  \"defs\": {\n    \"axis\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\"enum\": [\"x\", \"y\"]},\n        \"scale\": {\"type\": \"string\"},\n        \"orient\": {\"enum\": [\"top\", \"bottom\", \"left\", \"right\"]},\n        \"title\": {\"type\": \"string\"},\n        \"titleOffset\": {\"type\": \"number\"},\n        \"format\": {\"type\": \"string\"},\n        \"formatType\": {\"enum\": [\"time\", \"utc\", \"string\", \"number\"]},\n        \"ticks\": {\"type\": \"number\"},\n        \"values\": {\n          \"type\": \"array\",\n          \"items\": {\"type\": [\"string\", \"number\"]}\n        },\n        \"subdivide\": {\"type\": \"number\"},\n        \"tickPadding\": {\"type\": \"number\"},\n        \"tickSize\": {\"type\": \"number\"},\n        \"tickSizeMajor\": {\"type\": \"number\"},\n        \"tickSizeMinor\": {\"type\": \"number\"},\n        \"tickSizeEnd\": {\"type\": \"number\"},\n        \"offset\": {\n          \"oneOf\": [{\"type\": \"number\"}, {\n            \"type\": \"object\",\n            \"properties\": {\n              \"scale\": {\"type\": \"string\"},\n              \"value\": {\"type\": [\"string\", \"number\"]}\n            },\n            \"required\": [\"scale\", \"value\"],\n            \"additionalProperties\": false\n          }]\n        },\n        \"layer\": {\"enum\": [\"front\", \"back\"], \"default\": \"front\"},\n        \"grid\": {\"type\": \"boolean\"},\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"ticks\": {\"$ref\": \"#/defs/propset\"},\n            \"majorTicks\": {\"$ref\": \"#/defs/propset\"},\n            \"minorTicks\": {\"$ref\": \"#/defs/propset\"},\n            \"labels\": {\"$ref\": \"#/defs/propset\"},\n            \"title\": {\"$ref\": \"#/defs/propset\"},\n            \"grid\": {\"$ref\": \"#/defs/propset\"},\n            \"axis\": {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"scale\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/axes.js\n// module id = W+IH\n// module chunks = 0","module.exports = {\n  'canvas': require('./canvas'),\n  'svg':    require('./svg')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/index.js\n// module id = WCPv\n// module chunks = 0","function instance(w, h) {\n  w = w || 1;\n  h = h || 1;\n  var canvas;\n\n  if (typeof document !== 'undefined' && document.createElement) {\n    canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n  } else {\n    var Canvas = require('canvas');\n    if (!Canvas.prototype) return null;\n    canvas = new Canvas(w, h);\n  }\n  return lineDash(canvas);\n}\n\nfunction resize(canvas, w, h, p, retina) {\n  var g = this._ctx = canvas.getContext('2d'), \n      s = 1;\n\n  canvas.width = w + p.left + p.right;\n  canvas.height = h + p.top + p.bottom;\n\n  // if browser canvas, attempt to modify for retina display\n  if (retina && typeof HTMLElement !== 'undefined' &&\n      canvas instanceof HTMLElement)\n  {\n    g.pixelratio = (s = pixelRatio(canvas) || 1);\n  }\n\n  g.setTransform(s, 0, 0, s, s*p.left, s*p.top);\n  return canvas;\n}\n\nfunction pixelRatio(canvas) {\n  var g = canvas.getContext('2d');\n\n  // get canvas pixel data\n  var devicePixelRatio = window && window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        g.webkitBackingStorePixelRatio ||\n        g.mozBackingStorePixelRatio ||\n        g.msBackingStorePixelRatio ||\n        g.oBackingStorePixelRatio ||\n        g.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    // set actual and visible canvas size\n    var w = canvas.width,\n        h = canvas.height;\n    canvas.width = w * ratio;\n    canvas.height = h * ratio;\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  return ratio;\n}\n\nfunction lineDash(canvas) {\n  var g = canvas.getContext('2d');\n  if (g.vgLineDash) return; // already initialized!\n\n  var NOOP = function() {},\n      NODASH = [];\n  \n  if (g.setLineDash) {\n    g.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    g.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (g.webkitLineDash !== undefined) {\n  \tg.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    g.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (g.mozDash !== undefined) {\n    g.vgLineDash = function(dash) { this.mozDash = dash; };\n    g.vgLineDashOffset = NOOP;\n  } else {\n    g.vgLineDash = NOOP;\n    g.vgLineDashOffset = NOOP;\n  }\n  return canvas;\n}\n\nmodule.exports = {\n  instance:   instance,\n  resize:     resize,\n  lineDash:   lineDash\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/canvas.js\n// module id = WFOa\n// module chunks = 0","\"use strict\";\n(function (Type) {\n    Type[Type[\"QUANTITATIVE\"] = 'quantitative'] = \"QUANTITATIVE\";\n    Type[Type[\"ORDINAL\"] = 'ordinal'] = \"ORDINAL\";\n    Type[Type[\"TEMPORAL\"] = 'temporal'] = \"TEMPORAL\";\n    Type[Type[\"NOMINAL\"] = 'nominal'] = \"NOMINAL\";\n})(exports.Type || (exports.Type = {}));\nvar Type = exports.Type;\nexports.QUANTITATIVE = Type.QUANTITATIVE;\nexports.ORDINAL = Type.ORDINAL;\nexports.TEMPORAL = Type.TEMPORAL;\nexports.NOMINAL = Type.NOMINAL;\nexports.SHORT_TYPE = {\n    quantitative: 'Q',\n    temporal: 'T',\n    nominal: 'N',\n    ordinal: 'O'\n};\nexports.TYPE_FROM_SHORT_TYPE = {\n    Q: exports.QUANTITATIVE,\n    T: exports.TEMPORAL,\n    O: exports.ORDINAL,\n    N: exports.NOMINAL\n};\nfunction getFullName(type) {\n    var typeString = type;\n    return exports.TYPE_FROM_SHORT_TYPE[typeString.toUpperCase()] ||\n        typeString.toLowerCase();\n}\nexports.getFullName = getFullName;\n//# sourceMappingURL=type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/type.js\n// module id = WJ2w\n// module chunks = 0","var Bounds = require('../../../util/Bounds'),\n    textBounds = require('../../../util/bound').text,\n    text = require('../../../util/text'),\n    util = require('./util'),\n    tempBounds = new Bounds();\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x, y, r, t, str;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    str = text.value(o.text);\n    if (!str) continue;\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n\n    g.font = text.font(o);\n    g.textAlign = o.align || 'left';\n\n    x = (o.x || 0);\n    y = (o.y || 0);\n    if ((r = o.radius)) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = y = 0; // reset x, y\n    }\n    x += (o.dx || 0);\n    y += (o.dy || 0) + text.offset(o);\n\n    if (o.fill && util.fill(g, o, opac)) {\n      g.fillText(str, x, y);\n    }\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.strokeText(str, x, y);\n    }\n    if (o.angle) g.restore();\n  }\n}\n\nfunction hit(g, o, x, y, gx, gy) {\n  if (o.fontSize <= 0) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  // project point into space of unrotated bounds\n  var b = textBounds(o, tempBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      ox = o.x,\n      oy = o.y,\n      px = cos*gx - sin*gy + (ox - ox*cos + oy*sin),\n      py = sin*gx + cos*gy + (oy - ox*sin - oy*cos);\n\n  return b.contains(px, py);\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick(hit)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/text.js\n// module id = Wd6V\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar util_1 = require('../util');\nvar config_1 = require('../config');\nvar data_1 = require('./data/data');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar common_1 = require('./common');\nvar vega_schema_1 = require('../vega.schema');\nvar LayerModel = (function (_super) {\n    __extends(LayerModel, _super);\n    function LayerModel(spec, parent, parentGivenName) {\n        var _this = this;\n        _super.call(this, spec, parent, parentGivenName);\n        this._config = this._initConfig(spec.config, parent);\n        this._children = spec.layers.map(function (layer, i) {\n            return common_1.buildModel(layer, _this, _this.name('layer_' + i));\n        });\n    }\n    LayerModel.prototype._initConfig = function (specConfig, parent) {\n        return util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), specConfig, parent ? parent.config() : {});\n    };\n    LayerModel.prototype.has = function (channel) {\n        return false;\n    };\n    LayerModel.prototype.children = function () {\n        return this._children;\n    };\n    LayerModel.prototype.isOrdinalScale = function (channel) {\n        return this._children[0].isOrdinalScale(channel);\n    };\n    LayerModel.prototype.dataTable = function () {\n        return this._children[0].dataTable();\n    };\n    LayerModel.prototype.fieldDef = function (channel) {\n        return null;\n    };\n    LayerModel.prototype.stack = function () {\n        return null;\n    };\n    LayerModel.prototype.parseData = function () {\n        this._children.forEach(function (child) {\n            child.parseData();\n        });\n        this.component.data = data_1.parseLayerData(this);\n    };\n    LayerModel.prototype.parseSelectionData = function () {\n    };\n    LayerModel.prototype.parseLayoutData = function () {\n        this._children.forEach(function (child, i) {\n            child.parseLayoutData();\n        });\n        this.component.layout = layout_1.parseLayerLayout(this);\n    };\n    LayerModel.prototype.parseScale = function () {\n        var model = this;\n        var scaleComponent = this.component.scale = {};\n        this._children.forEach(function (child) {\n            child.parseScale();\n            if (true) {\n                util_1.keys(child.component.scale).forEach(function (channel) {\n                    var childScales = child.component.scale[channel];\n                    if (!childScales) {\n                        return;\n                    }\n                    var modelScales = scaleComponent[channel];\n                    if (modelScales && modelScales.main) {\n                        var modelDomain = modelScales.main.domain;\n                        var childDomain = childScales.main.domain;\n                        if (util_1.isArray(modelDomain)) {\n                            if (util_1.isArray(childScales.main.domain)) {\n                                modelScales.main.domain = modelDomain.concat(childDomain);\n                            }\n                            else {\n                                model.addWarning('custom domain scale cannot be unioned with default field-based domain');\n                            }\n                        }\n                        else {\n                            var unionedFields = vega_schema_1.isUnionedDomain(modelDomain) ? modelDomain.fields : [modelDomain];\n                            if (util_1.isArray(childDomain)) {\n                                model.addWarning('custom domain scale cannot be unioned with default field-based domain');\n                            }\n                            var fields = vega_schema_1.isDataRefDomain(childDomain) ? unionedFields.concat([childDomain]) :\n                                vega_schema_1.isUnionedDomain(childDomain) ? unionedFields.concat(childDomain.fields) :\n                                    unionedFields;\n                            fields = util_1.unique(fields, util_1.hash);\n                            if (fields.length > 1) {\n                                modelScales.main.domain = { fields: fields };\n                            }\n                            else {\n                                modelScales.main.domain = fields[0];\n                            }\n                        }\n                        modelScales.colorLegend = modelScales.colorLegend ? modelScales.colorLegend : childScales.colorLegend;\n                        modelScales.binColorLegend = modelScales.binColorLegend ? modelScales.binColorLegend : childScales.binColorLegend;\n                    }\n                    else {\n                        scaleComponent[channel] = childScales;\n                    }\n                    util_1.vals(childScales).forEach(function (scale) {\n                        var scaleNameWithoutPrefix = scale.name.substr(child.name('').length);\n                        var newName = model.scaleName(scaleNameWithoutPrefix);\n                        child.renameScale(scale.name, newName);\n                        scale.name = newName;\n                    });\n                    delete childScales[channel];\n                });\n            }\n        });\n    };\n    LayerModel.prototype.parseMark = function () {\n        this._children.forEach(function (child) {\n            child.parseMark();\n        });\n    };\n    LayerModel.prototype.parseAxis = function () {\n        var axisComponent = this.component.axis = {};\n        this._children.forEach(function (child) {\n            child.parseAxis();\n            if (true) {\n                util_1.keys(child.component.axis).forEach(function (channel) {\n                    if (!axisComponent[channel]) {\n                        axisComponent[channel] = child.component.axis[channel];\n                    }\n                });\n            }\n        });\n    };\n    LayerModel.prototype.parseAxisGroup = function () {\n        return null;\n    };\n    LayerModel.prototype.parseGridGroup = function () {\n        return null;\n    };\n    LayerModel.prototype.parseLegend = function () {\n        var legendComponent = this.component.legend = {};\n        this._children.forEach(function (child) {\n            child.parseLegend();\n            if (true) {\n                util_1.keys(child.component.legend).forEach(function (channel) {\n                    if (!legendComponent[channel]) {\n                        legendComponent[channel] = child.component.legend[channel];\n                    }\n                });\n            }\n        });\n    };\n    LayerModel.prototype.assembleParentGroupProperties = function () {\n        return null;\n    };\n    LayerModel.prototype.assembleData = function (data) {\n        data_1.assembleData(this, data);\n        this._children.forEach(function (child) {\n            child.assembleData(data);\n        });\n        return data;\n    };\n    LayerModel.prototype.assembleLayout = function (layoutData) {\n        this._children.forEach(function (child) {\n            child.assembleLayout(layoutData);\n        });\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    LayerModel.prototype.assembleMarks = function () {\n        return util_1.flatten(this._children.map(function (child) {\n            return child.assembleMarks();\n        }));\n    };\n    LayerModel.prototype.channels = function () {\n        return [];\n    };\n    LayerModel.prototype.mapping = function () {\n        return null;\n    };\n    LayerModel.prototype.isLayer = function () {\n        return true;\n    };\n    LayerModel.prototype.compatibleSource = function (child) {\n        var data = this.data();\n        var childData = child.component.data;\n        var compatible = !childData.source || (data && data.url === childData.source.url);\n        return compatible;\n    };\n    return LayerModel;\n}(model_1.Model));\nexports.LayerModel = LayerModel;\n//# sourceMappingURL=layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/layer.js\n// module id = Wwtv\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar tick;\n(function (tick) {\n    function markType() {\n        return 'rect';\n    }\n    tick.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        p.xc = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.yc = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        if (config.mark.orient === 'horizontal') {\n            p.width = size(model.encoding().size, model.scaleName(channel_1.SIZE), config, (model.scale(channel_1.X) || {}).bandSize);\n            p.height = { value: config.mark.tickThickness };\n        }\n        else {\n            p.width = { value: config.mark.tickThickness };\n            p.height = size(model.encoding().size, model.scaleName(channel_1.SIZE), config, (model.scale(channel_1.Y) || {}).bandSize);\n        }\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    tick.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(fieldDef, scaleName, config, scaleBandSize) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fieldDef.field\n                };\n            }\n            else if (fieldDef.value !== undefined) {\n                return { value: fieldDef.value };\n            }\n        }\n        if (config.mark.tickSize) {\n            return { value: config.mark.tickSize };\n        }\n        var bandSize = scaleBandSize !== undefined ?\n            scaleBandSize :\n            config.scale.bandSize;\n        return { value: bandSize / 1.5 };\n    }\n    function labels(model) {\n        return undefined;\n    }\n    tick.labels = labels;\n})(tick = exports.tick || (exports.tick = {}));\n//# sourceMappingURL=tick.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/tick.js\n// module id = XL1Y\n// module chunks = 0","module.exports = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = \",\",\n        peg$c1 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c2 = function(o, m) { return [o].concat(m); },\n        peg$c3 = function(o) { return [o]; },\n        peg$c4 = \"[\",\n        peg$c5 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c6 = \"]\",\n        peg$c7 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c8 = \">\",\n        peg$c9 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n        peg$c10 = function(f1, f2, o) {\n            return {\n              start: f1, middle: o, end: f2,\n              str: '['+f1.str+', '+f2.str+'] > '+o.str};\n            },\n        peg$c11 = function(s, f) {\n            s.filters = f;\n            s.str += f.map(function(x) { return '['+x+']'; }).join('');\n            return s;\n          },\n        peg$c12 = function(s) { return s; },\n        peg$c13 = \"(\",\n        peg$c14 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c15 = \")\",\n        peg$c16 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c17 = function(m) {\n            return {\n              stream: m,\n              str: '('+m.map(function(m) { return m.str; }).join(', ')+')'\n            };\n          },\n        peg$c18 = \"@\",\n        peg$c19 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c20 = \":\",\n        peg$c21 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c22 = function(n, e) { return {event: e, name: n, str: '@'+n+':'+e}; },\n        peg$c23 = function(m, e) { return {event: e, mark: m, str: m+':'+e}; },\n        peg$c24 = function(t, e) { return {event: e, target: t, str: t+':'+e}; },\n        peg$c25 = function(e) { return {event: e, str: e}; },\n        peg$c26 = function(s) { return {signal: s, str: s}; },\n        peg$c27 = \"rect\",\n        peg$c28 = { type: \"literal\", value: \"rect\", description: \"\\\"rect\\\"\" },\n        peg$c29 = \"symbol\",\n        peg$c30 = { type: \"literal\", value: \"symbol\", description: \"\\\"symbol\\\"\" },\n        peg$c31 = \"path\",\n        peg$c32 = { type: \"literal\", value: \"path\", description: \"\\\"path\\\"\" },\n        peg$c33 = \"arc\",\n        peg$c34 = { type: \"literal\", value: \"arc\", description: \"\\\"arc\\\"\" },\n        peg$c35 = \"area\",\n        peg$c36 = { type: \"literal\", value: \"area\", description: \"\\\"area\\\"\" },\n        peg$c37 = \"line\",\n        peg$c38 = { type: \"literal\", value: \"line\", description: \"\\\"line\\\"\" },\n        peg$c39 = \"rule\",\n        peg$c40 = { type: \"literal\", value: \"rule\", description: \"\\\"rule\\\"\" },\n        peg$c41 = \"image\",\n        peg$c42 = { type: \"literal\", value: \"image\", description: \"\\\"image\\\"\" },\n        peg$c43 = \"text\",\n        peg$c44 = { type: \"literal\", value: \"text\", description: \"\\\"text\\\"\" },\n        peg$c45 = \"group\",\n        peg$c46 = { type: \"literal\", value: \"group\", description: \"\\\"group\\\"\" },\n        peg$c47 = \"mousedown\",\n        peg$c48 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n        peg$c49 = \"mouseup\",\n        peg$c50 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n        peg$c51 = \"click\",\n        peg$c52 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n        peg$c53 = \"dblclick\",\n        peg$c54 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n        peg$c55 = \"wheel\",\n        peg$c56 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n        peg$c57 = \"keydown\",\n        peg$c58 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n        peg$c59 = \"keypress\",\n        peg$c60 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n        peg$c61 = \"keyup\",\n        peg$c62 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n        peg$c63 = \"mousewheel\",\n        peg$c64 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n        peg$c65 = \"mousemove\",\n        peg$c66 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n        peg$c67 = \"mouseout\",\n        peg$c68 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n        peg$c69 = \"mouseover\",\n        peg$c70 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n        peg$c71 = \"mouseenter\",\n        peg$c72 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n        peg$c73 = \"touchstart\",\n        peg$c74 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n        peg$c75 = \"touchmove\",\n        peg$c76 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n        peg$c77 = \"touchend\",\n        peg$c78 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n        peg$c79 = \"dragenter\",\n        peg$c80 = { type: \"literal\", value: \"dragenter\", description: \"\\\"dragenter\\\"\" },\n        peg$c81 = \"dragover\",\n        peg$c82 = { type: \"literal\", value: \"dragover\", description: \"\\\"dragover\\\"\" },\n        peg$c83 = \"dragleave\",\n        peg$c84 = { type: \"literal\", value: \"dragleave\", description: \"\\\"dragleave\\\"\" },\n        peg$c85 = function(e) { return e; },\n        peg$c86 = /^[a-zA-Z0-9_\\-]/,\n        peg$c87 = { type: \"class\", value: \"[a-zA-Z0-9_-]\", description: \"[a-zA-Z0-9_-]\" },\n        peg$c88 = function(n) { return n.join(''); },\n        peg$c89 = /^[a-zA-Z0-9\\-_  #.>+~[\\]=|\\^$*]/,\n        peg$c90 = { type: \"class\", value: \"[a-zA-Z0-9-_  #\\\\.\\\\>\\\\+~\\\\[\\\\]=|\\\\^\\\\$\\\\*]\", description: \"[a-zA-Z0-9-_  #\\\\.\\\\>\\\\+~\\\\[\\\\]=|\\\\^\\\\$\\\\*]\" },\n        peg$c91 = function(c) { return c.join(''); },\n        peg$c92 = /^['\"a-zA-Z0-9_().><=! \\t-&|~]/,\n        peg$c93 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_\\\\(\\\\)\\\\.\\\\>\\\\<\\\\=\\\\! \\\\t-&|~]\", description: \"['\\\"a-zA-Z0-9_\\\\(\\\\)\\\\.\\\\>\\\\<\\\\=\\\\! \\\\t-&|~]\" },\n        peg$c94 = function(v) { return v.join(''); },\n        peg$c95 = /^[ \\t\\r\\n]/,\n        peg$c96 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemerged();\n\n      return s0;\n    }\n\n    function peg$parsemerged() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsesep();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsesep();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsemerged();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c2(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseordered();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseordered() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c4;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsesep();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefiltered();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsesep();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c0;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c1); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsesep();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsefiltered();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsesep();\n                    if (s8 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 93) {\n                        s9 = peg$c6;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c7); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parsesep();\n                        if (s10 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 62) {\n                            s11 = peg$c8;\n                            peg$currPos++;\n                          } else {\n                            s11 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n                          }\n                          if (s11 !== peg$FAILED) {\n                            s12 = peg$parsesep();\n                            if (s12 !== peg$FAILED) {\n                              s13 = peg$parseordered();\n                              if (s13 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c10(s3, s7, s13);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsefiltered();\n      }\n\n      return s0;\n    }\n\n    function peg$parsefiltered() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsefilter();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parsefilter();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsestream();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsestream() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c13;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemerged();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c17(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 64) {\n          s1 = peg$c18;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c19); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsename();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s3 = peg$c20;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c21); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseeventType();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsemarkType();\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s2 = peg$c20;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c21); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseeventType();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c23(s1, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsecss();\n            if (s1 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 58) {\n                s2 = peg$c20;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseeventType();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c24(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseeventType();\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c25(s1);\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsename();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c26(s1);\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemarkType() {\n      var s0;\n\n      if (input.substr(peg$currPos, 4) === peg$c27) {\n        s0 = peg$c27;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c29) {\n          s0 = peg$c29;\n          peg$currPos += 6;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c31) {\n            s0 = peg$c31;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c33) {\n              s0 = peg$c33;\n              peg$currPos += 3;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c35) {\n                s0 = peg$c35;\n                peg$currPos += 4;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c37) {\n                  s0 = peg$c37;\n                  peg$currPos += 4;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 4) === peg$c39) {\n                    s0 = peg$c39;\n                    peg$currPos += 4;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c41) {\n                      s0 = peg$c41;\n                      peg$currPos += 5;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 4) === peg$c43) {\n                        s0 = peg$c43;\n                        peg$currPos += 4;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 5) === peg$c45) {\n                          s0 = peg$c45;\n                          peg$currPos += 5;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseeventType() {\n      var s0;\n\n      if (input.substr(peg$currPos, 9) === peg$c47) {\n        s0 = peg$c47;\n        peg$currPos += 9;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c49) {\n          s0 = peg$c49;\n          peg$currPos += 7;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c51) {\n            s0 = peg$c51;\n            peg$currPos += 5;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 8) === peg$c53) {\n              s0 = peg$c53;\n              peg$currPos += 8;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c54); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c55) {\n                s0 = peg$c55;\n                peg$currPos += 5;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c56); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7) === peg$c57) {\n                  s0 = peg$c57;\n                  peg$currPos += 7;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 8) === peg$c59) {\n                    s0 = peg$c59;\n                    peg$currPos += 8;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c61) {\n                      s0 = peg$c61;\n                      peg$currPos += 5;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 10) === peg$c63) {\n                        s0 = peg$c63;\n                        peg$currPos += 10;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 9) === peg$c65) {\n                          s0 = peg$c65;\n                          peg$currPos += 9;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 8) === peg$c67) {\n                            s0 = peg$c67;\n                            peg$currPos += 8;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c68); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 9) === peg$c69) {\n                              s0 = peg$c69;\n                              peg$currPos += 9;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c71) {\n                                s0 = peg$c71;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 10) === peg$c73) {\n                                  s0 = peg$c73;\n                                  peg$currPos += 10;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 9) === peg$c75) {\n                                    s0 = peg$c75;\n                                    peg$currPos += 9;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                                  }\n                                  if (s0 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 8) === peg$c77) {\n                                      s0 = peg$c77;\n                                      peg$currPos += 8;\n                                    } else {\n                                      s0 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n                                    }\n                                    if (s0 === peg$FAILED) {\n                                      if (input.substr(peg$currPos, 9) === peg$c79) {\n                                        s0 = peg$c79;\n                                        peg$currPos += 9;\n                                      } else {\n                                        s0 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n                                      }\n                                      if (s0 === peg$FAILED) {\n                                        if (input.substr(peg$currPos, 8) === peg$c81) {\n                                          s0 = peg$c81;\n                                          peg$currPos += 8;\n                                        } else {\n                                          s0 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c82); }\n                                        }\n                                        if (s0 === peg$FAILED) {\n                                          if (input.substr(peg$currPos, 9) === peg$c83) {\n                                            s0 = peg$c83;\n                                            peg$currPos += 9;\n                                          } else {\n                                            s0 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c84); }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefilter() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c4;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexpr();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c6;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c7); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c85(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsename() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c86.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c87); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c86.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c87); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c88(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsecss() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c89.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c89.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c90); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseexpr() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c92.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c92.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c93); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c94(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsesep() {\n      var s0, s1;\n\n      s0 = [];\n      if (peg$c95.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c95.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c96); }\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-event-selector/index.js\n// module id = XSKZ\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    bound = require('vega-scenegraph').bound;\n\nvar EMPTY = {};\n\nfunction Encoder(graph, mark, builder) {\n  var props  = mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit;\n\n  Node.prototype.init.call(this, graph);\n\n  this._mark = mark;\n  this._builder = builder;\n  var s = this._scales = [];\n\n  // Only scales used in the 'update' property set are set as\n  // encoder depedencies to have targeted reevaluations. However,\n  // we still want scales in 'enter' and 'exit' to be evaluated\n  // before the encoder.\n  if (enter) s.push.apply(s, enter.scales);\n\n  if (update) {\n    this.dependency(Deps.DATA, update.data);\n    this.dependency(Deps.SIGNALS, update.signals);\n    this.dependency(Deps.FIELDS, update.fields);\n    this.dependency(Deps.SCALES, update.scales);\n    s.push.apply(s, update.scales);\n  }\n\n  if (exit) s.push.apply(s, exit.scales);\n\n  return this.mutates(true);\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  log.debug(input, ['encoding', this._mark.def.type]);\n  var graph = this._graph,\n      props = this._mark.def.properties || {},\n      items = this._mark.items,\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      dirty  = input.dirty,\n      preds  = graph.predicates(),\n      req = input.request,\n      group = this._mark.group,\n      guide = group && (group.mark.axis || group.mark.legend),\n      db = EMPTY, sg = EMPTY, i, len, item, prop;\n\n  if (req && !guide) {\n    if ((prop = props[req]) && input.mod.length) {\n      db = prop.data ? graph.values(Deps.DATA, prop.data) : null;\n      sg = prop.signals ? graph.values(Deps.SIGNALS, prop.signals) : null;\n\n      for (i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds, dirty);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  db = values(Deps.DATA, graph, input, props);\n  sg = values(Deps.SIGNALS, graph, input, props);\n\n  // Items marked for removal are at the tail of items. Process them first.\n  for (i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if (exit) encode.call(this, exit, item, input.trans, db, sg, preds, dirty);\n    if (input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if (!input.trans) items.pop();\n  }\n\n  var update_status = require('./Builder').STATUS.UPDATE;\n  for (i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if (enter)  encode.call(this, enter,  item, input.trans, db, sg, preds, dirty);\n    if (update) encode.call(this, update, item, input.trans, db, sg, preds, dirty);\n    item.status = update_status;\n  }\n\n  if (update) {\n    for (i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds, dirty);\n    }\n  }\n\n  return input;\n};\n\n// Only marshal necessary data and signal values\nfunction values(type, graph, input, props) {\n  var p, x, o, add = input.add.length;\n  if ((p=props.enter) && (x=p[type]).length && add) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  if ((p=props.exit) && (x=p[type]).length && input.rem.length) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  if ((p=props.update) && (x=p[type]).length && (add || input.mod.length)) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  return o || EMPTY;\n}\n\nfunction encode(prop, item, trans, db, sg, preds, dirty) {\n  var enc = prop.encode,\n      wasDirty = item._dirty,\n      isDirty  = enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n\n  item._dirty = isDirty || wasDirty;\n  if (isDirty && !wasDirty) dirty.push(item);\n}\n\n// If a specified property set called, or update property set\n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var def = this._mark.def,\n      props = def.properties || {},\n      reeval = dl.isFunction(def.from) || def.orient || pulse.request ||\n        Node.prototype.reevaluate.call(this, pulse);\n\n  return reeval || (props.update ? nestedRefs.call(this) : false);\n};\n\n// Test if any nested refs trigger a reflow of mark items.\nfunction nestedRefs() {\n  var refs = this._mark.def.properties.update.nested,\n      parent = this._builder,\n      level = 0,\n      i = 0, len = refs.length,\n      ref, ds, stamp;\n\n  for (; i<len; ++i) {\n    ref = refs[i];\n\n    // Scale references are resolved via this._mark._scaleRefs which are\n    // added to dependency lists + connected in Builder.evaluate.\n    if (ref.scale) continue;\n\n    for (; level<ref.level; ++level) {\n      parent = parent.parent();\n      ds = parent.ds();\n    }\n\n    // Compare stamps to determine if a change in a group's properties\n    // or data should trigger a reeval. We cannot check anything fancier\n    // (e.g., pulse.fields) as the ref may use item.datum.\n    stamp = (ref.group ? parent.encoder() : ds.last())._stamp;\n    if (stamp > this._stamp) return true;\n  }\n\n  return false;\n}\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items, dirty) {\n  items = dl.array(items);\n  var preds = graph.predicates(),\n      db = graph.values(Deps.DATA),\n      sg = graph.values(Deps.SIGNALS),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds, dirty);\n      bound.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Encoder.js\n// module id = XVii\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar data_1 = require('../data');\nvar scale_1 = require('../scale');\nvar util_1 = require('../util');\nvar mark_1 = require('../mark');\nvar time_1 = require('./time');\nfunction assembleLayout(model, layoutData) {\n    var layoutComponent = model.component.layout;\n    if (!layoutComponent.width && !layoutComponent.height) {\n        return layoutData;\n    }\n    if (true) {\n        var distinctFields = util_1.keys(util_1.extend(layoutComponent.width.distinct, layoutComponent.height.distinct));\n        var formula = layoutComponent.width.formula.concat(layoutComponent.height.formula)\n            .map(function (formula) {\n            return util_1.extend({ type: 'formula' }, formula);\n        });\n        return [\n            distinctFields.length > 0 ? {\n                name: model.dataName(data_1.LAYOUT),\n                source: model.dataTable(),\n                transform: [{\n                        type: 'aggregate',\n                        summarize: distinctFields.map(function (field) {\n                            return { field: field, ops: ['distinct'] };\n                        })\n                    }].concat(formula)\n            } : {\n                name: model.dataName(data_1.LAYOUT),\n                values: [{}],\n                transform: formula\n            }\n        ];\n    }\n}\nexports.assembleLayout = assembleLayout;\nfunction parseUnitLayout(model) {\n    return {\n        width: parseUnitSizeLayout(model, channel_1.X),\n        height: parseUnitSizeLayout(model, channel_1.Y)\n    };\n}\nexports.parseUnitLayout = parseUnitLayout;\nfunction parseUnitSizeLayout(model, channel) {\n    var cellConfig = model.config().cell;\n    var nonOrdinalSize = channel === channel_1.X ? cellConfig.width : cellConfig.height;\n    return {\n        distinct: getDistinct(model, channel),\n        formula: [{\n                field: model.channelSizeName(channel),\n                expr: unitSizeExpr(model, channel, nonOrdinalSize)\n            }]\n    };\n}\nfunction unitSizeExpr(model, channel, nonOrdinalSize) {\n    if (model.scale(channel)) {\n        if (model.isOrdinalScale(channel)) {\n            var scale = model.scale(channel);\n            return '(' + cardinalityFormula(model, channel) +\n                ' + ' + scale.padding +\n                ') * ' + scale.bandSize;\n        }\n        else {\n            return nonOrdinalSize + '';\n        }\n    }\n    else {\n        if (model.mark() === mark_1.TEXT && channel === channel_1.X) {\n            return model.config().scale.textBandWidth + '';\n        }\n        return model.config().scale.bandSize + '';\n    }\n}\nfunction parseFacetLayout(model) {\n    return {\n        width: parseFacetSizeLayout(model, channel_1.COLUMN),\n        height: parseFacetSizeLayout(model, channel_1.ROW)\n    };\n}\nexports.parseFacetLayout = parseFacetLayout;\nfunction parseFacetSizeLayout(model, channel) {\n    var childLayoutComponent = model.child().component.layout;\n    var sizeType = channel === channel_1.ROW ? 'height' : 'width';\n    var childSizeComponent = childLayoutComponent[sizeType];\n    if (true) {\n        var distinct = util_1.extend(getDistinct(model, channel), childSizeComponent.distinct);\n        var formula = childSizeComponent.formula.concat([{\n                field: model.channelSizeName(channel),\n                expr: facetSizeFormula(model, channel, model.child().channelSizeName(channel))\n            }]);\n        delete childLayoutComponent[sizeType];\n        return {\n            distinct: distinct,\n            formula: formula\n        };\n    }\n}\nfunction facetSizeFormula(model, channel, innerSize) {\n    var scale = model.scale(channel);\n    if (model.has(channel)) {\n        return '(datum.' + innerSize + ' + ' + scale.padding + ')' + ' * ' + cardinalityFormula(model, channel);\n    }\n    else {\n        return 'datum.' + innerSize + ' + ' + model.config().facet.scale.padding;\n    }\n}\nfunction parseLayerLayout(model) {\n    return {\n        width: parseLayerSizeLayout(model, channel_1.X),\n        height: parseLayerSizeLayout(model, channel_1.Y)\n    };\n}\nexports.parseLayerLayout = parseLayerLayout;\nfunction parseLayerSizeLayout(model, channel) {\n    if (true) {\n        var childLayoutComponent = model.children()[0].component.layout;\n        var sizeType_1 = channel === channel_1.Y ? 'height' : 'width';\n        var childSizeComponent = childLayoutComponent[sizeType_1];\n        var distinct = childSizeComponent.distinct;\n        var formula = [{\n                field: model.channelSizeName(channel),\n                expr: childSizeComponent.formula[0].expr\n            }];\n        model.children().forEach(function (child) {\n            delete child.component.layout[sizeType_1];\n        });\n        return {\n            distinct: distinct,\n            formula: formula\n        };\n    }\n}\nfunction getDistinct(model, channel) {\n    if (model.has(channel) && model.isOrdinalScale(channel)) {\n        var scale = model.scale(channel);\n        if (scale.type === scale_1.ScaleType.ORDINAL && !(scale.domain instanceof Array)) {\n            var distinctField = model.field(channel);\n            var distinct = {};\n            distinct[distinctField] = true;\n            return distinct;\n        }\n    }\n    return {};\n}\nfunction cardinalityFormula(model, channel) {\n    var scale = model.scale(channel);\n    if (scale.domain instanceof Array) {\n        return scale.domain.length;\n    }\n    var timeUnit = model.fieldDef(channel).timeUnit;\n    var timeUnitDomain = timeUnit ? time_1.rawDomain(timeUnit, channel) : null;\n    return timeUnitDomain !== null ? timeUnitDomain.length :\n        model.field(channel, { datum: true, prefn: 'distinct_' });\n}\n//# sourceMappingURL=layout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/layout.js\n// module id = YBv9\n// module chunks = 0","var util = require('../util'),\n  type = require('./type'),\n  formats = require('./formats'),\n  timeF = require('../format').time;\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) {\n    var t = types[c];\n    if (t && t.indexOf('date:') === 0) {\n      var parts = t.split(/:(.+)?/, 2),  // split on first :\n          pattern = parts[1];\n      if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n          (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n        pattern = pattern.slice(1, -1);\n      } else {\n        throw Error('Format pattern must be quoted: ' + pattern);\n      }\n      pattern = timeF(pattern);\n      return function(v) { return pattern.parse(v); };\n    }\n    if (!type.parsers[t]) {\n      throw Error('Illegal format pattern: ' + c + ':' + t);\n    }\n    return type.parsers[t];\n  });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/read.js\n// module id = YGNx\n// module chunks = 0","var d3 = require('d3'),\n    vg = require('vega'),\n    vl = require('vega-lite'),\n    parameter = require('./parameter'),\n    post = require('./post');\n\nvar config = {\n  // URL for loading specs into editor\n  editor_url: 'http://vega.github.io/vega-editor/',\n\n  // HTML to inject within view source head element\n  source_header: '',\n\n  // HTML to inject before view source closing body tag\n  source_footer: ''\n};\n\nvar MODES = {\n  'vega':      'vega',\n  'vega-lite': 'vega-lite'\n};\n\nvar PREPROCESSOR = {\n  'vega':      function(vgjson) { return vgjson; },\n  'vega-lite': function(vljson) { return vl.compile(vljson).spec; }\n};\n\nfunction load(url, arg, prop, el, callback) {\n  vg.util.load({url: url}, function(err, data) {\n    var opt;\n    if (err || !data) {\n      console.error(err || ('No data found at ' + url));\n    } else {\n      // marshal embedding spec and restart\n      if (!arg) { // Loading embed spec from URL\n        opt = JSON.parse(data);\n      } else {  // Loading vg/vl spec or config from URL\n        opt = vg.util.extend({}, arg);\n        opt[prop] = prop === 'source' ? data : JSON.parse(data);\n      }\n      embed(el, opt, callback);\n    }\n  });\n}\n\n// Embed a Vega visualization component in a web page.\n// el: DOM element in which to place component (DOM node or CSS selector)\n// opt: Embedding specification (parsed JSON or URL string)\n// callback: invoked with the generated Vega View instance\nfunction embed(el, opt, callback) {\n  var cb = callback || function(){},\n      params = [], source, spec, mode, config;\n\n  try {\n    // Load the visualization specification.\n    if (vg.util.isString(opt)) {\n      return load(opt, null, null, el, callback);\n    } else if (opt.source) {\n      source = opt.source;\n      spec = JSON.parse(source);\n    } else if (opt.spec) {\n      spec = opt.spec;\n      source = JSON.stringify(spec, null, 2);\n    } else if (opt.url) {\n      return load(opt.url, opt, 'source', el, callback);\n    } else {\n      spec = opt;\n      source = JSON.stringify(spec, null, 2);\n      opt = {spec: spec, actions: false};\n    }\n    mode = MODES[opt.mode] || MODES.vega;\n    spec = PREPROCESSOR[mode](spec);\n\n    // Load Vega theme/configuration.\n    if (vg.util.isString(opt.config)) {\n      return load(opt.config, opt, 'config', el, callback);\n    } else if (opt.config) {\n      config = opt.config;\n    }\n\n    // ensure container div has class 'vega-embed'\n    var div = d3.select(el)\n      .classed('vega-embed', true)\n      .html(''); // clear container\n\n    // handle parameters\n    if (opt.parameters) {\n      var elp = opt.parameter_el ? d3.select(opt.parameter_el) : div;\n      var pdiv = elp.append('div')\n        .attr('class', 'vega-params');\n      params = opt.parameters.map(function(p) {\n        return parameter.init(pdiv, p, spec);\n      });\n    }\n  } catch (err) { cb(err); }\n\n  vg.parse.spec(spec, config, function(error, chart) {\n    if (error) { cb(error); return; }\n    try {\n      var renderer = opt.renderer || 'canvas',\n          actions  = opt.actions || {};\n\n      var view = chart({\n        el: el,\n        data: opt.data || undefined,\n        renderer: renderer\n      });\n\n      if (opt.actions !== false) {\n        // add child div to house action links\n        var ctrl = div.append('div')\n          .attr('class', 'vega-actions');\n\n        // add 'Export' action\n        if (actions.export !== false) {\n          var ext = (renderer==='canvas' ? 'png' : 'svg');\n          ctrl.append('a')\n            .text('Export as ' + ext.toUpperCase())\n            .attr('href', '#')\n            .attr('target', '_blank')\n            .attr('download', (spec.name || 'vega') + '.' + ext)\n            .on('mousedown', function() {\n              this.href = view.toImageURL(ext);\n              d3.event.preventDefault();\n            });\n        }\n\n        // add 'View Source' action\n        if (actions.source !== false) {\n          ctrl.append('a')\n            .text('View Source')\n            .attr('href', '#')\n            .on('click', function() {\n              viewSource(source);\n              d3.event.preventDefault();\n            });\n        }\n\n        // add 'Open in Vega Editor' action\n        if (actions.editor !== false) {\n          ctrl.append('a')\n            .text('Open in Vega Editor')\n            .attr('href', '#')\n            .on('click', function() {\n              post(window, embed.config.editor_url, {spec: source, mode: mode});\n              d3.event.preventDefault();\n            });\n        }\n      }\n\n      // bind all parameter elements\n      params.forEach(function(p) { parameter.bind(p, view); });\n\n      // initialize and return visualization\n      view.update();\n      cb(null, {view: view, spec: spec});\n    } catch (err) { cb(err); }\n  });\n}\n\nfunction viewSource(source) {\n  var header = '<html><head>' + config.source_header + '</head>' + '<body><pre><code class=\"json\">';\n  var footer = '</code></pre>' + config.source_footer + '</body></html>';\n  var win = window.open('');\n  win.document.write(header + source + footer);\n  win.document.title = 'Vega JSON Source';\n}\n\n// make config externally visible\nembed.config = config;\n\nmodule.exports = embed;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-embed/src/embed.js\n// module id = YX8j\n// module chunks = 0","var util = require('./util'),\n    gen = module.exports;\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x >= min && x <= max) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    return x < min ? 0 : x > max ? 1 : (x - min) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? min + p*d : NaN;\n  };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x === Math.floor(x) && x >= a && x < b) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    var v = Math.floor(x);\n    return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? a - 1 + Math.floor(p*d) : NaN;\n  };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    var exp = Math.exp(Math.pow(x-mean, 2) / (-2 * Math.pow(stdev, 2)));\n    return (1 / (stdev * Math.sqrt(2*Math.PI))) * exp;\n  };\n  f.cdf = function(x) {\n    // Approximation from West (2009)\n    // Better Approximations to Cumulative Normal Functions\n    var cd,\n        z = (x - mean) / stdev,\n        Z = Math.abs(z);\n    if (Z > 37) {\n      cd = 0;\n    } else {\n      var sum, exp = Math.exp(-Z*Z/2);\n      if (Z < 7.07106781186547) {\n        sum = 3.52624965998911e-02 * Z + 0.700383064443688;\n        sum = sum * Z + 6.37396220353165;\n        sum = sum * Z + 33.912866078383;\n        sum = sum * Z + 112.079291497871;\n        sum = sum * Z + 221.213596169931;\n        sum = sum * Z + 220.206867912376;\n        cd = exp * sum;\n        sum = 8.83883476483184e-02 * Z + 1.75566716318264;\n        sum = sum * Z + 16.064177579207;\n        sum = sum * Z + 86.7807322029461;\n        sum = sum * Z + 296.564248779674;\n        sum = sum * Z + 637.333633378831;\n        sum = sum * Z + 793.826512519948;\n        sum = sum * Z + 440.413735824752;\n        cd = cd / sum;\n      } else {\n        sum = Z + 0.65;\n        sum = Z + 4 / sum;\n        sum = Z + 3 / sum;\n        sum = Z + 2 / sum;\n        sum = Z + 1 / sum;\n        cd = exp / sum / 2.506628274631;\n      }\n    }\n    return z > 0 ? 1 - cd : cd;\n  };\n  f.icdf = function(p) {\n    // Approximation of Probit function using inverse error function.\n    if (p <= 0 || p >= 1) return NaN;\n    var x = 2*p - 1,\n        v = (8 * (Math.PI - 3)) / (3 * Math.PI * (4-Math.PI)),\n        a = (2 / (Math.PI*v)) + (Math.log(1 - Math.pow(x,2)) / 2),\n        b = Math.log(1 - (x*x)) / v,\n        s = (x > 0 ? 1 : -1) * Math.sqrt(Math.sqrt((a*a) - b) - a);\n    return mean + stdev * Math.SQRT2 * s;\n  };\n  return f;\n};\n\ngen.random.bootstrap = function(domain, smooth) {\n  // Generates a bootstrap sample from a set of observations.\n  // Smooth bootstrapping adds random zero-centered noise to the samples.\n  var val = domain.filter(util.isValid),\n      len = val.length,\n      err = smooth ? gen.random.normal(0, smooth) : null;\n  var f = function() {\n    return val[~~(Math.random()*len)] + (err ? err() : 0);\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  return f;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/generate.js\n// module id = YsQl\n// module chunks = 0","module.exports = function(def, config, property, defaultVal) {\n  if (def[property] !== undefined) {\n    return def[property];\n  } else if (config !== undefined && config[property] !== undefined) {\n    return config[property];\n  } else if (defaultVal !== undefined) {\n    return defaultVal;\n  }\n  return undefined;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/theme-val.js\n// module id = YvtE\n// module chunks = 0","module.exports = {\n  version: '__VERSION__',\n  dataflow: require('vega-dataflow'),\n  parse: require('./src/parse/'),\n  scene: {\n    Bounder: require('./src/scene/Bounder'),\n    Builder: require('./src/scene/Builder'),\n    Encoder: require('./src/scene/Encoder'),\n    GroupBuilder: require('./src/scene/GroupBuilder'),\n    visit: require('./src/scene/visit')\n  },\n  transforms: require('./src/transforms'),\n  Transform: require('./src/transforms/Transform'),\n  BatchTransform: require('./src/transforms/BatchTransform'),\n  Parameter: require('./src/transforms/Parameter'),\n  schema: require('./src/core/schema'),\n  config: require('./src/core/config'),\n  util: require('./src/util'),\n  logging: require('vega-logging'),\n  debug: require('vega-logging').debug\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/index.js\n// module id = YzNj\n// module chunks = 0","var json = require('./json');\n\nvar reader = function(data, format) {\n  var topojson = reader.topojson;\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n};\n\nreader.topojson = require('topojson');\nmodule.exports = reader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/topojson.js\n// module id = Z8XL\n// module chunks = 0","\"use strict\";\nvar stringify = require('json-stable-stringify');\nvar util_1 = require('datalib/src/util');\nexports.keys = util_1.keys;\nexports.extend = util_1.extend;\nexports.duplicate = util_1.duplicate;\nexports.isArray = util_1.isArray;\nexports.vals = util_1.vals;\nexports.truncate = util_1.truncate;\nexports.toMap = util_1.toMap;\nexports.isObject = util_1.isObject;\nexports.isString = util_1.isString;\nexports.isNumber = util_1.isNumber;\nexports.isBoolean = util_1.isBoolean;\nvar util_2 = require('datalib/src/util');\nvar generate_1 = require('datalib/src/generate');\nexports.range = generate_1.range;\nvar encoding_1 = require('./encoding');\nexports.has = encoding_1.has;\nvar channel_1 = require('./channel');\nexports.Channel = channel_1.Channel;\nvar util_3 = require('datalib/src/util');\nfunction pick(obj, props) {\n    var copy = {};\n    props.forEach(function (prop) {\n        if (obj.hasOwnProperty(prop)) {\n            copy[prop] = obj[prop];\n        }\n    });\n    return copy;\n}\nexports.pick = pick;\nfunction omit(obj, props) {\n    var copy = util_2.duplicate(obj);\n    props.forEach(function (prop) {\n        delete copy[prop];\n    });\n    return copy;\n}\nexports.omit = omit;\nfunction hash(a) {\n    if (util_3.isString(a) || util_3.isNumber(a) || util_3.isBoolean(a)) {\n        return String(a);\n    }\n    return stringify(a);\n}\nexports.hash = hash;\nfunction contains(array, item) {\n    return array.indexOf(item) > -1;\n}\nexports.contains = contains;\nfunction without(array, excludedItems) {\n    return array.filter(function (item) {\n        return !contains(excludedItems, item);\n    });\n}\nexports.without = without;\nfunction union(array, other) {\n    return array.concat(without(other, array));\n}\nexports.union = union;\nfunction forEach(obj, f, thisArg) {\n    if (obj.forEach) {\n        obj.forEach.call(thisArg, f);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                f.call(thisArg, obj[k], k, obj);\n            }\n        }\n    }\n}\nexports.forEach = forEach;\nfunction reduce(obj, f, init, thisArg) {\n    if (obj.reduce) {\n        return obj.reduce.call(thisArg, f, init);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                init = f.call(thisArg, init, obj[k], k, obj);\n            }\n        }\n        return init;\n    }\n}\nexports.reduce = reduce;\nfunction map(obj, f, thisArg) {\n    if (obj.map) {\n        return obj.map.call(thisArg, f);\n    }\n    else {\n        var output = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                output.push(f.call(thisArg, obj[k], k, obj));\n            }\n        }\n        return output;\n    }\n}\nexports.map = map;\nfunction some(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (f(arr[k], k, i++)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.some = some;\nfunction every(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (!f(arr[k], k, i++)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.every = every;\nfunction flatten(arrays) {\n    return [].concat.apply([], arrays);\n}\nexports.flatten = flatten;\nfunction mergeDeep(dest) {\n    var src = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        src[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < src.length; i++) {\n        dest = deepMerge_(dest, src[i]);\n    }\n    return dest;\n}\nexports.mergeDeep = mergeDeep;\n;\nfunction deepMerge_(dest, src) {\n    if (typeof src !== 'object' || src === null) {\n        return dest;\n    }\n    for (var p in src) {\n        if (!src.hasOwnProperty(p)) {\n            continue;\n        }\n        if (src[p] === undefined) {\n            continue;\n        }\n        if (typeof src[p] !== 'object' || src[p] === null) {\n            dest[p] = src[p];\n        }\n        else if (typeof dest[p] !== 'object' || dest[p] === null) {\n            dest[p] = mergeDeep(src[p].constructor === Array ? [] : {}, src[p]);\n        }\n        else {\n            mergeDeep(dest[p], src[p]);\n        }\n    }\n    return dest;\n}\nvar dlBin = require('datalib/src/bins/bins');\nfunction getbins(stats, maxbins) {\n    return dlBin({\n        min: stats.min,\n        max: stats.max,\n        maxbins: maxbins\n    });\n}\nexports.getbins = getbins;\nfunction unique(values, f) {\n    var results = [];\n    var u = {}, v, i, n;\n    for (i = 0, n = values.length; i < n; ++i) {\n        v = f ? f(values[i]) : values[i];\n        if (v in u) {\n            continue;\n        }\n        u[v] = 1;\n        results.push(values[i]);\n    }\n    return results;\n}\nexports.unique = unique;\n;\nfunction warning(message) {\n    console.warn('[VL Warning]', message);\n}\nexports.warning = warning;\nfunction error(message) {\n    console.error('[VL Error]', message);\n}\nexports.error = error;\nfunction differ(dict, other) {\n    for (var key in dict) {\n        if (dict.hasOwnProperty(key)) {\n            if (other[key] && dict[key] && other[key] !== dict[key]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexports.differ = differ;\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/util.js\n// module id = ZAUf\n// module chunks = 0","var util = require('./util'),\n    EMPTY = [];\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var groups = scene.items,\n      renderer = this,\n      group, items, axes, legends, gx, gy, w, h, opac, i, n, j, m;\n\n  for (i=0, n=groups.length; i<n; ++i) {\n    group = groups[i];\n    axes = group.axisItems || EMPTY;\n    items = group.items || EMPTY;\n    legends = group.legendItems || EMPTY;\n    gx = group.x || 0;\n    gy = group.y || 0;\n    w = group.width || 0;\n    h = group.height || 0;\n\n    // draw group background\n    if (group.stroke || group.fill) {\n      opac = group.opacity == null ? 1 : group.opacity;\n      if (opac > 0) {\n        if (group.fill && util.fill(g, group, opac)) {\n          g.fillRect(gx, gy, w, h);\n        }\n        if (group.stroke && util.stroke(g, group, opac)) {\n          g.strokeRect(gx, gy, w, h);\n        }\n      }\n    }\n\n    // setup graphics context\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, w, h);\n      g.clip();\n    }\n    if (bounds) bounds.translate(-gx, -gy);\n\n    // draw group contents\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].layer === 'back') {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      renderer.draw(g, items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].layer !== 'back') {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n\n    // restore graphics context\n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  if (scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return null;\n  }\n\n  var groups = scene.items || EMPTY, subscene,\n      group, axes, items, legends, hits, dx, dy, i, j, b;\n\n  for (i=groups.length; --i>=0;) {\n    group = groups[i];\n\n    // first hit test against bounding box\n    // if a group is clipped, that should be handled by the bounds check.\n    b = group.bounds;\n    if (b && !b.contains(gx, gy)) continue;\n\n    // passed bounds check, so test sub-groups\n    axes = group.axisItems || EMPTY;\n    items = group.items || EMPTY;\n    legends = group.legendItems || EMPTY;\n    dx = (group.x || 0);\n    dy = (group.y || 0);\n\n    g.save();\n    g.translate(dx, dy);\n    dx = gx - dx;\n    dy = gy - dy;\n    for (j=legends.length; --j>=0;) {\n      subscene = legends[j];\n      if (subscene.interactive !== false) {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=axes.length; --j>=0;) {\n      subscene = axes[j];\n      if (subscene.interactive !== false && subscene.layer !== 'back') {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=items.length; --j>=0;) {\n      subscene = items[j];\n      if (subscene.interactive !== false) {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=axes.length; --j>=0;) {\n      subscene = axes[j];\n      if (subscene.interative !== false && subscene.layer === 'back') {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    g.restore();\n\n    if (scene.interactive !== false && (group.fill || group.stroke) &&\n        dx >= 0 && dx <= group.width && dy >= 0 && dy <= group.height) {\n      return group;\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: pick\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/group.js\n// module id = ZCPb\n// module chunks = 0","\"use strict\";\nexports.defaultLegendConfig = {\n    orient: undefined,\n    shortTimeLabels: false\n};\n//# sourceMappingURL=legend.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/legend.js\n// module id = ZE31\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = Za4h\n// module chunks = 0","function Renderer() {\n  this._el = null;\n  this._bgcolor = null;\n}\n\nvar prototype = Renderer.prototype;\n\nprototype.initialize = function(el, width, height, padding) {\n  this._el = el;\n  return this.resize(width, height, padding);\n};\n\n// Returns the parent container element for a visualization\nprototype.element = function() {\n  return this._el;\n};\n\n// Returns the scene element (e.g., canvas or SVG) of the visualization\n// Subclasses must override if the first child is not the scene element\nprototype.scene = function() {\n  return this._el && this._el.firstChild;\n};\n\nprototype.background = function(bgcolor) {\n  if (arguments.length === 0) return this._bgcolor;\n  this._bgcolor = bgcolor;\n  return this;\n};\n\nprototype.resize = function(width, height, padding) {\n  this._width = width;\n  this._height = height;\n  this._padding = padding || {top:0, left:0, bottom:0, right:0};\n  return this;\n};\n\nprototype.render = function(/*scene, items*/) {\n  return this;\n};\n\nmodule.exports = Renderer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/Renderer.js\n// module id = ZyfV\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-time', ['exports'], factory) :\n  factory((global.d3_time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t0 = new Date;\n  var t1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0.setTime(+start), t1.setTime(+end);\n        floori(t0), floori(t1);\n        return Math.floor(count(t0, t1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  };\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getSeconds();\n  });\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  var milliseconds = millisecond.range;\n  var seconds = second.range;\n  var minutes = minute.range;\n  var hours = hour.range;\n  var days = day.range;\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var weeks = sunday.range;\n  var months = month.range;\n  var years = year.range;\n\n  var utcMillisecond = millisecond;\n  var utcMilliseconds = milliseconds;\n  var utcSeconds = utcSecond.range;\n  var utcMinutes = utcMinute.range;\n  var utcHours = utcHour.range;\n  var utcDays = utcDay.range;\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcWeeks = utcSunday.range;\n  var utcMonths = utcMonth.range;\n  var utcYears = utcYear.range;\n\n  var version = \"0.1.1\";\n\n  exports.version = version;\n  exports.milliseconds = milliseconds;\n  exports.seconds = seconds;\n  exports.minutes = minutes;\n  exports.hours = hours;\n  exports.days = days;\n  exports.sundays = sundays;\n  exports.mondays = mondays;\n  exports.tuesdays = tuesdays;\n  exports.wednesdays = wednesdays;\n  exports.thursdays = thursdays;\n  exports.fridays = fridays;\n  exports.saturdays = saturdays;\n  exports.weeks = weeks;\n  exports.months = months;\n  exports.years = years;\n  exports.utcMillisecond = utcMillisecond;\n  exports.utcMilliseconds = utcMilliseconds;\n  exports.utcSeconds = utcSeconds;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHours = utcHours;\n  exports.utcDays = utcDays;\n  exports.utcSundays = utcSundays;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcWeeks = utcWeeks;\n  exports.utcMonths = utcMonths;\n  exports.utcYears = utcYears;\n  exports.millisecond = millisecond;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.sunday = sunday;\n  exports.monday = monday;\n  exports.tuesday = tuesday;\n  exports.wednesday = wednesday;\n  exports.thursday = thursday;\n  exports.friday = friday;\n  exports.saturday = saturday;\n  exports.week = sunday;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcSunday = utcSunday;\n  exports.utcMonday = utcMonday;\n  exports.utcTuesday = utcTuesday;\n  exports.utcWednesday = utcWednesday;\n  exports.utcThursday = utcThursday;\n  exports.utcFriday = utcFriday;\n  exports.utcSaturday = utcSaturday;\n  exports.utcWeek = utcSunday;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n  exports.interval = newInterval;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time/build/d3-time.js\n// module id = aZ75\n// module chunks = 0","var Base = require('./Transform').prototype;\n\nfunction BatchTransform() {\n  // Nearest appropriate collector.\n  // Set by the dataflow Graph during connection.\n  this._collector = null;\n}\n\nvar prototype = (BatchTransform.prototype = Object.create(Base));\nprototype.constructor = BatchTransform;\n\nprototype.init = function(graph) {\n  Base.init.call(this, graph);\n  return this.batch(true);\n};\n\nprototype.transform = function(input, reset) {\n  return this.batchTransform(input, this._collector.data(), reset);\n};\n\nprototype.batchTransform = function(/* input, data, reset */) {\n};\n\nmodule.exports = BatchTransform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/BatchTransform.js\n// module id = acp7\n// module chunks = 0","var arc = require('./arc');\n\nmodule.exports = function(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  if (l == null) l = 0;\n  if (t == null) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n\n        // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ]);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ]);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n};\n\nfunction drawArc(g, x, y, coords) {\n  var seg = arc.segments(\n    coords[5], // end x\n    coords[6], // end y\n    coords[0], // radius x\n    coords[1], // radius y\n    coords[3], // large flag\n    coords[4], // sweep flag\n    coords[2], // rotation\n    x, y\n  );\n  for (var i=0; i<seg.length; ++i) {\n    var bez = arc.bezier(seg[i]);\n    g.bezierCurveTo.apply(g, bez);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/render.js\n// module id = bSC/\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define('d3-time-format', ['exports', 'd3-time'], factory) :\n  factory((global.d3_time_format = {}),global.d3_time);\n}(this, function (exports,d3Time) { 'use strict';\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  };\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.day.count(d3Time.year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.sunday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.monday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var caES = locale$1({\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  });\n\n  var deCH = locale$1({\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  });\n\n  var deDE = locale$1({\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  });\n\n  var enCA = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var enGB = locale$1({\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var esES = locale$1({\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  });\n\n  var fiFI = locale$1({\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  });\n\n  var frCA = locale$1({\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  });\n\n  var frFR = locale$1({\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  });\n\n  var heIL = locale$1({\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  });\n\n  var huHU = locale$1({\n    dateTime: \"%Y. %B %-e., %A %X\",\n    date: \"%Y. %m. %d.\",\n    time: \"%H:%M:%S\",\n    periods: [\"de.\", \"du.\"], // unused\n    days: [\"vasárnap\", \"hétfő\", \"kedd\", \"szerda\", \"csütörtök\", \"péntek\", \"szombat\"],\n    shortDays: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\n    months: [\"január\", \"február\", \"március\", \"április\", \"május\", \"június\", \"július\", \"augusztus\", \"szeptember\", \"október\", \"november\", \"december\"],\n    shortMonths: [\"jan.\", \"feb.\", \"már.\", \"ápr.\", \"máj.\", \"jún.\", \"júl.\", \"aug.\", \"szept.\", \"okt.\", \"nov.\", \"dec.\"]\n  });\n\n  var itIT = locale$1({\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  });\n\n  var jaJP = locale$1({\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  });\n\n  var koKR = locale$1({\n    dateTime: \"%Y/%m/%d %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"오전\", \"오후\"],\n    days: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n    shortDays: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n    months: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n    shortMonths: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"]\n  });\n\n  var mkMK = locale$1({\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  });\n\n  var nlNL = locale$1({\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  });\n\n  var plPL = locale$1({\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  });\n\n  var ptBR = locale$1({\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  });\n\n  var ruRU = locale$1({\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  });\n\n  var svSE = locale$1({\n    dateTime: \"%A den %d %B %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"fm\", \"em\"],\n    days: [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"],\n    shortDays: [\"Sön\", \"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\"],\n    months: [\"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"]\n  });\n\n  var zhCN = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  });\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : locale.utcFormat(isoSpecifier);\n\n  var format = locale.format;\n  var utcFormat = locale.utcFormat;\n\n  var version = \"0.2.1\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.utcFormat = utcFormat;\n  exports.locale = locale$1;\n  exports.localeCaEs = caES;\n  exports.localeDeCh = deCH;\n  exports.localeDeDe = deDE;\n  exports.localeEnCa = enCA;\n  exports.localeEnGb = enGB;\n  exports.localeEnUs = locale;\n  exports.localeEsEs = esES;\n  exports.localeFiFi = fiFI;\n  exports.localeFrCa = frCA;\n  exports.localeFrFr = frFR;\n  exports.localeHeIl = heIL;\n  exports.localeHuHu = huHU;\n  exports.localeItIt = itIT;\n  exports.localeJaJp = jaJP;\n  exports.localeKoKr = koKR;\n  exports.localeMkMk = mkMK;\n  exports.localeNlNl = nlNL;\n  exports.localePlPl = plPL;\n  exports.localePtBr = ptBR;\n  exports.localeRuRu = ruRU;\n  exports.localeSvSe = svSE;\n  exports.localeZhCn = zhCN;\n  exports.isoFormat = formatIso;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time-format/build/d3-time-format.js\n// module id = bZsP\n// module chunks = 0","\"use strict\";\n(function (AxisOrient) {\n    AxisOrient[AxisOrient[\"TOP\"] = 'top'] = \"TOP\";\n    AxisOrient[AxisOrient[\"RIGHT\"] = 'right'] = \"RIGHT\";\n    AxisOrient[AxisOrient[\"LEFT\"] = 'left'] = \"LEFT\";\n    AxisOrient[AxisOrient[\"BOTTOM\"] = 'bottom'] = \"BOTTOM\";\n})(exports.AxisOrient || (exports.AxisOrient = {}));\nvar AxisOrient = exports.AxisOrient;\nexports.defaultAxisConfig = {\n    offset: undefined,\n    grid: undefined,\n    labels: true,\n    labelMaxLength: 25,\n    tickSize: undefined,\n    characterWidth: 6\n};\nexports.defaultFacetAxisConfig = {\n    axisWidth: 0,\n    labels: true,\n    grid: false,\n    tickSize: 0\n};\n//# sourceMappingURL=axis.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/axis.js\n// module id = cihr\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: 'field'},\n    lat: {type: 'field'}\n  });\n\n  this._output = {\n    'x': 'layout_x',\n    'y': 'layout_y'\n  };\n  return this.mutates(true);\n}\n\nGeo.Parameters = {\n  projection: {type: 'value', default: 'mercator'},\n  center:     {type: 'array<value>'},\n  translate:  {type: 'array<value>', default: require('./screen').center},\n  rotate:     {type: 'array<value>'},\n  scale:      {type: 'value'},\n  precision:  {type: 'value'},\n  clipAngle:  {type: 'value'},\n  clipExtent: {type: 'value'}\n};\n\nGeo.d3Projection = function() {\n  var p = this.param('projection'),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === 'projection' || !proj[name]) continue;\n    value = this.param(name);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar prototype = (Geo.prototype = Object.create(Transform.prototype));\nprototype.constructor = Geo;\n\nprototype.transform = function(input) {\n  log.debug(input, ['geo']);\n\n  var output = this._output,\n      lon = this.param('lon').accessor,\n      lat = this.param('lat').accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll) || [null, null];\n    Tuple.set(t, output.x, xy[0]);\n    Tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\nGeo.baseSchema = {\n  \"projection\": {\n    \"description\": \"The type of cartographic projection to use.\",\n    \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n    \"default\": \"mercator\"\n  },\n  \"center\": {\n    \"description\": \"The center of the projection.\",\n    \"oneOf\": [\n      {\n        \"type\": \"array\",\n        \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n        \"minItems\": 2,\n        \"maxItems\": 2\n      },\n      {\"$ref\": \"#/refs/signal\"}\n    ]\n  },\n  \"translate\": {\n    \"description\": \"The translation of the projection.\",\n    \"oneOf\": [\n      {\n        \"type\": \"array\",\n        \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n        \"minItems\": 2,\n        \"maxItems\": 2\n      },\n      {\"$ref\": \"#/refs/signal\"}\n    ]\n  },\n  \"rotate\": {\n    \"description\": \"The rotation of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"scale\": {\n    \"description\": \"The scale of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"precision\": {\n    \"description\": \"The desired precision of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"clipAngle\": {\n    \"description\": \"The clip angle of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"clipExtent\": {\n    \"description\": \"The clip extent of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  }\n};\n\nGeo.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Geo transform\",\n  \"description\": \"Performs a cartographic projection. Given longitude and latitude values, sets corresponding x and y properties for a mark.\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({\n    \"type\": {\"enum\": [\"geo\"]},\n    \"lon\": {\n      \"description\": \"The input longitude values.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"lat\": {\n      \"description\": \"The input latitude values.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"}\n      },\n      \"additionalProperties\": false\n    }\n  }, Geo.baseSchema),\n  \"required\": [\"type\", \"lon\", \"lat\"],\n  \"additionalProperties\": false\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Geo.js\n// module id = ct8e\n// module chunks = 0","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/json.js\n// module id = cwb4\n// module chunks = 0","// Path parsing and rendering code adapted from fabric.js -- Thanks!\nvar cmdlen = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    regexp = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)([-+])/g, /\\s|,|###/];\n\nmodule.exports = function(pathstr) {\n  var result = [],\n      path,\n      curr,\n      chunks,\n      parsed, param,\n      cmd, len, i, j, n, m;\n\n  // First, break path into command sequence\n  path = pathstr\n    .slice()\n    .replace(regexp[0], '###$1')\n    .split(regexp[1])\n    .slice(1);\n\n  // Next, parse each command in turn\n  for (i=0, n=path.length; i<n; ++i) {\n    curr = path[i];\n    chunks = curr\n      .slice(1)\n      .trim()\n      .replace(regexp[2],'$1###$2')\n      .split(regexp[3]);\n    cmd = curr.charAt(0);\n\n    parsed = [cmd];\n    for (j=0, m=chunks.length; j<m; ++j) {\n      if ((param = +chunks[j]) === param) { // not NaN\n        parsed.push(param);\n      }\n    }\n\n    len = cmdlen[cmd.toLowerCase()];\n    if (parsed.length-1 > len) {\n      for (j=1, m=parsed.length; j<m; j+=len) {\n        result.push([cmd].concat(parsed.slice(j, j+len)));\n      }\n    }\n    else {\n      result.push(parsed);\n    }\n  }\n\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/parse.js\n// module id = eJnU\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render'),\n    linePath = require('../../../util/svg').path.line;\n    \nfunction path(g, items) {\n  var o = items[0],\n      p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  render(g, p);\n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  var items = scene.items,\n      b = scene.bounds;\n\n  if (!items || !items.length || b && !b.contains(gx, gy)) {\n    return null;\n  }\n\n  if (g.pixelratio != null && g.pixelratio !== 1) {\n    x *= g.pixelratio;\n    y *= g.pixelratio;\n  }\n  return hit(g, items, x, y) ? items[0] : null;\n}\n\nvar hit = util.testPath(path, false);\n\nmodule.exports = {\n  draw: util.drawOne(path),\n  pick: pick,\n  nested: true\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/line.js\n// module id = eVGq\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Lookup(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    on:      {type: 'data'},\n    onKey:   {type: 'field', default: null},\n    as:      {type: 'array<value>'},\n    keys:    {type: 'array<field>', default: ['data']},\n    default: {type: 'value'}\n  });\n\n  return this.mutates(true);\n}\n\nvar prototype = (Lookup.prototype = Object.create(Transform.prototype));\nprototype.constructor = Lookup;\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['lookup']);\n\n  var on = this.param('on'),\n      onLast = on.source.last(),\n      onData = on.source.values(),\n      onKey = this.param('onKey'),\n      onF = onKey.field,\n      keys = this.param('keys'),\n      get = keys.accessor,\n      as = this.param('as'),\n      defaultValue = this.param('default'),\n      lut = this._lut,\n      i, v;\n\n  // build lookup table on init, withKey modified, or tuple add/rem\n  if (lut == null || this._on !== onF || onF && onLast.fields[onF] ||\n      onLast.add.length || onLast.rem.length)\n  {\n    if (onF) { // build hash from withKey field\n      onKey = onKey.accessor;\n      for (lut={}, i=0; i<onData.length; ++i) {\n        lut[onKey(v = onData[i])] = v;\n      }\n    } else { // otherwise, use index-based lookup\n      lut = onData;\n    }\n    this._lut = lut;\n    this._on = onF;\n    reset = true;\n  }\n\n  function set(t) {\n    for (var i=0; i<get.length; ++i) {\n      var v = lut[get[i](t)] || defaultValue;\n      Tuple.set(t, as[i], v);\n    }\n  }\n\n  input.add.forEach(set);\n  var run = keys.field.some(function(f) { return input.fields[f]; });\n  if (run || reset) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  as.forEach(function(k) { input.fields[k] = 1; });\n  return input;\n};\n\nmodule.exports = Lookup;\n\nLookup.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Lookup transform\",\n  \"description\": \"Extends a data set by looking up values in another data set.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"lookup\"]},\n    \"on\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the secondary data set on which to lookup values.\"\n    },\n    \"onKey\": {\n      \"description\": \"The key field to lookup, or null for index-based lookup.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"keys\": {\n      \"description\": \"One or more fields in the primary data set to match against the secondary data set.\",\n      \"type\": \"array\",\n      \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n    },\n    \"as\": {\n      \"type\": \"array\",\n      \"description\": \"The names of the fields in which to store looked-up values.\",\n      \"items\": {\"type\": \"string\"}\n    },\n    \"default\": {\n      // \"type\": \"any\",\n      \"description\": \"The default value to use if a lookup match fails.\"\n    }\n  },\n  \"required\": [\"type\", \"on\", \"as\", \"keys\"],\n  \"additionalProperties\": false\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Lookup.js\n// module id = ec8D\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Treeify(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'}\n  });\n\n  this._output = {\n    'children': 'children',\n    'parent':   'parent'\n  };\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Treeify.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Treeify;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['treeifying']);\n\n  var fields = this.param('groupby').field,\n      childField = this._output.children,\n      parentField = this._output.parent,\n      summary = [{name:'*', ops: ['values'], as: [childField]}],\n      aggrs = fields.map(function(f) {\n        return dl.groupby(f).summarize(summary);\n      }),\n      prev = this._internal || [], curr = [], i, n;\n\n  function level(index, node, values) {\n    var vals = aggrs[index].execute(values);\n\n    node[childField] = vals;\n    vals.forEach(function(n) {\n      n[parentField] = node;\n      curr.push(Tuple.ingest(n));\n      if (index+1 < fields.length) level(index+1, n, n[childField]);\n      else n[childField].forEach(function(c) { c[parentField] = n; });\n    });\n  }\n\n  var root = Tuple.ingest({});\n  root[parentField] = null;\n  curr.push(root);\n  level(0, root, data);\n\n  // update changeset with internal nodes\n  for (i=0, n=curr.length; i<n; ++i) {\n    input.add.push(curr[i]);\n  }\n  for (i=0, n=prev.length; i<n; ++i) {\n    input.rem.push(prev[i]);\n  }\n  this._internal = curr;\n\n  return input;\n};\n\nmodule.exports = Treeify;\n\nTreeify.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Treeify transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"treeify\"]},\n    \"groupby\": {\n      \"description\": \"An ordered list of fields by which to group tuples into a tree.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"children\": {\"type\": \"string\", \"default\": \"children\"},\n        \"parent\": {\"type\": \"string\", \"default\": \"parent\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Treeify.js\n// module id = ei6W\n// module chunks = 0","var DEPS = require('./Dependencies').ALL;\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.dirty = a ? a.dirty : [];\n  b.request = a ? a.request : null;\n  for (var d, i=0, n=DEPS.length; i<n; ++i) {\n    b[d=DEPS[i]] = a ? a[d] : {};\n  }\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/ChangeSet.js\n// module id = ekYZ\n// module chunks = 0","var util = require('./util');\nvar halfpi = Math.PI / 2;\n\nfunction path(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/arc.js\n// module id = evf9\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nvar encoding_1 = require('./encoding');\nvar mark_1 = require('./mark');\nvar util_1 = require('./util');\n(function (StackOffset) {\n    StackOffset[StackOffset[\"ZERO\"] = 'zero'] = \"ZERO\";\n    StackOffset[StackOffset[\"CENTER\"] = 'center'] = \"CENTER\";\n    StackOffset[StackOffset[\"NORMALIZE\"] = 'normalize'] = \"NORMALIZE\";\n    StackOffset[StackOffset[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.StackOffset || (exports.StackOffset = {}));\nvar StackOffset = exports.StackOffset;\nfunction stack(mark, encoding, config) {\n    var stacked = (config && config.mark) ? config.mark.stacked : undefined;\n    if (util_1.contains([StackOffset.NONE, null, false], stacked)) {\n        return null;\n    }\n    if (!util_1.contains([mark_1.BAR, mark_1.AREA], mark)) {\n        return null;\n    }\n    if (!encoding_1.isAggregate(encoding)) {\n        return null;\n    }\n    var stackByChannels = channel_1.STACK_GROUP_CHANNELS.reduce(function (sc, channel) {\n        if (encoding_1.has(encoding, channel) && !encoding[channel].aggregate) {\n            sc.push(channel);\n        }\n        return sc;\n    }, []);\n    if (stackByChannels.length === 0) {\n        return null;\n    }\n    var hasXField = encoding_1.has(encoding, channel_1.X);\n    var hasYField = encoding_1.has(encoding, channel_1.Y);\n    var xIsAggregate = hasXField && !!encoding.x.aggregate;\n    var yIsAggregate = hasYField && !!encoding.y.aggregate;\n    if (xIsAggregate !== yIsAggregate) {\n        return {\n            groupbyChannel: xIsAggregate ? (hasYField ? channel_1.Y : null) : (hasXField ? channel_1.X : null),\n            fieldChannel: xIsAggregate ? channel_1.X : channel_1.Y,\n            stackByChannels: stackByChannels,\n            offset: stacked || StackOffset.ZERO\n        };\n    }\n    return null;\n}\nexports.stack = stack;\n//# sourceMappingURL=stack.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/stack.js\n// module id = f2i1\n// module chunks = 0","var dl = require('datalib'),\n    Deps = require('vega-dataflow').Dependencies;\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i,\n    valType   = /value/i;\n\nfunction Parameter(name, type, transform) {\n  this._name = name;\n  this._type = type;\n  this._transform = transform;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = [];\n}\n\nvar prototype = Parameter.prototype;\n\nfunction get() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  var val = isArray ? this._value : this._value[0],\n      acc = isArray ? this._accessors : this._accessors[0];\n\n  if (!dl.isValid(acc) && valType.test(this._type)) {\n    return val;\n  } else {\n    return isData ? { name: val, source: acc } :\n    isField ? { field: val, accessor: acc } : val;\n  }\n}\n\nprototype.get = function() {\n  var graph = this._transform._graph,\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      i, n, sig, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return get.call(this);\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return get.call(this); // TODO: support signal as dataTypes\n  }\n\n  for (i=0, n=this._signals.length; i<n; ++i) {\n    sig = this._signals[i];\n    idx = sig.index;\n    val = sig.value(graph);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ?\n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return get.call(this);\n};\n\nprototype.set = function(value) {\n  var p = this,\n      graph = p._transform._graph,\n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  p._signals = [];\n  this._value = dl.array(value).map(function(v, i) {\n    var e;\n    if (dl.isString(v)) {\n      if (isExpr) {\n        e = graph.expr(v);\n        p._transform.dependency(Deps.FIELDS,  e.fields);\n        p._transform.dependency(Deps.SIGNALS, e.globals);\n        p._transform.dependency(Deps.DATA,    e.dataSources);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        p._accessors[i] = dl.accessor(v);\n        p._transform.dependency(Deps.FIELDS, dl.field(v));\n      } else if (isData) {\n        p._resolution = true;\n        p._transform.dependency(Deps.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      p._accessors[i] = dl.accessor(v.field);\n      p._transform.dependency(Deps.FIELDS, dl.field(v.field));\n      return v.field;\n    } else if (v.signal !== undefined) {\n      p._resolution = true;\n      p._transform.dependency(Deps.SIGNALS, dl.field(v.signal)[0]);\n      p._signals.push({\n        index: i,\n        value: function(graph) { return graph.signalRef(v.signal); }\n      });\n      return v.signal;\n    } else if (v.expr !== undefined) {\n      p._resolution = true;\n      e = graph.expr(v.expr);\n      p._transform.dependency(Deps.SIGNALS, e.globals);\n      p._signals.push({\n        index: i,\n        value: function() { return e.fn(); }\n      });\n      return v.expr;\n    }\n\n    return v;\n  });\n\n  return p._transform;\n};\n\nmodule.exports = Parameter;\n\n// Schema for field|value-type parameters.\nParameter.schema = {\n  \"type\": \"object\",\n  \"oneOf\": [{\n    \"properties\": {\"field\": {\"type\": \"string\"}},\n    \"required\": [\"field\"]\n  }, {\n    \"properties\": {\"value\": {\"type\": \"string\"}},\n    \"required\": [\"value\"]\n  }]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Parameter.js\n// module id = fRRI\n// module chunks = 0","var d3 = require('d3');\n\nfunction parseBg(bg) {\n  // return null if input is null or undefined\n  if (bg == null) return null;\n  // run through d3 rgb to sanity check\n  return d3.rgb(bg) + '';\n}\n\nmodule.exports = parseBg;\n\nparseBg.schema = {\"defs\": {\"background\": {\"type\": \"string\"}}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/background.js\n// module id = fxxq\n// module chunks = 0","function drawPathOne(path, g, o, items) {\n  if (path(g, items)) return;\n\n  var opac = o.opacity == null ? 1 : o.opacity;\n  if (opac===0) return;\n\n  if (o.fill && fill(g, o, opac)) { g.fill(); }\n  if (o.stroke && stroke(g, o, opac)) { g.stroke(); }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (!bounds || bounds.intersects(item.bounds)) {\n      drawPathOne(path, g, item, item);\n    }\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  };\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (!bounds || bounds.intersects(scene.bounds)) {\n      drawPathOne(pathFunc, g, scene.items[0], scene.items);\n    }\n  };\n}\n\nvar trueFunc = function() { return true; };\n\nfunction pick(test) {\n  if (!test) test = trueFunc;\n\n  return function(g, scene, x, y, gx, gy) {\n    if (!scene.items.length) return null;\n\n    var o, b, i;\n\n    if (g.pixelratio != null && g.pixelratio !== 1) {\n      x *= g.pixelratio;\n      y *= g.pixelratio;\n    }\n\n    for (i=scene.items.length; --i >= 0;) {\n      o = scene.items[i]; b = o.bounds;\n      // first hit test against bounding box\n      if ((b && !b.contains(gx, gy)) || !b) continue;\n      // if in bounding box, perform more careful test\n      if (test(g, o, x, y, gx, gy)) return o;\n    }\n    return null;\n  };\n}\n\nfunction testPath(path, filled) {\n  return function(g, o, x, y) {\n    var item = Array.isArray(o) ? o[0] : o,\n        fill = (filled == null) ? item.fill : filled,\n        stroke = item.stroke && g.isPointInStroke, lw, lc;\n\n    if (stroke) {\n      lw = item.strokeWidth;\n      lc = item.strokeCap;\n      g.lineWidth = lw != null ? lw : 1;\n      g.lineCap   = lc != null ? lc : 'butt';\n    }\n\n    return path(g, o) ? false :\n      (fill && g.isPointInPath(x, y)) ||\n      (stroke && g.isPointInStroke(x, y));\n  };\n}\n\nfunction pickPath(path) {\n  return pick(testPath(path));\n}\n\nfunction fill(g, o, opacity) {\n  opacity *= (o.fillOpacity==null ? 1 : o.fillOpacity);\n  if (opacity > 0) {\n    g.globalAlpha = opacity;\n    g.fillStyle = color(g, o, o.fill);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stroke(g, o, opacity) {\n  var lw = (lw = o.strokeWidth) != null ? lw : 1, lc;\n  if (lw <= 0) return false;\n\n  opacity *= (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n  if (opacity > 0) {\n    g.globalAlpha = opacity;\n    g.strokeStyle = color(g, o, o.stroke);\n    g.lineWidth = lw;\n    g.lineCap = (lc = o.strokeCap) != null ? lc : 'butt';\n    g.vgLineDash(o.strokeDash || null);\n    g.vgLineDashOffset(o.strokeDashOffset || 0);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction color(g, o, value) {\n  return (value.id) ?\n    gradient(g, value, o.bounds) :\n    value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\nmodule.exports = {\n  drawOne:  drawOne,\n  drawAll:  drawAll,\n  pick:     pick,\n  pickPath: pickPath,\n  testPath: testPath,\n  stroke:   stroke,\n  fill:     fill,\n  color:    color,\n  gradient: gradient\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/util.js\n// module id = gWW/\n// module chunks = 0","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x == null || x === '' ? null : x + ''; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction fieldNames(datum) {\n  return util.keys(datum);\n}\n\nfunction bracket(fieldName) {\n  return '[' + fieldName + ']';\n}\n\nfunction type(values, f) {\n  values = util.array(values);\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  var get = fields ? util.identity : (fields = fieldNames(data[0]), bracket);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, get(f)), types);\n  }, {});\n}\n\nfunction infer(values, f, ignore) {\n  values = util.array(values);\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if ((!ignore || !ignore.test(v)) && util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields, ignore) {\n  var get = fields ? util.identity : (fields = fieldNames(data[0]), bracket);\n  return fields.reduce(function(types, f) {\n    types[f] = infer(data, get(f), ignore);\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/type.js\n// module id = ggRp\n// module chunks = 0","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) { callback(error, null); return; }\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n          callback(null, data);\n        } catch (e) {\n          callback(e, null);\n        }\n      } : undefined);\n\n      // data loaded, now parse it (sync)\n      if (!callback) return read(data, format);\n    };\n    return out;\n  }, {});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/readers.js\n// module id = gjoU\n// module chunks = 0","var tupleID = 0;\n\nfunction ingest(datum) {\n  datum = (datum === Object(datum)) ? datum : {data: datum};\n  datum._id = ++tupleID;\n  if (datum._prev) datum._prev = null;\n  return datum;\n}\n\nfunction idMap(a, ids) {\n  ids = ids || {};\n  for (var i=0, n=a.length; i<n; ++i) {\n    ids[a[i]._id] = 1;\n  }\n  return ids;\n}\n\nfunction copy(t, c) {\n  c = c || {};\n  for (var k in t) {\n    if (k !== '_prev' && k !== '_id') c[k] = t[k];\n  }\n  return c;\n}\n\nmodule.exports = {\n  ingest: ingest,\n  idMap: idMap,\n\n  derive: function(d) {\n    return ingest(copy(d));\n  },\n\n  rederive: function(d, t) {\n    return copy(d, t);\n  },\n\n  set: function(t, k, v) {\n    return t[k] === v ? 0 : (t[k] = v, 1);\n  },\n\n  prev: function(t) {\n    return t._prev || t;\n  },\n\n  prev_init: function(t) {\n    if (!t._prev) { t._prev = {_id: t._id}; }\n  },\n\n  prev_update: function(t) {\n    var p = t._prev, k, v;\n    if (p) for (k in t) {\n      if (k !== '_prev' && k !== '_id') {\n        p[k] = ((v=t[k]) instanceof Object && v._prev) ? v._prev : v;\n      }\n    }\n  },\n\n  reset: function() { tupleID = 0; },\n\n  idFilter: function(data) {\n    var ids = {};\n    for (var i=arguments.length; --i>0;) {\n      idMap(arguments[i], ids);\n    }\n    return data.filter(function(x) { return !ids[x._id]; });\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/Tuple.js\n// module id = gtuQ\n// module chunks = 0","\"use strict\";\n(function (AggregateOp) {\n    AggregateOp[AggregateOp[\"VALUES\"] = 'values'] = \"VALUES\";\n    AggregateOp[AggregateOp[\"COUNT\"] = 'count'] = \"COUNT\";\n    AggregateOp[AggregateOp[\"VALID\"] = 'valid'] = \"VALID\";\n    AggregateOp[AggregateOp[\"MISSING\"] = 'missing'] = \"MISSING\";\n    AggregateOp[AggregateOp[\"DISTINCT\"] = 'distinct'] = \"DISTINCT\";\n    AggregateOp[AggregateOp[\"SUM\"] = 'sum'] = \"SUM\";\n    AggregateOp[AggregateOp[\"MEAN\"] = 'mean'] = \"MEAN\";\n    AggregateOp[AggregateOp[\"AVERAGE\"] = 'average'] = \"AVERAGE\";\n    AggregateOp[AggregateOp[\"VARIANCE\"] = 'variance'] = \"VARIANCE\";\n    AggregateOp[AggregateOp[\"VARIANCEP\"] = 'variancep'] = \"VARIANCEP\";\n    AggregateOp[AggregateOp[\"STDEV\"] = 'stdev'] = \"STDEV\";\n    AggregateOp[AggregateOp[\"STDEVP\"] = 'stdevp'] = \"STDEVP\";\n    AggregateOp[AggregateOp[\"MEDIAN\"] = 'median'] = \"MEDIAN\";\n    AggregateOp[AggregateOp[\"Q1\"] = 'q1'] = \"Q1\";\n    AggregateOp[AggregateOp[\"Q3\"] = 'q3'] = \"Q3\";\n    AggregateOp[AggregateOp[\"MODESKEW\"] = 'modeskew'] = \"MODESKEW\";\n    AggregateOp[AggregateOp[\"MIN\"] = 'min'] = \"MIN\";\n    AggregateOp[AggregateOp[\"MAX\"] = 'max'] = \"MAX\";\n    AggregateOp[AggregateOp[\"ARGMIN\"] = 'argmin'] = \"ARGMIN\";\n    AggregateOp[AggregateOp[\"ARGMAX\"] = 'argmax'] = \"ARGMAX\";\n})(exports.AggregateOp || (exports.AggregateOp = {}));\nvar AggregateOp = exports.AggregateOp;\nexports.AGGREGATE_OPS = [\n    AggregateOp.VALUES,\n    AggregateOp.COUNT,\n    AggregateOp.VALID,\n    AggregateOp.MISSING,\n    AggregateOp.DISTINCT,\n    AggregateOp.SUM,\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.VARIANCE,\n    AggregateOp.VARIANCEP,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MODESKEW,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n    AggregateOp.ARGMIN,\n    AggregateOp.ARGMAX,\n];\nexports.SUM_OPS = [\n    AggregateOp.COUNT,\n    AggregateOp.SUM,\n    AggregateOp.DISTINCT\n];\nexports.SHARED_DOMAIN_OPS = [\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n];\n//# sourceMappingURL=aggregate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/aggregate.js\n// module id = h/tW\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    log = require('vega-logging'),\n    Tuple = require('vega-dataflow').Tuple;\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction properties(model, mark, spec) {\n  var config = model.config(),\n      code = \"\",\n      names = dl.keys(spec),\n      exprs = [], // parsed expressions injected in the generated code\n      i, len, name, ref, vars = {},\n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        nested:  [],\n        _nRefs:  {},  // Temp stash to de-dupe nested refs.\n        reflow:  false\n      };\n\n  code += \"var o = trans ? {} : item, d=0, exprs=this.exprs, set=this.tpl.set, tmpl=signals||{}, t;\\n\" +\n          // Stash for dl.template\n          \"tmpl.datum  = item.datum;\\n\" +\n          \"tmpl.group  = group;\\n\" +\n          \"tmpl.parent = group.datum;\\n\";\n\n  function handleDep(p) {\n    if (ref[p] == null) return;\n    var k = dl.array(ref[p]), i, n;\n    for (i=0, n=k.length; i<n; ++i) {\n      deps[p][k[i]] = 1;\n    }\n  }\n\n  function handleNestedRefs(r) {\n    var k = (r.parent ? \"parent_\" : \"group_\")+r.level;\n    deps._nRefs[k] = r;\n  }\n\n  parseShape(model, config, spec);\n\n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if (ref.rule) {\n      // a production rule valueref\n      ref = rule(model, name, ref.rule, exprs);\n      code += \"\\n  \" + ref.code;\n    } else if (dl.isArray(ref)) {\n      // a production rule valueref as an array\n      ref = rule(model, name, ref, exprs);\n      code += \"\\n  \" + ref.code;\n    } else {\n      // a simple valueref\n      ref = valueRef(config, name, ref);\n      code += \"d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(handleDep);\n    deps.reflow = deps.reflow || ref.reflow;\n    if (ref.nested.length) ref.nested.forEach(handleNestedRefs);\n  }\n\n  // If nested references are present, sort them based on their level\n  // to speed up determination of whether encoders should be reeval'd.\n  dl.keys(deps._nRefs).forEach(function(k) { deps.nested.push(deps._nRefs[k]); });\n  deps.nested.sort(function(a, b) {\n    a = a.level;\n    b = b.level;\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  });\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \" +\n              \"\\n    t = o.x;\" +\n              \"\\n    d += set(o, 'x', o.x2);\" +\n              \"\\n    d += set(o, 'x2', t); \" +\n              \"\\n  };\";\n      code += \"\\n  d += set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  d += set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  d += set(o, 'x', o.x2);\";\n    }\n  }\n\n  if (vars.xc) {\n    if (vars.width) {\n      code += \"\\n  d += set(o, 'x', (o.xc - o.width/2));\" ;\n    } else {\n      code += \"\\n  d += set(o, 'x', o.xc);\" ;\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \" +\n              \"\\n    t = o.y;\" +\n              \"\\n    d += set(o, 'y', o.y2);\" +\n              \"\\n    d += set(o, 'y2', t);\" +\n              \"\\n  };\";\n      code += \"\\n  d += set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  d += set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  d += set(o, 'y', o.y2);\";\n    }\n  }\n\n  if (vars.yc) {\n    if (vars.height) {\n      code += \"\\n  d += set(o, 'y', (o.yc - o.height/2));\" ;\n    } else {\n      code += \"\\n  d += set(o, 'y', o.yc);\" ;\n    }\n  }\n\n  if (hasPath(mark, vars)) code += \"\\n  d += (item.touch(), 1);\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n  code += \"\\n  return d > 0;\";\n\n  try {\n    /* jshint evil:true */\n    var encoder = Function('item', 'group', 'trans', 'db',\n      'signals', 'predicates', code);\n\n    encoder.tpl  = Tuple;\n    encoder.exprs = exprs;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    dl.extend(encoder, dl.template.context);\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      nested:  deps.nested,\n      reflow:  deps.reflow\n    };\n  } catch (e) {\n    log.error(e);\n    log.log(code);\n  }\n}\n\nfunction dependencies(a, b) {\n  if (!dl.isObject(a)) {\n    a = {reflow: false, nested: []};\n    DEPS.forEach(function(d) { a[d] = []; });\n  }\n\n  if (dl.isObject(b)) {\n    a.reflow = a.reflow || b.reflow;\n    a.nested.push.apply(a.nested, b.nested);\n    DEPS.forEach(function(d) { a[d].push.apply(a[d], b[d]); });\n  }\n\n  return a;\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark==='area' || mark==='line') &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar hb = /{{(.*?)}}/g;\nfunction parseShape(model, config, spec) {\n  var shape = spec.shape,\n      last = 0,\n      value, match;\n\n  if (shape && (value = shape.value)) {\n    if (config.shape && config.shape[value]) {\n      value = config.shape[value];\n    }\n\n    // Parse handlebars\n    shape = '';\n    while ((match = hb.exec(value)) !== null) {\n      shape += value.substring(last, match.index);\n      shape += model.expr(match[1]).fn();\n      last = hb.lastIndex;\n    }\n    spec.shape.value = shape + value.substring(last);\n  }\n}\n\nfunction rule(model, name, rules, exprs) {\n  var config  = model.config(),\n      deps = dependencies(),\n      inputs  = [],\n      code = '';\n\n  (rules||[]).forEach(function(r, i) {\n    var ref = valueRef(config, name, r);\n    dependencies(deps, ref);\n\n    if (r.test) {\n      // rule uses an expression instead of a predicate.\n      var exprFn = model.expr(r.test);\n      deps.signals.push.apply(deps.signals, exprFn.globals);\n      deps.data.push.apply(deps.data, exprFn.dataSources);\n\n      code += \"if (exprs[\" + exprs.length + \"](item.datum, item.mark.group.datum, null)) {\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \" +ref.val+\");\";\n      code += rules[i+1] ? \"\\n  } else \" : \"  }\";\n\n      exprs.push(exprFn.fn);\n    } else {\n      var def = r.predicate,\n          predName = def && (def.name || def),\n          pred = model.predicate(predName),\n          p = 'predicates['+dl.str(predName)+']',\n          input = [], args = name+'_arg'+i;\n\n      if (dl.isObject(def)) {\n        dl.keys(def).forEach(function(k) {\n          if (k === 'name') return;\n          var ref = valueRef(config, i, def[k], true);\n          input.push(dl.str(k)+': '+ref.val);\n          dependencies(deps, ref);\n        });\n      }\n\n      if (predName) {\n        // append the predicates dependencies to our dependencies\n        deps.signals.push.apply(deps.signals, pred.signals);\n        deps.data.push.apply(deps.data, pred.data);\n        inputs.push(args+\" = {\\n    \"+input.join(\",\\n    \")+\"\\n  }\");\n        code += \"if (\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n        code += rules[i+1] ? \"\\n  } else \" : \"  }\";\n      } else {\n        code += \"{\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\"+\n          \"\\n  }\\n\";\n      }\n    }\n  });\n\n  if (inputs.length) code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return (deps.code = code, deps);\n}\n\nfunction valueRef(config, name, ref, predicateArg) {\n  if (ref == null) return null;\n\n  if (name==='fill' || name==='stroke') {\n    if (ref.c) {\n      return colorRef(config, 'hcl', ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(config, 'hsl', ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(config, 'lab', ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(config, 'rgb', ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null,\n      deps = dependencies(),\n      sgRef = null, fRef = null, sRef = null, tmpl = {};\n\n  if (ref.template !== undefined) {\n    val = dl.template.source(ref.template, 'tmpl', tmpl);\n    dl.keys(tmpl).forEach(function(k) {\n      var f = dl.field(k),\n          a = f.shift();\n      if (a === 'parent' || a === 'group') {\n        deps.nested.push({\n          parent: a === 'parent',\n          group:  a === 'group',\n          level:  1\n        });\n      } else if (a === 'datum') {\n        deps.fields.push(f[0]);\n      } else {\n        deps.signals.push(a);\n      }\n    });\n  }\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = 'signals['+sgRef.map(dl.str).join('][')+']';\n    deps.signals.push(sgRef.shift());\n  }\n\n  if (ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef = fieldRef(ref.field);\n    val  = fRef.val;\n    dependencies(deps, fRef);\n  }\n\n  if (ref.scale !== undefined) {\n    sRef  = scaleRef(ref.scale);\n    scale = sRef.val;\n    dependencies(deps, sRef);\n    deps.scales.push(ref.scale.name || ref.scale);\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if (val !== null || ref.band || ref.mult || ref.offset || !predicateArg) {\n      val = scale + (ref.band ? '.rangeBand()' :\n        '('+(val !== null ? val : 'item.datum.data')+')');\n    } else if (predicateArg) {\n      val = scale;\n    }\n  }\n\n  // multiply, offset, return value\n  val = '(' + (ref.mult?(dl.number(ref.mult)+' * '):'') + val + ')' +\n        (ref.offset ? ' + ' + dl.number(ref.offset) : '');\n\n  // Collate dependencies\n  return (deps.val = val, deps);\n}\n\nfunction colorRef(config, type, x, y, z) {\n  var xx = x ? valueRef(config, '', x) : config.color[type][0],\n      yy = y ? valueRef(config, '', y) : config.color[type][1],\n      zz = z ? valueRef(config, '', z) : config.color[type][2],\n      deps = dependencies();\n\n  [xx, yy, zz].forEach(function(v) {\n    if (dl.isArray) return;\n    dependencies(deps, v);\n  });\n\n  var val = '(this.d3.' + type + '(' + [xx.val, yy.val, zz.val].join(',') + ') + \"\")';\n  return (deps.val = val, deps);\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if (dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join('][')};\n  }\n\n  // Resolve nesting/parent lookups\n  var l = ref.level || 1,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join('group.mark.') : '',\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      deps = dependencies(null, r);\n\n  if (ref.datum) {\n    val = 'item.datum['+val+']';\n    deps.fields.push(ref.datum);\n  } else if (ref.group) {\n    val = scope+'group['+val+']';\n    deps.nested.push({ level: l, group: true });\n  } else if (ref.parent) {\n    val = scope+'group.datum['+val+']';\n    deps.nested.push({ level: l, parent: true });\n  } else if (ref.signal) {\n    val = 'signals['+val+']';\n    deps.signals.push(dl.field(ref.signal)[0]);\n    deps.reflow = true;\n  }\n\n  return (deps.val = val, deps);\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null,\n      deps = dependencies();\n\n  if (dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if (ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = '(item.mark._scaleRefs['+scale+'] = 1, group.scale('+scale+'))';\n  if (ref.invert) scale += '.invert';\n\n  // Mark scale refs as they're dealt with separately in mark._scaleRefs.\n  if (fr) fr.nested.forEach(function(g) { g.scale = true; });\n  return fr ? (fr.val = scale, fr) : (deps.val = scale, deps);\n}\n\nmodule.exports = properties;\n\nfunction valueSchema(type) {\n  type = dl.isArray(type) ? {\"enum\": type} : {\"type\": type};\n  var modType = type.type === \"number\" && type.type || \"string\";\n  var valRef  = {\n    \"type\": \"object\",\n    \"allOf\": [{\"$ref\": \"#/refs/\" + modType + \"Modifiers\"}, {\n      \"oneOf\": [{\n        \"$ref\": \"#/refs/signal\",\n        \"required\": [\"signal\"]\n      }, {\n        \"properties\": {\"value\": type},\n        \"required\": [\"value\"]\n      }, {\n        \"properties\": {\"field\": {\"$ref\": \"#/refs/field\"}},\n        \"required\": [\"field\"]\n      }, {\n        \"properties\": {\"band\": {\"type\": \"boolean\"}},\n        \"required\": [\"band\"]\n      }]\n    }]\n  };\n\n  if (type.type === \"string\") {\n    valRef.allOf[1].oneOf.push({\n      \"properties\": {\"template\": {\"type\": \"string\"}},\n      \"required\": [\"template\"]\n    });\n  }\n\n  return {\n    \"oneOf\": [{\n      \"type\": \"object\",\n      \"properties\": {\n        \"rule\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"allOf\": [{\"$ref\": \"#/defs/rule\"}, valRef]\n          }\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"rule\"]\n    },\n    {\n      \"type\": \"array\",\n      \"items\": {\n        \"allOf\": [{\"$ref\": \"#/defs/rule\"}, valRef]\n      }\n    },\n    valRef]\n  };\n}\n\nproperties.schema = {\n  \"refs\": {\n    \"field\": {\n      \"title\": \"FieldRef\",\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\n          \"oneOf\": [\n            {\"$ref\": \"#/refs/signal\"},\n            {\n              \"type\": \"object\",\n              \"properties\": {\"datum\": {\"$ref\": \"#/refs/field\"}},\n              \"required\": [\"datum\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"group\": {\"$ref\": \"#/refs/field\"},\n                \"level\": {\"type\": \"number\"}\n              },\n              \"required\": [\"group\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"parent\": {\"$ref\": \"#/refs/field\"},\n                \"level\": {\"type\": \"number\"}\n              },\n              \"required\": [\"parent\"],\n              \"additionalProperties\": false\n            }\n          ]\n        }\n      ]\n    },\n\n    \"scale\": {\n      \"title\": \"ScaleRef\",\n      \"oneOf\": [\n        {\"$ref\": \"#/refs/field\"},\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\"$ref\": \"#/refs/field\"},\n            \"invert\": {\"type\": \"boolean\", \"default\": false}\n          },\n          \"required\": [\"name\"]\n        }\n      ]\n    },\n\n    \"stringModifiers\": {\n      \"properties\": {\n        \"scale\": {\"$ref\": \"#/refs/scale\"}\n      }\n    },\n\n    \"numberModifiers\": {\n      \"properties\": {\n        \"mult\": {\"type\": \"number\"},\n        \"offset\": {\"type\": \"number\"},\n        \"scale\": {\"$ref\": \"#/refs/scale\"}\n      }\n    },\n\n    \"value\": valueSchema({}, \"value\"),\n    \"numberValue\": valueSchema(\"number\", \"numberValue\"),\n    \"stringValue\": valueSchema(\"string\", \"stringValue\"),\n    \"booleanValue\": valueSchema(\"boolean\", \"booleanValue\"),\n    \"arrayValue\": valueSchema(\"array\", \"arrayValue\"),\n\n    \"colorValue\": {\n      \"title\": \"ColorRef\",\n      \"oneOf\": [{\"$ref\": \"#/refs/stringValue\"}, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"r\": {\"$ref\": \"#/refs/numberValue\"},\n          \"g\": {\"$ref\": \"#/refs/numberValue\"},\n          \"b\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"r\", \"g\", \"b\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"h\": {\"$ref\": \"#/refs/numberValue\"},\n          \"s\": {\"$ref\": \"#/refs/numberValue\"},\n          \"l\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"h\", \"s\", \"l\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"l\": {\"$ref\": \"#/refs/numberValue\"},\n          \"a\": {\"$ref\": \"#/refs/numberValue\"},\n          \"b\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"l\", \"a\", \"b\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"h\": {\"$ref\": \"#/refs/numberValue\"},\n          \"c\": {\"$ref\": \"#/refs/numberValue\"},\n          \"l\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"h\", \"c\", \"l\"]\n      }]\n    }\n  },\n\n  \"defs\": {\n    \"rule\": {\n      \"anyOf\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"predicate\": {\n              \"oneOf\": [\n                {\"type\": \"string\"},\n                {\n                  \"type\": \"object\",\n                  \"properties\": {\"name\": { \"type\": \"string\" }},\n                  \"required\": [\"name\"]\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\"test\": {\"type\": \"string\"}}\n        }\n      ]\n    },\n    \"propset\": {\n      \"title\": \"Mark property set\",\n      \"type\": \"object\",\n      \"properties\": {\n        // Common Properties\n        \"x\": {\"$ref\": \"#/refs/numberValue\"},\n        \"x2\": {\"$ref\": \"#/refs/numberValue\"},\n        \"xc\": {\"$ref\": \"#/refs/numberValue\"},\n        \"width\": {\"$ref\": \"#/refs/numberValue\"},\n        \"y\": {\"$ref\": \"#/refs/numberValue\"},\n        \"y2\": {\"$ref\": \"#/refs/numberValue\"},\n        \"yc\": {\"$ref\": \"#/refs/numberValue\"},\n        \"height\": {\"$ref\": \"#/refs/numberValue\"},\n        \"opacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"fill\": {\"$ref\": \"#/refs/colorValue\"},\n        \"fillOpacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"stroke\": {\"$ref\": \"#/refs/colorValue\"},\n        \"strokeWidth\": {\"$ref\": \"#/refs/numberValue\"},\n        \"strokeOpacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"strokeDash\": {\"$ref\": \"#/refs/arrayValue\"},\n        \"strokeDashOffset\": {\"$ref\": \"#/refs/numberValue\"},\n        \"cursor\": {\"$ref\": \"#/refs/stringValue\"},\n\n        // Group-mark properties\n        \"clip\": {\"$ref\": \"#/refs/booleanValue\"},\n\n        // Symbol-mark properties\n        \"size\": {\"$ref\": \"#/refs/numberValue\"},\n        \"shape\": {\n          \"anyOf\": [\n            valueSchema([\"circle\", \"square\", \"cross\", \"diamond\",\n              \"triangle-up\", \"triangle-down\"]),\n            {\"$ref\": \"#/refs/stringValue\"}\n          ]\n        },\n\n        // Path-mark properties\n        \"path\": {\"$ref\": \"#/refs/stringValue\"},\n\n        // Arc-mark properties\n        \"innerRadius\": {\"$ref\": \"#/refs/numberValue\"},\n        \"outerRadius\": {\"$ref\": \"#/refs/numberValue\"},\n        \"startAngle\": {\"$ref\": \"#/refs/numberValue\"},\n        \"endAngle\": {\"$ref\": \"#/refs/numberValue\"},\n\n        // Area- and line-mark properties\n        \"interpolate\": valueSchema([\"linear\", \"linear-closed\",\n          \"step\", \"step-before\", \"step-after\",\n          \"basis\", \"basis-open\", \"basis-closed\", \n          \"cardinal\", \"cardinal-open\", \"cardinal-closed\",\n          \"bundle\", \"monotone\"]),\n        \"tension\": {\"$ref\": \"#/refs/numberValue\"},\n        \"orient\": valueSchema([\"horizontal\", \"vertical\"]),\n\n        // Image-mark properties\n        \"url\": {\"$ref\": \"#/refs/stringValue\"},\n        \"align\": valueSchema([\"left\", \"right\", \"center\"]),\n        \"baseline\": valueSchema([\"top\", \"middle\", \"bottom\", \"alphabetic\"]),\n\n        // Text-mark properties\n        \"text\": {\"$ref\": \"#/refs/stringValue\"},\n        \"dx\": {\"$ref\": \"#/refs/numberValue\"},\n        \"dy\": {\"$ref\": \"#/refs/numberValue\"},\n        \"radius\":{\"$ref\": \"#/refs/numberValue\"},\n        \"theta\": {\"$ref\": \"#/refs/numberValue\"},\n        \"angle\": {\"$ref\": \"#/refs/numberValue\"},\n        \"font\": {\"$ref\": \"#/refs/stringValue\"},\n        \"fontSize\": {\"$ref\": \"#/refs/numberValue\"},\n        \"fontWeight\": {\"$ref\": \"#/refs/stringValue\"},\n        \"fontStyle\": {\"$ref\": \"#/refs/stringValue\"}\n      },\n\n      \"additionalProperties\": false\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/properties.js\n// module id = h36N\n// module chunks = 0","\"use strict\";\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar formatParse;\n(function (formatParse) {\n    function parse(model) {\n        var calcFieldMap = (model.transform().calculate || []).reduce(function (fieldMap, formula) {\n            fieldMap[formula.field] = true;\n            return fieldMap;\n        }, {});\n        var parseComponent = {};\n        model.forEach(function (fieldDef) {\n            if (fieldDef.type === type_1.TEMPORAL) {\n                parseComponent[fieldDef.field] = 'date';\n            }\n            else if (fieldDef.type === type_1.QUANTITATIVE) {\n                if (fielddef_1.isCount(fieldDef) || calcFieldMap[fieldDef.field]) {\n                    return;\n                }\n                parseComponent[fieldDef.field] = 'number';\n            }\n        });\n        return parseComponent;\n    }\n    formatParse.parseUnit = parse;\n    function parseFacet(model) {\n        var parseComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.formatParse) {\n            util_1.extend(parseComponent, childDataComponent.formatParse);\n            delete childDataComponent.formatParse;\n        }\n        return parseComponent;\n    }\n    formatParse.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var parseComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.formatParse, parseComponent)) {\n                util_1.extend(parseComponent, childDataComponent.formatParse);\n                delete childDataComponent.formatParse;\n            }\n        });\n        return parseComponent;\n    }\n    formatParse.parseLayer = parseLayer;\n})(formatParse = exports.formatParse || (exports.formatParse = {}));\n//# sourceMappingURL=formatparse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/formatparse.js\n// module id = hBex\n// module chunks = 0","var dl = require('datalib');\n\nvar TIME    = 'time',\n    UTC     = 'utc',\n    STRING  = 'string',\n    ORDINAL = 'ordinal',\n    NUMBER  = 'number';\n\nfunction getTickFormat(scale, tickCount, tickFormatType, tickFormatString) {\n  var formatType = tickFormatType || inferFormatType(scale);\n  return getFormatter(scale, tickCount, formatType, tickFormatString);\n}\n\nfunction inferFormatType(scale) {\n  switch (scale.type) {\n    case TIME:    return TIME;\n    case UTC:     return UTC;\n    case ORDINAL: return STRING;\n    default:      return NUMBER;\n  }\n}\n\n// Adapted from d3 log scale\n// TODO customize? replace with range-size-aware filtering?\nfunction logFilter(scale, domain, count, f) {\n  if (count == null) return f;\n  var base = scale.base(),\n      k = Math.min(base, scale.ticks().length / count),\n      v = domain[0] > 0 ? (e = 1e-12, Math.ceil) : (e = -1e-12, Math.floor),\n      e;\n  function log(x) {\n    return (domain[0] < 0 ?\n      -Math.log(x > 0 ? 0 : -x) :\n      Math.log(x < 0 ? 0 : x)) / Math.log(base);\n  }\n  function pow(x) {\n    return domain[0] < 0 ? -Math.pow(base, -x) : Math.pow(base, x);\n  }\n  return function(d) {\n    return pow(v(log(d) + e)) / d >= k ? f(d) : '';\n  };\n}\n\nfunction getFormatter(scale, tickCount, formatType, str) {\n  var fmt = dl.format,\n      log = scale.type === 'log',\n      domain;\n\n  switch (formatType) {\n    case NUMBER:\n      domain = scale.domain();\n      return log ?\n        logFilter(scale, domain, tickCount, fmt.auto.number(str || null)) :\n        fmt.auto.linear(domain, tickCount, str || null);\n    case TIME: return (str ? fmt : fmt.auto).time(str);\n    case UTC:  return (str ? fmt : fmt.auto).utc(str);\n    default:   return String;\n  }\n}\n\nmodule.exports = {\n  getTickFormat: getTickFormat\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/format.js\n// module id = hv1v\n// module chunks = 0","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) {\n    if (i===list.length-1) {\n      list.pop();\n    } else {\n      list.splice(i, 1);\n    }\n  }\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n};\n\nmodule.exports = Item;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/Item.js\n// module id = iMk1\n// module chunks = 0","\"use strict\";\n(function (Mark) {\n    Mark[Mark[\"AREA\"] = 'area'] = \"AREA\";\n    Mark[Mark[\"BAR\"] = 'bar'] = \"BAR\";\n    Mark[Mark[\"LINE\"] = 'line'] = \"LINE\";\n    Mark[Mark[\"POINT\"] = 'point'] = \"POINT\";\n    Mark[Mark[\"TEXT\"] = 'text'] = \"TEXT\";\n    Mark[Mark[\"TICK\"] = 'tick'] = \"TICK\";\n    Mark[Mark[\"RULE\"] = 'rule'] = \"RULE\";\n    Mark[Mark[\"CIRCLE\"] = 'circle'] = \"CIRCLE\";\n    Mark[Mark[\"SQUARE\"] = 'square'] = \"SQUARE\";\n    Mark[Mark[\"ERRORBAR\"] = 'errorBar'] = \"ERRORBAR\";\n})(exports.Mark || (exports.Mark = {}));\nvar Mark = exports.Mark;\nexports.AREA = Mark.AREA;\nexports.BAR = Mark.BAR;\nexports.LINE = Mark.LINE;\nexports.POINT = Mark.POINT;\nexports.TEXT = Mark.TEXT;\nexports.TICK = Mark.TICK;\nexports.RULE = Mark.RULE;\nexports.CIRCLE = Mark.CIRCLE;\nexports.SQUARE = Mark.SQUARE;\nexports.ERRORBAR = Mark.ERRORBAR;\nexports.PRIMITIVE_MARKS = [exports.AREA, exports.BAR, exports.LINE, exports.POINT, exports.TEXT, exports.TICK, exports.RULE, exports.CIRCLE, exports.SQUARE];\n//# sourceMappingURL=mark.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/mark.js\n// module id = j8cM\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar scale_1 = require('../scale');\nvar util_1 = require('../util');\nvar NameMap = (function () {\n    function NameMap() {\n        this._nameMap = {};\n    }\n    NameMap.prototype.rename = function (oldName, newName) {\n        this._nameMap[oldName] = newName;\n    };\n    NameMap.prototype.get = function (name) {\n        while (this._nameMap[name]) {\n            name = this._nameMap[name];\n        }\n        return name;\n    };\n    return NameMap;\n}());\nvar Model = (function () {\n    function Model(spec, parent, parentGivenName) {\n        this._warnings = [];\n        this._parent = parent;\n        this._name = spec.name || parentGivenName;\n        this._dataNameMap = parent ? parent._dataNameMap : new NameMap();\n        this._scaleNameMap = parent ? parent._scaleNameMap : new NameMap();\n        this._sizeNameMap = parent ? parent._sizeNameMap : new NameMap();\n        this._data = spec.data;\n        this._description = spec.description;\n        this._transform = spec.transform;\n        this.component = { data: null, layout: null, mark: null, scale: null, axis: null, axisGroup: null, gridGroup: null, legend: null };\n    }\n    Model.prototype.parse = function () {\n        this.parseData();\n        this.parseSelectionData();\n        this.parseLayoutData();\n        this.parseScale();\n        this.parseAxis();\n        this.parseLegend();\n        this.parseAxisGroup();\n        this.parseGridGroup();\n        this.parseMark();\n    };\n    Model.prototype.assembleScales = function () {\n        return util_1.flatten(util_1.vals(this.component.scale).map(function (scales) {\n            var arr = [scales.main];\n            if (scales.colorLegend) {\n                arr.push(scales.colorLegend);\n            }\n            if (scales.binColorLegend) {\n                arr.push(scales.binColorLegend);\n            }\n            return arr;\n        }));\n    };\n    Model.prototype.assembleAxes = function () {\n        return util_1.vals(this.component.axis);\n    };\n    Model.prototype.assembleLegends = function () {\n        return util_1.vals(this.component.legend);\n    };\n    Model.prototype.assembleGroup = function () {\n        var group = {};\n        group.marks = this.assembleMarks();\n        var scales = this.assembleScales();\n        if (scales.length > 0) {\n            group.scales = scales;\n        }\n        var axes = this.assembleAxes();\n        if (axes.length > 0) {\n            group.axes = axes;\n        }\n        var legends = this.assembleLegends();\n        if (legends.length > 0) {\n            group.legends = legends;\n        }\n        return group;\n    };\n    Model.prototype.reduce = function (f, init, t) {\n        return encoding_1.channelMappingReduce(this.channels(), this.mapping(), f, init, t);\n    };\n    Model.prototype.forEach = function (f, t) {\n        encoding_1.channelMappingForEach(this.channels(), this.mapping(), f, t);\n    };\n    Model.prototype.parent = function () {\n        return this._parent;\n    };\n    Model.prototype.name = function (text, delimiter) {\n        if (delimiter === void 0) { delimiter = '_'; }\n        return (this._name ? this._name + delimiter : '') + text;\n    };\n    Model.prototype.description = function () {\n        return this._description;\n    };\n    Model.prototype.data = function () {\n        return this._data;\n    };\n    Model.prototype.renameData = function (oldName, newName) {\n        this._dataNameMap.rename(oldName, newName);\n    };\n    Model.prototype.dataName = function (dataSourceType) {\n        return this._dataNameMap.get(this.name(String(dataSourceType)));\n    };\n    Model.prototype.renameSize = function (oldName, newName) {\n        this._sizeNameMap.rename(oldName, newName);\n    };\n    Model.prototype.channelSizeName = function (channel) {\n        return this.sizeName(channel === channel_1.X || channel === channel_1.COLUMN ? 'width' : 'height');\n    };\n    Model.prototype.sizeName = function (size) {\n        return this._sizeNameMap.get(this.name(size, '_'));\n    };\n    Model.prototype.transform = function () {\n        return this._transform || {};\n    };\n    Model.prototype.field = function (channel, opt) {\n        if (opt === void 0) { opt = {}; }\n        var fieldDef = this.fieldDef(channel);\n        if (fieldDef.bin) {\n            opt = util_1.extend({\n                binSuffix: this.scale(channel).type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n            }, opt);\n        }\n        return fielddef_1.field(fieldDef, opt);\n    };\n    Model.prototype.scale = function (channel) {\n        return this._scale[channel];\n    };\n    Model.prototype.isOrdinalScale = function (channel) {\n        var scale = this.scale(channel);\n        return scale && scale.type === scale_1.ScaleType.ORDINAL;\n    };\n    Model.prototype.renameScale = function (oldName, newName) {\n        this._scaleNameMap.rename(oldName, newName);\n    };\n    Model.prototype.scaleName = function (channel) {\n        return this._scaleNameMap.get(this.name(channel + ''));\n    };\n    Model.prototype.sort = function (channel) {\n        return (this.mapping()[channel] || {}).sort;\n    };\n    Model.prototype.axis = function (channel) {\n        return this._axis[channel];\n    };\n    Model.prototype.legend = function (channel) {\n        return this._legend[channel];\n    };\n    Model.prototype.config = function () {\n        return this._config;\n    };\n    Model.prototype.addWarning = function (message) {\n        util_1.warning(message);\n        this._warnings.push(message);\n    };\n    Model.prototype.warnings = function () {\n        return this._warnings;\n    };\n    Model.prototype.isUnit = function () {\n        return false;\n    };\n    Model.prototype.isFacet = function () {\n        return false;\n    };\n    Model.prototype.isLayer = function () {\n        return false;\n    };\n    return Model;\n}());\nexports.Model = Model;\n//# sourceMappingURL=model.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/model.js\n// module id = jGoH\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../../data');\nvar util_1 = require('../../util');\nvar nullfilter_1 = require('./nullfilter');\nvar filter_1 = require('./filter');\nvar bin_1 = require('./bin');\nvar formula_1 = require('./formula');\nvar timeunit_1 = require('./timeunit');\nvar source;\n(function (source) {\n    function parse(model) {\n        var data = model.data();\n        if (data) {\n            var sourceData = { name: model.dataName(data_1.SOURCE) };\n            if (data.values && data.values.length > 0) {\n                sourceData.values = data.values;\n                sourceData.format = { type: 'json' };\n            }\n            else if (data.url) {\n                sourceData.url = data.url;\n                var defaultExtension = /(?:\\.([^.]+))?$/.exec(sourceData.url)[1];\n                if (!util_1.contains(['json', 'csv', 'tsv', 'topojson'], defaultExtension)) {\n                    defaultExtension = 'json';\n                }\n                var dataFormat = data.format || {};\n                var formatType = dataFormat.type || data['formatType'];\n                sourceData.format =\n                    util_1.extend({ type: formatType ? formatType : defaultExtension }, dataFormat.property ? { property: dataFormat.property } : {}, dataFormat.feature ?\n                        { feature: dataFormat.feature } :\n                        dataFormat.mesh ?\n                            { mesh: dataFormat.mesh } :\n                            {});\n            }\n            return sourceData;\n        }\n        else if (!model.parent()) {\n            return { name: model.dataName(data_1.SOURCE) };\n        }\n        return undefined;\n    }\n    source.parseUnit = parse;\n    function parseFacet(model) {\n        var sourceData = parse(model);\n        if (!model.child().component.data.source) {\n            model.child().renameData(model.child().dataName(data_1.SOURCE), model.dataName(data_1.SOURCE));\n        }\n        return sourceData;\n    }\n    source.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var sourceData = parse(model);\n        model.children().forEach(function (child) {\n            var childData = child.component.data;\n            if (model.compatibleSource(child)) {\n                var canMerge = !childData.filter && !childData.formatParse && !childData.nullFilter;\n                if (canMerge) {\n                    child.renameData(child.dataName(data_1.SOURCE), model.dataName(data_1.SOURCE));\n                    delete childData.source;\n                }\n                else {\n                    childData.source = {\n                        name: child.dataName(data_1.SOURCE),\n                        source: model.dataName(data_1.SOURCE)\n                    };\n                }\n            }\n        });\n        return sourceData;\n    }\n    source.parseLayer = parseLayer;\n    function assemble(model, component) {\n        if (component.source) {\n            var sourceData = component.source;\n            if (component.formatParse) {\n                component.source.format = component.source.format || {};\n                component.source.format.parse = component.formatParse;\n            }\n            sourceData.transform = [].concat(nullfilter_1.nullFilter.assemble(component), formula_1.formula.assemble(component), filter_1.filter.assemble(component), bin_1.bin.assemble(component), timeunit_1.timeUnit.assemble(component));\n            return sourceData;\n        }\n        return null;\n    }\n    source.assemble = assemble;\n})(source = exports.source || (exports.source = {}));\n//# sourceMappingURL=source.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/source.js\n// module id = jMte\n// module chunks = 0","var parser = require('./parser'),\n    codegen = require('./codegen');\n\nvar expr = module.exports = {\n  parse: function(input, opt) {\n      return parser.parse('('+input+')', opt);\n    },\n  code: function(opt) {\n      return codegen(opt);\n    },\n  compiler: function(args, opt) {\n      args = args.slice();\n      var generator = codegen(opt),\n          len = args.length,\n          compile = function(str) {\n            var value = generator(expr.parse(str));\n            args[len] = '\"use strict\"; return (' + value.code + ');';\n            var fn = Function.apply(null, args);\n            value.fn = (args.length > 8) ?\n              function() { return fn.apply(value, arguments); } :\n              function(a, b, c, d, e, f, g) {\n                return fn.call(value, a, b, c, d, e, f, g);\n              }; // call often faster than apply, use if args low enough\n            return value;\n          };\n      compile.codegen = generator;\n      return compile;\n    },\n  functions: require('./functions'),\n  constants: require('./constants')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/index.js\n// module id = jNWb\n// module chunks = 0","var json = require('./json');\n\nmodule.exports = function(tree, format) {\n  return toTable(json(tree, format), format);\n};\n\nfunction toTable(root, fields) {\n  var childrenField = fields && fields.children || 'children',\n      parentField = fields && fields.parent || 'parent',\n      table = [];\n\n  function visit(node, parent) {\n    node[parentField] = parent;\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n\n  visit(root, null);\n  return (table.root = root, table);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/treejson.js\n// module id = jbgm\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Cross(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: 'data'},\n    diagonal: {type: 'value', default: 'true'},\n    filter: {type: 'expr'}\n  });\n\n  this._output = {'left': 'a', 'right': 'b'};\n  this._lastWith = null; // Last time we crossed w/with-ds.\n  this._cids  = {};\n  this._cache = {};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Cross.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Cross;\n\n// Each cached incoming tuple also has a flag to determine whether\n// any tuples were filtered.\nfunction _cache(x, t) {\n  var c = this._cache,\n      cross = c[x._id] || (c[x._id] = {c: [], f: false});\n  cross.c.push(t);\n}\n\nfunction _cid(left, x, y) {\n  return left ? x._id+'_'+y._id : y._id+'_'+x._id;\n}\n\nfunction add(output, left, data, diag, test, mids, x) {\n  var as = this._output,\n      cache = this._cache,\n      cids  = this._cids,\n      oadd  = output.add,\n      fltrd = false,\n      i = 0, len = data.length,\n      t = {}, y, cid;\n\n  for (; i<len; ++i) {\n    y = data[i];\n    cid = _cid(left, x, y);\n    if (cids[cid]) continue;\n    if (x._id === y._id && !diag) continue;\n\n    Tuple.set(t, as.left, left ? x : y);\n    Tuple.set(t, as.right, left ? y : x);\n\n    // Only ingest a tuple if we keep it around. Otherwise, flag the\n    // caches as filtered.\n    if (!test || test(t)) {\n      oadd.push(t=Tuple.ingest(t));\n      _cache.call(this, x, t);\n      if (x._id !== y._id) _cache.call(this, y, t);\n      mids[t._id] = 1;\n      cids[cid] = true;\n      t = {};\n    } else {\n      if (cache[y._id]) cache[y._id].f = true;\n      fltrd = true;\n    }\n  }\n\n  if (cache[x._id]) cache[x._id].f = fltrd;\n}\n\nfunction mod(output, left, data, diag, test, mids, rids, x) {\n  var as = this._output,\n      cache = this._cache,\n      cids  = this._cids,\n      cross = cache[x._id],\n      tpls  = cross && cross.c,\n      fltrd = !cross || cross.f,\n      omod  = output.mod,\n      orem  = output.rem,\n      i, t, y, l, cid;\n\n  // If we have cached values, iterate through them for lazy\n  // removal, and to re-run the filter.\n  if (tpls) {\n    for (i=tpls.length-1; i>=0; --i) {\n      t = tpls[i];\n      l = x === t[as.left]; // Cache has tpls w/x both on left & right.\n      y = l ? t[as.right] : t[as.left];\n      cid = _cid(l, x, y);\n\n      // Lazy removal: y was previously rem'd, so clean up the cache.\n      if (!cache[y._id]) {\n        cids[cid] = false;\n        tpls.splice(i, 1);\n        continue;\n      }\n\n      if (!test || test(t)) {\n        if (mids[t._id]) continue;\n        omod.push(t);\n        mids[t._id] = 1;\n      } else {\n        if (!rids[t._id]) orem.push.apply(orem, tpls.splice(i, 1));\n        rids[t._id] = 1;\n        cids[cid] = false;\n        cross.f = true;\n      }\n    }\n  }\n\n  // If we have a filter param, call add to catch any tuples that may\n  // have previously been filtered.\n  if (test && fltrd) add.call(this, output, left, data, diag, test, mids, x);\n}\n\nfunction rem(output, left, rids, x) {\n  var as = this._output,\n      cross = this._cache[x._id],\n      cids  = this._cids,\n      orem  = output.rem,\n      i, len, t, y, l;\n  if (!cross) return;\n\n  for (i=0, len=cross.c.length; i<len; ++i) {\n    t = cross.c[i];\n    l = x === t[as.left];\n    y = l ? t[as.right] : t[as.left];\n    cids[_cid(l, x, y)] = false;\n    if (!rids[t._id]) {\n      orem.push(t);\n      rids[t._id] = 1;\n    }\n  }\n\n  this._cache[x._id] = null;\n}\n\nfunction purge(output, rids) {\n  var cache = this._cache,\n      keys  = dl.keys(cache),\n      rem = output.rem,\n      i, len, j, jlen, cross, t;\n\n  for (i=0, len=keys.length; i<len; ++i) {\n    cross = cache[keys[i]];\n    for (j=0, jlen=cross.c.length; j<jlen; ++j) {\n      t = cross.c[j];\n      if (rids[t._id]) continue;\n      rem.push(t);\n      rids[t._id] = 1;\n    }\n  }\n\n  this._cache = {};\n  this._cids = {};\n  this._lastWith = null;\n}\n\nprototype.batchTransform = function(input, data, reset) {\n  log.debug(input, ['crossing']);\n\n  var w = this.param('with'),\n      diag = this.param('diagonal'),\n      as = this._output,\n      test = this.param('filter') || null,\n      selfCross = (!w.name),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = ChangeSet.create(input),\n      mids = {}, rids = {}; // Track IDs to prevent dupe mod/rem tuples.\n\n  // If signal values (for diag or test) have changed, purge the cache\n  // and re-run cross in batch mode. Otherwise stream cross values.\n  if (reset) {\n    purge.call(this, output, rids);\n    data.forEach(add.bind(this, output, true, wdata, diag, test, mids));\n    this._lastWith = woutput.stamp;\n  } else {\n    input.rem.forEach(rem.bind(this, output, true, rids));\n    input.add.forEach(add.bind(this, output, true, wdata, diag, test, mids));\n\n    if (woutput.stamp > this._lastWith) {\n      woutput.rem.forEach(rem.bind(this, output, false, rids));\n      woutput.add.forEach(add.bind(this, output, false, data, diag, test, mids));\n      woutput.mod.forEach(mod.bind(this, output, false, data, diag, test, mids, rids));\n      this._lastWith = woutput.stamp;\n    }\n\n    // Mods need to come after all removals have been run.\n    input.mod.forEach(mod.bind(this, output, true, wdata, diag, test, mids, rids));\n  }\n\n  output.fields[as.left]  = 1;\n  output.fields[as.right] = 1;\n  return output;\n};\n\nmodule.exports = Cross;\n\nCross.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Cross transform\",\n  \"description\": \"Compute the cross-product of two data sets.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"cross\"]},\n    \"with\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the secondary data set to cross with the primary data. \" +\n        \"If unspecified, the primary data is crossed with itself.\"\n    },\n    \"diagonal\": {\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"If false, items along the \\\"diagonal\\\" of the cross-product \" +\n        \"(those elements with the same index in their respective array) \" +\n        \"will not be included in the output.\",\n      \"default\": true\n    },\n    \"filter\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) \" +\n        \"to filter the resulting data elements.\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"left\": {\"type\": \"string\", \"default\": \"a\"},\n        \"right\": {\"type\": \"string\", \"default\": \"b\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Cross.js\n// module id = juLC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nvar scale_1 = require('./scale');\nfunction parseLegendComponent(model) {\n    return [channel_1.COLOR, channel_1.SIZE, channel_1.SHAPE].reduce(function (legendComponent, channel) {\n        if (model.legend(channel)) {\n            legendComponent[channel] = parseLegend(model, channel);\n        }\n        return legendComponent;\n    }, {});\n}\nexports.parseLegendComponent = parseLegendComponent;\nfunction getLegendDefWithScale(model, channel) {\n    switch (channel) {\n        case channel_1.COLOR:\n            var fieldDef = model.fieldDef(channel_1.COLOR);\n            var scale = model.scaleName(useColorLegendScale(fieldDef) ?\n                scale_1.COLOR_LEGEND :\n                channel_1.COLOR);\n            return model.config().mark.filled ? { fill: scale } : { stroke: scale };\n        case channel_1.SIZE:\n            return { size: model.scaleName(channel_1.SIZE) };\n        case channel_1.SHAPE:\n            return { shape: model.scaleName(channel_1.SHAPE) };\n    }\n    return null;\n}\nfunction parseLegend(model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    var legend = model.legend(channel);\n    var config = model.config();\n    var def = getLegendDefWithScale(model, channel);\n    def.title = title(legend, fieldDef, config);\n    var format = common_1.numberFormat(fieldDef, legend.format, config);\n    if (format) {\n        def.format = format;\n    }\n    ['offset', 'orient', 'values'].forEach(function (property) {\n        var value = legend[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = (typeof legend !== 'boolean' && legend.properties) || {};\n    ['title', 'symbols', 'legend', 'labels'].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](fieldDef, props[group], model, channel) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseLegend = parseLegend;\nfunction title(legend, fieldDef, config) {\n    if (typeof legend !== 'boolean' && legend.title) {\n        return legend.title;\n    }\n    return fielddef_1.title(fieldDef, config);\n}\nexports.title = title;\nfunction useColorLegendScale(fieldDef) {\n    return fieldDef.type === type_1.ORDINAL || fieldDef.bin || fieldDef.timeUnit;\n}\nexports.useColorLegendScale = useColorLegendScale;\nvar properties;\n(function (properties) {\n    function symbols(fieldDef, symbolsSpec, model, channel) {\n        var symbols = {};\n        var mark = model.mark();\n        var legend = model.legend(channel);\n        switch (mark) {\n            case mark_1.BAR:\n            case mark_1.TICK:\n            case mark_1.TEXT:\n                symbols.shape = { value: 'square' };\n                break;\n            case mark_1.CIRCLE:\n            case mark_1.SQUARE:\n                symbols.shape = { value: mark };\n                break;\n            case mark_1.POINT:\n            case mark_1.LINE:\n            case mark_1.AREA:\n                break;\n        }\n        var filled = model.config().mark.filled;\n        var config = channel === channel_1.COLOR ?\n            util_1.without(common_1.FILL_STROKE_CONFIG, [filled ? 'fill' : 'stroke', 'strokeDash', 'strokeDashOffset']) :\n            util_1.without(common_1.FILL_STROKE_CONFIG, ['strokeDash', 'strokeDashOffset']);\n        config = util_1.without(config, ['strokeDash', 'strokeDashOffset']);\n        common_1.applyMarkConfig(symbols, model, config);\n        if (filled) {\n            symbols.strokeWidth = { value: 0 };\n        }\n        var value;\n        if (model.has(channel_1.COLOR) && channel === channel_1.COLOR) {\n            if (useColorLegendScale(fieldDef)) {\n                value = { scale: model.scaleName(channel_1.COLOR), field: 'data' };\n            }\n        }\n        else if (model.fieldDef(channel_1.COLOR).value) {\n            value = { value: model.fieldDef(channel_1.COLOR).value };\n        }\n        if (value !== undefined) {\n            if (filled) {\n                symbols.fill = value;\n            }\n            else {\n                symbols.stroke = value;\n            }\n        }\n        else if (channel !== channel_1.COLOR) {\n            symbols[filled ? 'fill' : 'stroke'] = symbols[filled ? 'fill' : 'stroke'] ||\n                { value: model.config().mark.color };\n        }\n        if (legend.symbolColor !== undefined) {\n            symbols.fill = { value: legend.symbolColor };\n        }\n        if (legend.symbolShape !== undefined) {\n            symbols.shape = { value: legend.symbolShape };\n        }\n        if (legend.symbolSize !== undefined) {\n            symbols.size = { value: legend.symbolSize };\n        }\n        if (legend.symbolStrokeWidth !== undefined) {\n            symbols.strokeWidth = { value: legend.symbolStrokeWidth };\n        }\n        symbols = util_1.extend(symbols, symbolsSpec || {});\n        return util_1.keys(symbols).length > 0 ? symbols : undefined;\n    }\n    properties.symbols = symbols;\n    function labels(fieldDef, labelsSpec, model, channel) {\n        var legend = model.legend(channel);\n        var config = model.config();\n        var labels = {};\n        if (channel === channel_1.COLOR) {\n            if (fieldDef.type === type_1.ORDINAL) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        scale: model.scaleName(scale_1.COLOR_LEGEND),\n                        field: 'data'\n                    }\n                }, labelsSpec || {});\n            }\n            else if (fieldDef.bin) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        scale: model.scaleName(scale_1.COLOR_LEGEND_LABEL),\n                        field: 'data'\n                    }\n                }, labelsSpec || {});\n            }\n            else if (fieldDef.type === type_1.TEMPORAL) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        template: common_1.timeTemplate('datum.data', fieldDef.timeUnit, legend.format, legend.shortTimeLabels, config)\n                    }\n                }, labelsSpec || {});\n            }\n        }\n        if (legend.labelAlign !== undefined) {\n            labels.align = { value: legend.labelAlign };\n        }\n        if (legend.labelColor !== undefined) {\n            labels.stroke = { value: legend.labelColor };\n        }\n        if (legend.labelFont !== undefined) {\n            labels.font = { value: legend.labelFont };\n        }\n        if (legend.labelFontSize !== undefined) {\n            labels.fontSize = { value: legend.labelFontSize };\n        }\n        if (legend.labelBaseline !== undefined) {\n            labels.baseline = { value: legend.labelBaseline };\n        }\n        labels = util_1.extend(labels, labelsSpec || {});\n        return util_1.keys(labels).length > 0 ? labels : undefined;\n    }\n    properties.labels = labels;\n    function title(fieldDef, titleSpec, model, channel) {\n        var legend = model.legend(channel);\n        var titles = {};\n        if (legend.titleColor !== undefined) {\n            titles.stroke = { value: legend.titleColor };\n        }\n        if (legend.titleFont !== undefined) {\n            titles.font = { value: legend.titleFont };\n        }\n        if (legend.titleFontSize !== undefined) {\n            titles.fontSize = { value: legend.titleFontSize };\n        }\n        if (legend.titleFontWeight !== undefined) {\n            titles.fontWeight = { value: legend.titleFontWeight };\n        }\n        titles = util_1.extend(titles, titleSpec || {});\n        return util_1.keys(titles).length > 0 ? titles : undefined;\n    }\n    properties.title = title;\n})(properties = exports.properties || (exports.properties = {}));\n//# sourceMappingURL=legend.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/legend.js\n// module id = jxr4\n// module chunks = 0","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-dispatch/src/dispatch.js\n// module id = jyAW\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar area;\n(function (area) {\n    function markType() {\n        return 'area';\n    }\n    area.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        var orient = config.mark.orient;\n        if (orient) {\n            p.orient = { value: orient };\n        }\n        var stack = model.stack();\n        var _x = x(model.encoding().x, model.scaleName(channel_1.X), orient, stack);\n        if (_x) {\n            p.x = _x;\n        }\n        var _y = y(model.encoding().y, model.scaleName(channel_1.Y), orient, stack);\n        if (_y) {\n            p.y = _y;\n        }\n        var _x2 = x2(model.encoding().x, model.encoding().x2, model.scaleName(channel_1.X), orient, stack);\n        if (_x2) {\n            p.x2 = _x2;\n        }\n        var _y2 = y2(model.encoding().y, model.encoding().y2, model.scaleName(channel_1.Y), orient, stack);\n        if (_y2) {\n            p.y2 = _y2;\n        }\n        common_1.applyColorAndOpacity(p, model);\n        common_1.applyMarkConfig(p, model, ['interpolate', 'tension']);\n        return p;\n    }\n    area.properties = properties;\n    function x(fieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.X === stack.fieldChannel) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { suffix: '_start' })\n            };\n        }\n        else if (fielddef_1.isMeasure(fieldDef)) {\n            if (orient === 'horizontal') {\n                if (fieldDef && fieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(fieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n            else {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef)\n                };\n            }\n        }\n        else if (fielddef_1.isDimension(fieldDef)) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n            };\n        }\n        return undefined;\n    }\n    area.x = x;\n    function x2(xFieldDef, x2FieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.X === stack.fieldChannel) {\n            if (orient === 'horizontal') {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(xFieldDef, { suffix: '_end' })\n                };\n            }\n        }\n        else if (fielddef_1.isMeasure(x2FieldDef)) {\n            if (orient === 'horizontal') {\n                if (x2FieldDef && x2FieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(x2FieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n    area.x2 = x2;\n    function y(fieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { suffix: '_start' })\n            };\n        }\n        else if (fielddef_1.isMeasure(fieldDef)) {\n            if (orient !== 'horizontal') {\n                if (fieldDef && fieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(fieldDef)\n                    };\n                }\n                else {\n                    return { field: { group: 'height' } };\n                }\n            }\n            else {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef)\n                };\n            }\n        }\n        else if (fielddef_1.isDimension(fieldDef)) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n            };\n        }\n        return undefined;\n    }\n    area.y = y;\n    function y2(yFieldDef, y2FieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            if (orient !== 'horizontal') {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(yFieldDef, { suffix: '_end' })\n                };\n            }\n        }\n        else if (fielddef_1.isMeasure(yFieldDef)) {\n            if (orient !== 'horizontal') {\n                if (y2FieldDef && y2FieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(y2FieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n    area.y2 = y2;\n    function labels(model) {\n        return undefined;\n    }\n    area.labels = labels;\n})(area = exports.area || (exports.area = {}));\n//# sourceMappingURL=area.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/area.js\n// module id = k2D6\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar time_1 = require('./../time');\nvar timeUnitDomain;\n(function (timeUnitDomain) {\n    function parse(model) {\n        return model.reduce(function (timeUnitDomainMap, fieldDef, channel) {\n            if (fieldDef.timeUnit) {\n                var domain = time_1.rawDomain(fieldDef.timeUnit, channel);\n                if (domain) {\n                    timeUnitDomainMap[fieldDef.timeUnit] = true;\n                }\n            }\n            return timeUnitDomainMap;\n        }, {});\n    }\n    timeUnitDomain.parseUnit = parse;\n    function parseFacet(model) {\n        return util_1.extend(parse(model), model.child().component.data.timeUnitDomain);\n    }\n    timeUnitDomain.parseFacet = parseFacet;\n    function parseLayer(model) {\n        return util_1.extend(parse(model), model.children().forEach(function (child) {\n            return child.component.data.timeUnitDomain;\n        }));\n    }\n    timeUnitDomain.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.keys(component.timeUnitDomain).reduce(function (timeUnitData, tu) {\n            var timeUnit = tu;\n            var domain = time_1.rawDomain(timeUnit, null);\n            if (domain) {\n                timeUnitData.push({\n                    name: timeUnit,\n                    values: domain,\n                    transform: [{\n                            type: 'formula',\n                            field: 'date',\n                            expr: time_1.parseExpression(timeUnit, 'datum.data', true)\n                        }]\n                });\n            }\n            return timeUnitData;\n        }, []);\n    }\n    timeUnitDomain.assemble = assemble;\n})(timeUnitDomain = exports.timeUnitDomain || (exports.timeUnitDomain = {}));\n//# sourceMappingURL=timeunitdomain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/timeunitdomain.js\n// module id = k66X\n// module chunks = 0","module.exports = {\n  arc:    require('./arc'),\n  area:   require('./area'),\n  group:  require('./group'),\n  image:  require('./image'),\n  line:   require('./line'),\n  path:   require('./path'),\n  rect:   require('./rect'),\n  rule:   require('./rule'),\n  symbol: require('./symbol'),\n  text:   require('./text')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/index.js\n// module id = kC7m\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../../data');\nvar fielddef_1 = require('../../fielddef');\nvar stackScale;\n(function (stackScale) {\n    function parseUnit(model) {\n        var stackProps = model.stack();\n        if (stackProps) {\n            var groupbyChannel = stackProps.groupbyChannel;\n            var fieldChannel = stackProps.fieldChannel;\n            return {\n                name: model.dataName(data_1.STACKED_SCALE),\n                source: model.dataName(data_1.SUMMARY),\n                transform: [{\n                        type: 'aggregate',\n                        groupby: [model.field(groupbyChannel)],\n                        summarize: [{ ops: ['sum'], field: model.field(fieldChannel) }]\n                    }]\n            };\n        }\n        return null;\n    }\n    stackScale.parseUnit = parseUnit;\n    ;\n    function parseFacet(model) {\n        var child = model.child();\n        var childDataComponent = child.component.data;\n        if (!childDataComponent.source && childDataComponent.stackScale) {\n            var stackComponent = childDataComponent.stackScale;\n            var newName = model.dataName(data_1.STACKED_SCALE);\n            child.renameData(stackComponent.name, newName);\n            stackComponent.name = newName;\n            stackComponent.source = model.dataName(data_1.SUMMARY);\n            stackComponent.transform[0].groupby = model.reduce(function (groupby, fieldDef) {\n                groupby.push(fielddef_1.field(fieldDef));\n                return groupby;\n            }, stackComponent.transform[0].groupby);\n            delete childDataComponent.stackScale;\n            return stackComponent;\n        }\n        return null;\n    }\n    stackScale.parseFacet = parseFacet;\n    function parseLayer(model) {\n        return null;\n    }\n    stackScale.parseLayer = parseLayer;\n    function assemble(component) {\n        return component.stackScale;\n    }\n    stackScale.assemble = assemble;\n})(stackScale = exports.stackScale || (exports.stackScale = {}));\n//# sourceMappingURL=stackscale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/stackscale.js\n// module id = kowr\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    parseMark = require('../parse/mark'),\n    util = require('../util');\n\nvar axisBounds = new (require('vega-scenegraph').Bounds)();\nvar ORDINAL = 'ordinal';\n\nfunction axs(model, config) {\n  var scale,\n      orient = config.orient,\n      offset = 0,\n      titleOffset = config.titleOffset,\n      axisDef = {},\n      layer = 'front',\n      grid = false,\n      title = null,\n      tickMajorSize = config.tickSize,\n      tickMinorSize = config.tickSize,\n      tickEndSize = config.tickSize,\n      tickPadding = config.tickPadding || config.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormatType = null,\n      tickSubdivide = 0,\n      tickCount = config.ticks,\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines:  {},\n        majorTicks: {},\n        minorTicks: {},\n        tickLabels: {},\n        domain: {},\n        title:  {}\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  }\n\n  function ingest(d) {\n    return {data: d};\n  }\n\n  function getTicks(format) {\n    var major = tickValues || (scale.ticks ? scale.ticks(tickCount) : scale.domain()),\n        minor = axisSubdivide(scale, major, tickSubdivide).map(ingest);\n    major = major.map(function(d) { return (d = ingest(d), d.label = format(d.data), d); });\n    return [major, minor];\n  }\n\n  axis.def = function() {\n    if (!axisDef.type) axis_def(scale);\n\n    var format = util.getTickFormat(scale, tickCount, tickFormatType, tickFormatString),\n        ticks  = getTicks(format),\n        tdata  = title ? [title].map(ingest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? ticks[0] : []; };\n    axisDef.marks[1].from = function() { return ticks[0]; };\n    axisDef.marks[2].from = function() { return ticks[1]; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    if (titleOffset === 'auto') titleAutoOffset(axisDef);\n\n    return axisDef;\n  };\n\n  function titleAutoOffset(axisDef) {\n    var orient = axisDef.orient,\n        update = axisDef.marks[5].properties.update,\n        fn = update.encode,\n        min = config.titleOffsetAutoMin,\n        max = config.titleOffsetAutoMax,\n        pad = config.titleOffsetAutoMargin;\n\n    // Offset axis title using bounding box of axis domain and labels\n    // Assumes other components are **encoded and bounded** beforehand\n    update.encode = function(item, group, trans, db, signals, preds) {\n      var dirty = fn.call(fn, item, group, trans, db, signals, preds),\n          field = (orient==='bottom' || orient==='top') ? 'y' : 'x';\n      if (titleStyle[field] != null) return dirty;\n\n      axisBounds.clear()\n        .union(group.items[3].bounds)\n        .union(group.items[4].bounds);\n\n      var o = trans ? {} : item,\n          method = (orient==='left' || orient==='right') ? 'width' : 'height',\n          sign = (orient==='top' || orient==='left') ? -1 : 1,\n          off = ~~(axisBounds[method]() + item.fontSize/2 + pad);\n\n      Tuple.set(o, field, sign * Math.min(Math.max(min, off), max));\n      if (trans) trans.interpolate(item, o);\n      return true;\n    };\n  }\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === ORDINAL) {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+':prev', offset: 0.5};\n    }\n    range = axisScaleRange(scale);\n\n    // setup axis marks\n    dl.extend(m.gridLines, axisTicks(config));\n    dl.extend(m.majorTicks, axisTicks(config));\n    dl.extend(m.minorTicks, axisTicks(config));\n    dl.extend(m.tickLabels, axisTickLabels(config));\n    dl.extend(m.domain, axisDomain(config));\n    dl.extend(m.title, axisTitle(config));\n    m.gridLines.properties.enter.stroke = {value: config.gridColor};\n    m.gridLines.properties.enter.strokeOpacity = {value: config.gridOpacity};\n    m.gridLines.properties.enter.strokeWidth = {value: config.gridWidth};\n    m.gridLines.properties.enter.strokeDash = {value: config.gridDash};\n\n    // extend axis marks based on axis orientation\n    axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity, scale, config, offset);\n    axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize, scale, config);\n    axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize, scale, config);\n\n    axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    axisDomainExtend(orient, m.domain, range, tickEndSize);\n    axisTitleExtend(orient, m.title, range, +titleOffset || -1);\n\n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: {\n          encode: axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  }\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in axisOrients ? x + '' : config.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.tickCount = function(x) {\n    if (!arguments.length) return tickCount;\n    tickCount = x;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.tickFormatType = function(x) {\n    if (!arguments.length) return tickFormatType;\n    if (tickFormatType !== x) {\n      tickFormatType = x;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n\n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== x) { titleOffset = x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n\n  axis.reset = function() {\n    reset();\n    return axis;\n  };\n\n  return axis;\n}\n\nvar axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction axisSubdivide(scale, ticks, m) {\n  var subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = axisScaleExtent(scale.domain()),\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction axisScaleRange(scale) {\n  return scale.rangeExtent ?\n    scale.rangeExtent() :\n    axisScaleExtent(scale.range());\n}\n\nvar axisAlign = {\n  bottom: 'center',\n  top: 'center',\n  left: 'right',\n  right: 'left'\n};\n\nvar axisBaseline = {\n  bottom: 'top',\n  top: 'bottom',\n  left: 'middle',\n  right: 'middle'\n};\n\nfunction axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === 'left' || orient === 'top') {\n    size *= -1;\n  }\n  if (orient === 'top' || orient === 'bottom') {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: 'center'},\n      baseline: {value: axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: axisAlign[orient]},\n      baseline: {value: 'middle'}\n    });\n  }\n}\n\nfunction axisTicksExtend(orient, ticks, oldRef, newRef, size, scale, config, offset) {\n  var sign = (orient === 'left' || orient === 'top') ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === 'top' || orient === 'bottom') ?\n      {field: {group: 'height', level: 2}, mult: -sign, offset: offset*-sign} :\n      {field: {group: 'width',  level: 2}, mult: -sign, offset: offset*-sign};\n  } else {\n    size = {value: sign * size, offset: offset};\n  }\n\n  // Update offset of tick placement to be in between ordinal marks\n  // instead of directly aligned with.\n  if (config.tickPlacement === 'between' && scale.type === ORDINAL) {\n    var rng = scale.range(),\n        tickOffset = 0.5 + (scale.rangeBand() || (rng[1] - rng[0]) / 2);\n    newRef = oldRef = dl.duplicate(newRef);\n    newRef.offset = oldRef.offset = tickOffset;\n  }\n\n  if (orient === 'top' || orient === 'bottom') {\n    dl.extend(ticks.properties.enter, {\n      x:  oldRef,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newRef,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newRef,\n    });\n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldRef\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newRef\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newRef,\n    });\n  }\n}\n\nfunction axisTitleExtend(orient, title, range, offset) {\n  var update = title.properties.update,\n      mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === 'top' || orient === 'left') ? -1 : 1;\n\n  if (orient === 'bottom' || orient === 'top') {\n    update.x = {value: mid};\n    update.angle = {value: 0};\n    if (offset >= 0) update.y = {value: sign * offset};\n  } else {\n    update.y = {value: mid};\n    update.angle = {value: orient === 'left' ? -90 : 90};\n    if (offset >= 0) update.x = {value: sign * offset};\n  }\n}\n\nfunction axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === 'top' || orient === 'left') {\n    size = -1 * size;\n  }\n  if (orient === 'bottom' || orient === 'top') {\n    path = 'M' + range[0] + ',' + size + 'V0H' + range[1] + 'V' + size;\n  } else {\n    path = 'M' + size + ',' + range[0] + 'H0V' + range[1] + 'H' + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction axisUpdate(item, group, trans) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isArray(offset)) {\n    var ofx = offset[0],\n        ofy = offset[1];\n\n    switch (orient) {\n      case 'left':   { Tuple.set(o, 'x', -ofx); Tuple.set(o, 'y', ofy); break; }\n      case 'right':  { Tuple.set(o, 'x', width + ofx); Tuple.set(o, 'y', ofy); break; }\n      case 'bottom': { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', height + ofy); break; }\n      case 'top':    { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', -ofy); break; }\n      default:       { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', ofy); }\n    }\n  } else {\n    if (dl.isObject(offset)) {\n      offset = -group.scale(offset.scale)(offset.value);\n    }\n\n    switch (orient) {\n      case 'left':   { Tuple.set(o, 'x', -offset); Tuple.set(o, 'y', 0); break; }\n      case 'right':  { Tuple.set(o, 'x', width + offset); Tuple.set(o, 'y', 0); break; }\n      case 'bottom': { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', height + offset); break; }\n      case 'top':    { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', -offset); break; }\n      default:       { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', 0); }\n    }\n  }\n\n  if (trans) trans.interpolate(item, o);\n  return true;\n}\n\nfunction axisTicks(config) {\n  return {\n    type: 'rule',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        stroke: {value: config.tickColor},\n        strokeWidth: {value: config.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction axisTickLabels(config) {\n  return {\n    type: 'text',\n    interactive: true,\n    key: 'data',\n    properties: {\n      enter: {\n        fill: {value: config.tickLabelColor},\n        font: {value: config.tickLabelFont},\n        fontSize: {value: config.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: 'label'}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction axisTitle(config) {\n  return {\n    type: 'text',\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.titleFont},\n        fontSize: {value: config.titleFontSize},\n        fontWeight: {value: config.titleFontWeight},\n        fill: {value: config.titleColor},\n        align: {value: 'center'},\n        baseline: {value: 'middle'},\n        text: {field: 'data'}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction axisDomain(config) {\n  return {\n    type: 'path',\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axisColor},\n        strokeWidth: {value: config.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/axis.js\n// module id = lKLM\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render'),\n    areaPath = require('../../../util/svg').path.area;\n\nfunction path(g, items) {\n  var o = items[0],\n      p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  render(g, p);\n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  var items = scene.items,\n      b = scene.bounds;\n\n  if (!items || !items.length || b && !b.contains(gx, gy)) {\n    return null;\n  }\n\n  if (g.pixelratio != null && g.pixelratio !== 1) {\n    x *= g.pixelratio;\n    y *= g.pixelratio;\n  }\n  return hit(g, items, x, y) ? items[0] : null;\n}\n\nvar hit = util.testPath(path);\n\nmodule.exports = {\n  draw: util.drawOne(path),\n  pick: pick,\n  nested: true\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/area.js\n// module id = lTFi\n// module chunks = 0","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/groupby.js\n// module id = lkhv\n// module chunks = 0","function Bounds(b) {\n  this.clear();\n  if (b) this.union(b);\n}\n\nvar prototype = Bounds.prototype;\n\nprototype.clone = function() {\n  return new Bounds(this);\n};\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n};\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.alignsWith = function(b) {\n  return b && (\n    this.x1 == b.x1 ||\n    this.x2 == b.x2 ||\n    this.y1 == b.y1 ||\n    this.y2 == b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = Bounds;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/Bounds.js\n// module id = lnKO\n// module chunks = 0","var ImageLoader = require('../../util/ImageLoader'),\n    Renderer = require('../Renderer'),\n    text = require('../../util/text'),\n    DOM = require('../../util/dom'),\n    SVG = require('../../util/svg'),\n    ns = SVG.metadata.xmlns,\n    marks = require('./marks');\n\nfunction SVGRenderer(loadConfig) {\n  Renderer.call(this);\n  this._loader = new ImageLoader(loadConfig);\n  this._dirtyID = 0;\n}\n\nvar base = Renderer.prototype;\nvar prototype = (SVGRenderer.prototype = Object.create(base));\nprototype.constructor = SVGRenderer;\n\nprototype.initialize = function(el, width, height, padding) {\n  if (el) {\n    this._svg = DOM.child(el, 0, 'svg', ns, 'marks');\n    DOM.clear(el, 1);\n    // set the svg root group\n    this._root = DOM.child(this._svg, 0, 'g', ns);\n    DOM.clear(this._svg, 1);\n  }\n\n  // create the svg definitions cache\n  this._defs = {\n    clip_id:  1,\n    gradient: {},\n    clipping: {}\n  };\n\n  // set background color if defined\n  this.background(this._bgcolor);\n\n  return base.initialize.call(this, el, width, height, padding);\n};\n\nprototype.background = function(bgcolor) {\n  if (arguments.length && this._svg) {\n    this._svg.style.setProperty('background-color', bgcolor);\n  }\n  return base.background.apply(this, arguments);\n};\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  \n  if (this._svg) {\n    var w = this._width,\n        h = this._height,\n        p = this._padding;\n  \n    this._svg.setAttribute('width', w + p.left + p.right);\n    this._svg.setAttribute('height', h + p.top + p.bottom);\n    \n    this._root.setAttribute('transform', 'translate('+p.left+','+p.top+')');\n  }\n\n  return this;\n};\n\nprototype.svg = function() {\n  if (!this._svg) return null;\n\n  var attr = {\n    'class':  'marks',\n    'width':  this._width + this._padding.left + this._padding.right,\n    'height': this._height + this._padding.top + this._padding.bottom,\n  };\n  for (var key in SVG.metadata) {\n    attr[key] = SVG.metadata[key];\n  }\n\n  return DOM.openTag('svg', attr) + this._svg.innerHTML + DOM.closeTag('svg');\n};\n\nprototype.imageURL = function(url) {\n  return this._loader.imageURL(url);\n};\n\n\n// -- Render entry point --\n\nprototype.render = function(scene, items) {\n  if (this._dirtyCheck(items)) {\n    if (this._dirtyAll) this._resetDefs();\n    this.draw(this._root, scene, -1);\n    DOM.clear(this._root, 1);\n  }\n  this.updateDefs();\n  return this;\n};\n\nprototype.draw = function(el, scene, index) {\n  this.drawMark(el, scene, index, marks[scene.marktype]);\n};\n\n\n// -- Manage SVG definitions ('defs') block --\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      defs = this._defs,\n      el = defs.el,\n      index = 0, id;\n\n  for (id in defs.gradient) {\n    if (!el) el = (defs.el = DOM.child(svg, 0, 'defs', ns));\n    updateGradient(el, defs.gradient[id], index++);\n  }\n\n  for (id in defs.clipping) {\n    if (!el) el = (defs.el = DOM.child(svg, 0, 'defs', ns));\n    updateClipping(el, defs.clipping[id], index++);\n  }\n\n  // clean-up\n  if (el) {\n    if (index === 0) {\n      svg.removeChild(el);\n      defs.el = null;\n    } else {\n      DOM.clear(el, index);      \n    }\n  }\n};\n\nfunction updateGradient(el, grad, index) {\n  var i, n, stop;\n\n  el = DOM.child(el, index, 'linearGradient', ns);\n  el.setAttribute('id', grad.id);\n  el.setAttribute('x1', grad.x1);\n  el.setAttribute('x2', grad.x2);\n  el.setAttribute('y1', grad.y1);\n  el.setAttribute('y2', grad.y2);\n  \n  for (i=0, n=grad.stops.length; i<n; ++i) {\n    stop = DOM.child(el, i, 'stop', ns);\n    stop.setAttribute('offset', grad.stops[i].offset);\n    stop.setAttribute('stop-color', grad.stops[i].color);\n  }\n  DOM.clear(el, i);\n}\n\nfunction updateClipping(el, clip, index) {\n  var rect;\n\n  el = DOM.child(el, index, 'clipPath', ns);\n  el.setAttribute('id', clip.id);\n  rect = DOM.child(el, 0, 'rect', ns);\n  rect.setAttribute('x', 0);\n  rect.setAttribute('y', 0);\n  rect.setAttribute('width', clip.width);\n  rect.setAttribute('height', clip.height);\n}\n\nprototype._resetDefs = function() {\n  var def = this._defs;\n  def.clip_id = 1;\n  def.gradient = {};\n  def.clipping = {};\n};\n\n\n// -- Manage rendering of items marked as dirty --\n\nprototype.isDirty = function(item) {\n  return this._dirtyAll || item.dirty === this._dirtyID;\n};\n\nprototype._dirtyCheck = function(items) {\n  this._dirtyAll = true;\n  if (!items) return true;\n\n  var id = ++this._dirtyID,\n      item, mark, type, mdef, i, n, o;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    mark = item.mark;\n    if (mark.marktype !== type) {\n      // memoize mark instance lookup\n      type = mark.marktype;\n      mdef = marks[type];\n    }\n\n    if (item.status === 'exit') { // EXIT\n      if (item._svg) {\n        if (mdef.nest && item.mark.items.length) {\n          // if nested mark with remaining points, update instead\n          this._update(mdef, item._svg, item.mark.items[0]);\n          o = item.mark.items[0];\n          o._svg = item._svg;\n          o._update = id;\n        } else {\n          // otherwise remove from DOM\n          DOM.remove(item._svg);\n        }\n        item._svg = null;\n      }\n      continue;\n    }\n\n    item = (mdef.nest ? mark.items[0] : item);\n    if (item._update === id) { // Already processed\n      continue;\n    } else if (item._svg) { // UPDATE\n      this._update(mdef, item._svg, item);\n    } else { // ENTER\n      this._dirtyAll = false;\n      dirtyParents(item, id);\n    }\n    item._update = id;\n  }\n  return !this._dirtyAll;\n};\n\nfunction dirtyParents(item, id) {\n  for (; item && item.dirty !== id; item=item.mark.group) {\n    item.dirty = id;\n    if (item.mark && item.mark.dirty !== id) {\n      item.mark.dirty = id;\n    } else return;\n  }\n}\n\n\n// -- Construct & maintain scenegraph to SVG mapping ---\n\n// Draw a mark container.\nprototype.drawMark = function(el, scene, index, mdef) {\n  if (!this.isDirty(scene)) return;\n\n  var items = mdef.nest ?\n        (scene.items && scene.items.length ? [scene.items[0]] : []) :\n        scene.items || [],\n      events = scene.interactive === false ? 'none' : null,\n      isGroup = (mdef.tag === 'g'),\n      className = DOM.cssClass(scene),\n      p, i, n, c, d, insert;\n\n  p = DOM.child(el, index+1, 'g', ns, className);\n  p.setAttribute('class', className);\n  scene._svg = p;\n  if (!isGroup && events) {\n    p.style.setProperty('pointer-events', events);\n  }\n\n  for (i=0, n=items.length; i<n; ++i) {\n    if (this.isDirty(d = items[i])) {\n      insert = !(this._dirtyAll || d._svg);\n      c = bind(p, mdef, d, i, insert);\n      this._update(mdef, c, d);\n      if (isGroup) {\n        if (insert) this._dirtyAll = true;\n        this._recurse(c, d);\n        if (insert) this._dirtyAll = false;\n      }\n    }\n  }\n  DOM.clear(p, i);\n  return p;\n};\n\n// Recursively process group contents.\nprototype._recurse = function(el, group) {\n  var items = group.items || [],\n      legends = group.legendItems || [],\n      axes = group.axisItems || [],\n      idx = 0, j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer === 'back') {\n      this.drawMark(el, axes[j], idx++, marks.group);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    this.draw(el, items[j], idx++);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer !== 'back') {\n      this.drawMark(el, axes[j], idx++, marks.group);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    this.drawMark(el, legends[j], idx++, marks.group);\n  }\n\n  // remove any extraneous DOM elements\n  DOM.clear(el, 1 + idx);\n};\n\n// Bind a scenegraph item to an SVG DOM element.\n// Create new SVG elements as needed.\nfunction bind(el, mdef, item, index, insert) {\n  // create svg element, bind item data for D3 compatibility\n  var node = DOM.child(el, index, mdef.tag, ns, null, insert);\n  node.__data__ = item;\n  node.__values__ = {fill: 'default'};\n\n  // create background rect\n  if (mdef.tag === 'g') {\n    var bg = DOM.child(node, 0, 'rect', ns, 'background');\n    bg.__data__ = item;\n  }\n\n  // add pointer from scenegraph item to svg element\n  return (item._svg = node);\n}\n\n\n// -- Set attributes & styles on SVG elements ---\n\nvar element = null, // temp var for current SVG element\n    values = null;  // temp var for current values hash\n\n// Extra configuration for certain mark types\nvar mark_extras = {\n  group: function(mdef, el, item) {\n    element = el.childNodes[0];\n    values = el.__values__; // use parent's values hash\n    mdef.background(emit, item, this);\n\n    var value = item.mark.interactive === false ? 'none' : null;\n    if (value !== values.events) {\n      element.style.setProperty('pointer-events', value);\n      values.events = value;\n    }\n  },\n  text: function(mdef, el, item) {\n    var str = text.value(item.text);\n    if (str !== values.text) {\n      el.textContent = str;\n      values.text = str;\n    }\n    str = text.font(item);\n    if (str !== values.font) {\n      el.style.setProperty('font', str);\n      values.font = str;\n    }\n  }\n};\n\nprototype._update = function(mdef, el, item) {\n  // set dom element and values cache\n  // provides access to emit method\n  element = el;\n  values = el.__values__;\n\n  // apply svg attributes\n  mdef.attr(emit, item, this);\n\n  // some marks need special treatment\n  var extra = mark_extras[mdef.type];\n  if (extra) extra(mdef, el, item);\n\n  // apply svg css styles\n  // note: element may be modified by 'extra' method\n  this.style(element, item);\n};\n\nfunction emit(name, value, ns) {\n  // early exit if value is unchanged\n  if (value === values[name]) return;\n\n  if (value != null) {\n    // if value is provided, update DOM attribute\n    if (ns) {\n      element.setAttributeNS(ns, name, value);\n    } else {\n      element.setAttribute(name, value);\n    }\n  } else {\n    // else remove DOM attribute\n    if (ns) {\n      element.removeAttributeNS(ns, name);\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  // note current value for future comparison\n  values[name] = value;\n}\n\nprototype.style = function(el, o) {\n  if (o == null) return;\n  var i, n, prop, name, value;\n\n  for (i=0, n=SVG.styleProperties.length; i<n; ++i) {\n    prop = SVG.styleProperties[i];\n    value = o[prop];\n    if (value === values[prop]) continue;\n\n    name = SVG.styles[prop];\n    if (value == null) {\n      if (name === 'fill') {\n        el.style.setProperty(name, 'none');\n      } else {\n        el.style.removeProperty(name);\n      }\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        this._defs.gradient[value.id] = value;\n        value = 'url(' + href() + '#' + value.id + ')';\n      }\n      el.style.setProperty(name, value+'');\n    }\n\n    values[prop] = value;\n  }\n};\n\nfunction href() {\n  return typeof window !== 'undefined' ? window.location.href : '';\n}\n\nmodule.exports = SVGRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/SVGRenderer.js\n// module id = mP8n\n// module chunks = 0","var d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/time.js\n// module id = mgrV\n// module chunks = 0","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/index.js\n// module id = nIY2\n// module chunks = 0","\"use strict\";\nvar bin_1 = require('../../bin');\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar util_1 = require('../../util');\nvar bin;\n(function (bin_2) {\n    function parse(model) {\n        return model.reduce(function (binComponent, fieldDef, channel) {\n            var bin = model.fieldDef(channel).bin;\n            if (bin) {\n                var binTrans = util_1.extend({\n                    type: 'bin',\n                    field: fieldDef.field,\n                    output: {\n                        start: fielddef_1.field(fieldDef, { binSuffix: '_start' }),\n                        mid: fielddef_1.field(fieldDef, { binSuffix: '_mid' }),\n                        end: fielddef_1.field(fieldDef, { binSuffix: '_end' })\n                    }\n                }, typeof bin === 'boolean' ? {} : bin);\n                if (!binTrans.maxbins && !binTrans.step) {\n                    binTrans.maxbins = bin_1.autoMaxBins(channel);\n                }\n                var transform = [binTrans];\n                var isOrdinalColor = model.isOrdinalScale(channel) || channel === channel_1.COLOR;\n                if (isOrdinalColor) {\n                    transform.push({\n                        type: 'formula',\n                        field: fielddef_1.field(fieldDef, { binSuffix: '_range' }),\n                        expr: fielddef_1.field(fieldDef, { datum: true, binSuffix: '_start' }) +\n                            ' + \\'-\\' + ' +\n                            fielddef_1.field(fieldDef, { datum: true, binSuffix: '_end' })\n                    });\n                }\n                var key = util_1.hash(bin) + '_' + fieldDef.field + 'oc:' + isOrdinalColor;\n                binComponent[key] = transform;\n            }\n            return binComponent;\n        }, {});\n    }\n    bin_2.parseUnit = parse;\n    function parseFacet(model) {\n        var binComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(binComponent, childDataComponent.bin);\n            delete childDataComponent.bin;\n        }\n        return binComponent;\n    }\n    bin_2.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var binComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(binComponent, childDataComponent.bin);\n                delete childDataComponent.bin;\n            }\n        });\n        return binComponent;\n    }\n    bin_2.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.flatten(util_1.vals(component.bin));\n    }\n    bin_2.assemble = assemble;\n})(bin = exports.bin || (exports.bin = {}));\n//# sourceMappingURL=bin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/bin.js\n// module id = nOes\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/build/topojson.js\n// module id = nTOs\n// module chunks = 0","var util = require('./util'),\n    type = require('./import/type'),\n    stats = require('./stats'),\n    template = require('./template');\n\nmodule.exports = {\n  table:   formatTable,  // format a data table\n  summary: formatSummary // format a data table summary\n};\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nfunction formatTable(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + (POS[types[name]] || 'right')) +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n}\n\nfunction formatSummary(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/format-tables.js\n// module id = nXcD\n// module chunks = 0","module.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + '(' + obj + ')';\n      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';\n    }\n    return obj + '.' + name + (type < 0 ? '' : type === 0 ?\n      '()' :\n      '(' + args.slice(1).map(codegen).join(',') + ')');\n  }\n\n  function fn(name, cast, type) {\n    return function(args) {\n      return fncall(name, args, cast, type);\n    };\n  }\n\n  var DATE = 'new Date',\n      STRING = 'String',\n      REGEXP = 'RegExp';\n\n  return {\n    // MATH functions\n    'isNaN':    'isNaN',\n    'isFinite': 'isFinite',\n    'abs':      'Math.abs',\n    'acos':     'Math.acos',\n    'asin':     'Math.asin',\n    'atan':     'Math.atan',\n    'atan2':    'Math.atan2',\n    'ceil':     'Math.ceil',\n    'cos':      'Math.cos',\n    'exp':      'Math.exp',\n    'floor':    'Math.floor',\n    'log':      'Math.log',\n    'max':      'Math.max',\n    'min':      'Math.min',\n    'pow':      'Math.pow',\n    'random':   'Math.random',\n    'round':    'Math.round',\n    'sin':      'Math.sin',\n    'sqrt':     'Math.sqrt',\n    'tan':      'Math.tan',\n\n    'clamp': function(args) {\n      if (args.length < 3)\n        throw new Error('Missing arguments to clamp function.');\n      if (args.length > 3)\n        throw new Error('Too many arguments to clamp function.');\n      var a = args.map(codegen);\n      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';\n    },\n\n    // DATE functions\n    'now':             'Date.now',\n    'utc':             'Date.UTC',\n    'datetime':        DATE,\n    'date':            fn('getDate', DATE, 0),\n    'day':             fn('getDay', DATE, 0),\n    'year':            fn('getFullYear', DATE, 0),\n    'month':           fn('getMonth', DATE, 0),\n    'hours':           fn('getHours', DATE, 0),\n    'minutes':         fn('getMinutes', DATE, 0),\n    'seconds':         fn('getSeconds', DATE, 0),\n    'milliseconds':    fn('getMilliseconds', DATE, 0),\n    'time':            fn('getTime', DATE, 0),\n    'timezoneoffset':  fn('getTimezoneOffset', DATE, 0),\n    'utcdate':         fn('getUTCDate', DATE, 0),\n    'utcday':          fn('getUTCDay', DATE, 0),\n    'utcyear':         fn('getUTCFullYear', DATE, 0),\n    'utcmonth':        fn('getUTCMonth', DATE, 0),\n    'utchours':        fn('getUTCHours', DATE, 0),\n    'utcminutes':      fn('getUTCMinutes', DATE, 0),\n    'utcseconds':      fn('getUTCSeconds', DATE, 0),\n    'utcmilliseconds': fn('getUTCMilliseconds', DATE, 0),\n\n    // shared sequence functions\n    'length':      fn('length', null, -1),\n    'indexof':     fn('indexOf', null),\n    'lastindexof': fn('lastIndexOf', null),\n\n    // STRING functions\n    'parseFloat':  'parseFloat',\n    'parseInt':    'parseInt',\n    'upper':       fn('toUpperCase', STRING, 0),\n    'lower':       fn('toLowerCase', STRING, 0),\n    'slice':       fn('slice', STRING),\n    'substring':   fn('substring', STRING),\n    'replace':     fn('replace', STRING),\n\n    // REGEXP functions\n    'regexp':  REGEXP,\n    'test':    fn('test', REGEXP),\n\n    // Control Flow functions\n    'if': function(args) {\n        if (args.length < 3)\n          throw new Error('Missing arguments to if function.');\n        if (args.length > 3)\n          throw new Error('Too many arguments to if function.');\n        var a = args.map(codegen);\n        return '('+a[0]+'?'+a[1]+':'+a[2]+')';\n      }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-expression/src/functions.js\n// module id = nj7R\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('./aggregate');\nvar scale_1 = require('./scale');\nvar timeunit_1 = require('./timeunit');\nvar type_1 = require('./type');\nvar util_1 = require('./util');\nexports.aggregate = {\n    type: 'string',\n    enum: aggregate_1.AGGREGATE_OPS,\n    supportedEnums: {\n        quantitative: aggregate_1.AGGREGATE_OPS,\n        ordinal: ['median', 'min', 'max'],\n        nominal: [],\n        temporal: ['mean', 'median', 'min', 'max'],\n        '': ['count']\n    },\n    supportedTypes: util_1.toMap([type_1.QUANTITATIVE, type_1.NOMINAL, type_1.ORDINAL, type_1.TEMPORAL, ''])\n};\nfunction field(fieldDef, opt) {\n    if (opt === void 0) { opt = {}; }\n    var prefix = (opt.datum ? 'datum.' : '') + (opt.prefn || '');\n    var suffix = opt.suffix || '';\n    var field = fieldDef.field;\n    if (isCount(fieldDef)) {\n        return prefix + 'count' + suffix;\n    }\n    else if (opt.fn) {\n        return prefix + opt.fn + '_' + field + suffix;\n    }\n    else if (!opt.nofn && fieldDef.bin) {\n        var binSuffix = opt.binSuffix || (opt.scaleType === scale_1.ScaleType.ORDINAL ?\n            '_range' :\n            '_start');\n        return prefix + 'bin_' + field + binSuffix;\n    }\n    else if (!opt.nofn && !opt.noAggregate && fieldDef.aggregate) {\n        return prefix + fieldDef.aggregate + '_' + field + suffix;\n    }\n    else if (!opt.nofn && fieldDef.timeUnit) {\n        return prefix + fieldDef.timeUnit + '_' + field + suffix;\n    }\n    else {\n        return prefix + field;\n    }\n}\nexports.field = field;\nfunction _isFieldDimension(fieldDef) {\n    return util_1.contains([type_1.NOMINAL, type_1.ORDINAL], fieldDef.type) || !!fieldDef.bin ||\n        (fieldDef.type === type_1.TEMPORAL && !!fieldDef.timeUnit);\n}\nfunction isDimension(fieldDef) {\n    return fieldDef && fieldDef.field && _isFieldDimension(fieldDef);\n}\nexports.isDimension = isDimension;\nfunction isMeasure(fieldDef) {\n    return fieldDef && fieldDef.field && !_isFieldDimension(fieldDef);\n}\nexports.isMeasure = isMeasure;\nfunction count() {\n    return { field: '*', aggregate: aggregate_1.AggregateOp.COUNT, type: type_1.QUANTITATIVE };\n}\nexports.count = count;\nfunction isCount(fieldDef) {\n    return fieldDef.aggregate === aggregate_1.AggregateOp.COUNT;\n}\nexports.isCount = isCount;\nfunction cardinality(fieldDef, stats, filterNull) {\n    if (filterNull === void 0) { filterNull = {}; }\n    var stat = stats[fieldDef.field], type = fieldDef.type;\n    if (fieldDef.bin) {\n        var bin_1 = fieldDef.bin;\n        var maxbins = (typeof bin_1 === 'boolean') ? undefined : bin_1.maxbins;\n        if (maxbins === undefined) {\n            maxbins = 10;\n        }\n        var bins = util_1.getbins(stat, maxbins);\n        return (bins.stop - bins.start) / bins.step;\n    }\n    if (type === type_1.TEMPORAL) {\n        var timeUnit = fieldDef.timeUnit;\n        switch (timeUnit) {\n            case timeunit_1.TimeUnit.SECONDS: return 60;\n            case timeunit_1.TimeUnit.MINUTES: return 60;\n            case timeunit_1.TimeUnit.HOURS: return 24;\n            case timeunit_1.TimeUnit.DAY: return 7;\n            case timeunit_1.TimeUnit.DATE: return 31;\n            case timeunit_1.TimeUnit.MONTH: return 12;\n            case timeunit_1.TimeUnit.QUARTER: return 4;\n            case timeunit_1.TimeUnit.YEAR:\n                var yearstat = stats['year_' + fieldDef.field];\n                if (!yearstat) {\n                    return null;\n                }\n                return yearstat.distinct -\n                    (stat.missing > 0 && filterNull[type] ? 1 : 0);\n        }\n    }\n    if (fieldDef.aggregate) {\n        return 1;\n    }\n    return stat.distinct -\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\n}\nexports.cardinality = cardinality;\nfunction title(fieldDef, config) {\n    if (fieldDef.title != null) {\n        return fieldDef.title;\n    }\n    if (isCount(fieldDef)) {\n        return config.countTitle;\n    }\n    var fn = fieldDef.aggregate || fieldDef.timeUnit || (fieldDef.bin && 'bin');\n    if (fn) {\n        return fn.toString().toUpperCase() + '(' + fieldDef.field + ')';\n    }\n    else {\n        return fieldDef.field;\n    }\n}\nexports.title = title;\n//# sourceMappingURL=fielddef.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/fielddef.js\n// module id = o+e1\n// module chunks = 0","module.exports = {\n  Handler:  require('./CanvasHandler'),\n  Renderer: require('./CanvasRenderer')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/index.js\n// module id = oCE4\n// module chunks = 0","var sg = require('vega-scenegraph').render,\n    canvas = sg.canvas,\n    svg = sg.svg.string,\n    View = require('./View');\n\nfunction HeadlessView(width, height, model) {\n  View.call(this, width, height, model);\n  this._type = 'canvas';\n  this._renderers = {canvas: canvas, svg: svg};\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return (this._type === 'canvas') ? this._renderer.canvas() : null;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n\n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view.canvas());\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  if (this._type !== 'canvas') return null;\n  if (r.pendingImages() > 0) { wait(); } else { callback(this.canvas()); }\n};\n\nprototype.svg = function() {\n  return (this._type === 'svg') ? this._renderer.svg() : null;\n};\n\nprototype.initialize = function() {\n  var w = this._width,\n      h = this._height,\n      bg  = this._bgcolor,\n      pad = this._padding,\n      config = this.model().config();\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = (this._renderer || new this._io.Renderer(config.load))\n    .initialize(null, w, h, pad)\n    .background(bg);\n\n  return (this._repaint = true, this);\n};\n\nmodule.exports = HeadlessView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/HeadlessView.js\n// module id = oCPx\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar formula;\n(function (formula_1) {\n    function parse(model) {\n        return (model.transform().calculate || []).reduce(function (formulaComponent, formula) {\n            formulaComponent[util_1.hash(formula)] = formula;\n            return formulaComponent;\n        }, {});\n    }\n    formula_1.parseUnit = parse;\n    function parseFacet(model) {\n        var formulaComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(formulaComponent, childDataComponent.calculate);\n            delete childDataComponent.calculate;\n        }\n        return formulaComponent;\n    }\n    formula_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var formulaComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source && childDataComponent.calculate) {\n                util_1.extend(formulaComponent || {}, childDataComponent.calculate);\n                delete childDataComponent.calculate;\n            }\n        });\n        return formulaComponent;\n    }\n    formula_1.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.vals(component.calculate).reduce(function (transform, formula) {\n            transform.push(util_1.extend({ type: 'formula' }, formula));\n            return transform;\n        }, []);\n    }\n    formula_1.assemble = assemble;\n})(formula = exports.formula || (exports.formula = {}));\n//# sourceMappingURL=formula.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/formula.js\n// module id = pAWG\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Bounds = require('../../util/Bounds'),\n    ImageLoader = require('../../util/ImageLoader'),\n    Canvas = require('../../util/canvas'),\n    Renderer = require('../Renderer'),\n    marks = require('./marks');\n\nfunction CanvasRenderer(loadConfig) {\n  Renderer.call(this);\n  this._loader = new ImageLoader(loadConfig);\n}\n\nCanvasRenderer.RETINA = true;\n\nvar base = Renderer.prototype;\nvar prototype = (CanvasRenderer.prototype = Object.create(base));\nprototype.constructor = CanvasRenderer;\n\nprototype.initialize = function(el, width, height, padding) {\n  this._canvas = Canvas.instance(width, height);\n  if (el) {\n    DOM.clear(el, 0).appendChild(this._canvas);\n    this._canvas.setAttribute('class', 'marks');\n  }\n  return base.initialize.call(this, el, width, height, padding);\n};\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  Canvas.resize(this._canvas, this._width, this._height,\n    this._padding, CanvasRenderer.RETINA);\n  return this;\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.context = function() {\n  return this._canvas ? this._canvas.getContext('2d') : null;\n};\n\nprototype.pendingImages = function() {\n  return this._loader.pending();\n};\n\nfunction clipToBounds(g, items) {\n  if (!items) return null;\n\n  var b = new Bounds(), i, n, item, mark, group;\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    mark = item.mark;\n    group = mark.group;\n    item = marks[mark.marktype].nested ? mark : item;\n    b.union(translate(item.bounds, group));\n    if (item['bounds:prev']) {\n      b.union(translate(item['bounds:prev'], group));\n    }\n  }\n  b.round();\n\n  g.beginPath();\n  g.rect(b.x1, b.y1, b.width(), b.height());\n  g.clip();\n\n  return b;\n}\n\nfunction translate(bounds, group) {\n  if (group == null) return bounds;\n  var b = bounds.clone();\n  for (; group != null; group = group.mark.group) {\n    b.translate(group.x || 0, group.y || 0);\n  }\n  return b;\n}\n\nprototype.render = function(scene, items) {\n  var g = this.context(),\n      p = this._padding,\n      w = this._width + p.left + p.right,\n      h = this._height + p.top + p.bottom,\n      b;\n\n  // setup\n  this._scene = scene; // cache scene for async redraw\n  g.save();\n  b = clipToBounds(g, items);\n  this.clear(-p.left, -p.top, w, h);\n\n  // render\n  this.draw(g, scene, b);\n  \n  // takedown\n  g.restore();\n  this._scene = null; // clear scene cache\n\n  return this;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var mark = marks[scene.marktype];\n  mark.draw.call(this, ctx, scene, bounds);\n};\n\nprototype.clear = function(x, y, w, h) {\n  var g = this.context();\n  g.clearRect(x, y, w, h);\n  if (this._bgcolor != null) {\n    g.fillStyle = this._bgcolor;\n    g.fillRect(x, y, w, h); \n  }\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = this._scene;\n  return this._loader.loadImage(uri, function() {\n    renderer.renderAsync(scene);\n  });\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 10);\n};\n\nmodule.exports = CanvasRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/CanvasRenderer.js\n// module id = pEEJ\n// module chunks = 0","var d3 = require('d3'),\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    ChangeSet = df.ChangeSet,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  this._prev = null;\n  this._interactive = false;\n  this._setup = true;\n  this._nodes  = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  Transform.addParameters(this, {\n    size: {type: 'array<value>', default: require('./screen').size},\n    bound: {type: 'value', default: true},\n    links: {type: 'data'},\n\n    // TODO: for now force these to be value params only (pun-intended)\n    // Can update to include fields after Parameter refactoring.\n    linkStrength: {type: 'value', default: 1},\n    linkDistance: {type: 'value', default: 20},\n    charge: {type: 'value', default: -30},\n\n    chargeDistance: {type: 'value', default: Infinity},\n    friction: {type: 'value', default: 0.9},\n    theta: {type: 'value', default: 0.8},\n    gravity: {type: 'value', default: 0.1},\n    alpha: {type: 'value', default: 0.1},\n    iterations: {type: 'value', default: 500},\n\n    interactive: {type: 'value', default: this._interactive},\n    active: {type: 'value', default: this._prev},\n    fixed: {type: 'data'}\n  });\n\n  this._output = {\n    'x': 'layout_x',\n    'y': 'layout_y'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Force.prototype = Object.create(Transform.prototype));\nprototype.constructor = Force;\n\nprototype.transform = function(nodeInput, reset) {\n  log.debug(nodeInput, ['force']);\n  reset = reset - (nodeInput.signals.active ? 1 : 0);\n\n  // get variables\n  var interactive = this.param('interactive'),\n      linkSource = this.param('links').source,\n      linkInput = linkSource.last(),\n      active = this.param('active'),\n      output = this._output,\n      layout = this._layout,\n      nodes = this._nodes,\n      links = this._links;\n\n  // configure nodes, links and layout\n  if (linkInput.stamp < nodeInput.stamp) linkInput = null;\n  this.configure(nodeInput, linkInput, interactive, reset);\n\n  // run batch layout\n  if (!interactive) {\n    var iterations = this.param('iterations');\n    for (var i=0; i<iterations; ++i) layout.tick();\n    layout.stop();\n  }\n\n  // update node positions\n  this.update(active);\n\n  // re-up alpha on parameter change\n  if (reset || active !== this._prev && active && active.update) {\n    layout.alpha(this.param('alpha')); // re-start layout\n  }\n\n  // update active node status,\n  if (active !== this._prev) {\n    this._prev = active;\n  }\n\n  // process removed nodes or edges\n  if (nodeInput.rem.length) {\n    layout.nodes(this._nodes = Tuple.idFilter(nodes, nodeInput.rem));\n  }\n  if (linkInput && linkInput.rem.length) {\n    layout.links(this._links = Tuple.idFilter(links, linkInput.rem));\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nprototype.configure = function(nodeInput, linkInput, interactive, reset) {\n  // check if we need to run configuration\n  var layout = this._layout,\n      update = this._setup || nodeInput.add.length ||\n            linkInput && linkInput.add.length ||\n            interactive !== this._interactive ||\n            this.param('charge') !== layout.charge() ||\n            this.param('linkStrength') !== layout.linkStrength() ||\n            this.param('linkDistance') !== layout.linkDistance();\n\n  if (update || reset) {\n    // a parameter changed, so update tick-only parameters\n    layout\n      .size(this.param('size'))\n      .chargeDistance(this.param('chargeDistance'))\n      .theta(this.param('theta'))\n      .gravity(this.param('gravity'))\n      .friction(this.param('friction'));\n  }\n\n  if (!update) return; // if no more updates needed, return now\n\n  this._setup = false;\n  this._interactive = interactive;\n\n  var force = this,\n      graph = this._graph,\n      nodes = this._nodes,\n      links = this._links, a, i;\n\n  // process added nodes\n  for (a=nodeInput.add, i=0; i<a.length; ++i) {\n    nodes.push({tuple: a[i]});\n  }\n\n  // process added edges\n  if (linkInput) for (a=linkInput.add, i=0; i<a.length; ++i) {\n    // TODO add configurable source/target accessors\n    // TODO support lookup by node id\n    // TODO process 'mod' of edge source or target?\n    links.push({\n      tuple:  a[i],\n      source: nodes[a[i].source],\n      target: nodes[a[i].target]\n    });\n  }\n\n  // setup handler for force layout tick events\n  var tickHandler = !interactive ? null : function() {\n    // re-schedule the transform, force reflow\n    graph.propagate(ChangeSet.create(null, true), force);\n  };\n\n  // configure the rest of the layout\n  layout\n    .linkStrength(this.param('linkStrength'))\n    .linkDistance(this.param('linkDistance'))\n    .charge(this.param('charge'))\n    .nodes(nodes)\n    .links(links)\n    .on('tick', tickHandler)\n    .start().alpha(this.param('alpha'));\n};\n\nprototype.update = function(active) {\n  var output = this._output,\n      bound = this.param('bound'),\n      fixed = this.param('fixed'),\n      size = this.param('size'),\n      nodes = this._nodes,\n      lut = {}, id, i, n, t, x, y;\n\n  if (fixed && fixed.source) {\n    // TODO: could cache and update as needed?\n    fixed = fixed.source.values();\n    for (i=0, n=fixed.length; i<n; ++i) {\n      lut[fixed[i].id] = 1;\n    }\n  }\n\n  for (i=0; i<nodes.length; ++i) {\n    n = nodes[i];\n    t = n.tuple;\n    id = t._id;\n\n    if (active && active.id === id) {\n      n.fixed = 1;\n      if (active.update) {\n        n.x = n.px = active.x;\n        n.y = n.py = active.y;\n      }\n    } else {\n      n.fixed = lut[id] || 0;\n    }\n\n    x = bound ? Math.max(0, Math.min(n.x, size[0])) : n.x;\n    y = bound ? Math.max(0, Math.min(n.y, size[1])) : n.y;\n    Tuple.set(t, output.x, x);\n    Tuple.set(t, output.y, y);\n  }\n};\n\nmodule.exports = Force;\n\nForce.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Force transform\",\n  \"description\": \"Performs force-directed layout for network data.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"force\"]},\n    \"size\": {\n      \"description\": \"The dimensions [width, height] of this force layout.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"minItems\": 2,\n          \"maxItems\": 2,\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n\n      \"default\": [500, 500]\n    },\n    \"links\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the link (edge) data set.\"\n    },\n    \"linkDistance\": {\n      \"description\": \"Determines the length of edges, in pixels.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 20\n    },\n    \"linkStrength\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"Determines the tension of edges (the spring constant).\",\n      \"default\": 1\n    },\n    \"charge\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The strength of the charge each node exerts.\",\n      \"default\": -30\n    },\n    \"chargeDistance\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum distance over which charge forces are applied.\",\n      \"default\": Infinity\n    },\n    \"iterations\": {\n      \"description\": \"The number of iterations to run the force directed layout.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 500\n    },\n    \"friction\": {\n      \"description\": \"The strength of the friction force used to stabilize the layout.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.9\n    },\n    \"theta\": {\n      \"description\": \"The theta parameter for the Barnes-Hut algorithm, which is used to compute charge forces between nodes.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.8\n    },\n    \"gravity\": {\n      \"description\": \"The strength of the pseudo-gravity force that pulls nodes towards the center of the layout area.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.1\n    },\n    \"alpha\": {\n      \"description\": \"A \\\"temperature\\\" parameter that determines how much node positions are adjusted at each step.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.1\n    },\n    \"interactive\": {\n      \"description\": \"Enables an interactive force-directed layout.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"active\": {\n      \"description\": \"A signal representing the active node.\",\n      \"$ref\": \"#/refs/signal\"\n    },\n    \"fixed\": {\n      \"description\": \"The name of a datasource containing the IDs of nodes with fixed positions.\",\n      \"type\": \"string\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"links\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Force.js\n// module id = pKLr\n// module chunks = 0","var util = require('../../util');\nvar d3_dsv = require('d3-dsv');\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3_dsv.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/dsv.js\n// module id = pYy3\n// module chunks = 0","module.exports = {\n  parse:  require('./parse'),\n  render: require('./render')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/path/index.js\n// module id = pfe9\n// module chunks = 0","var util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n\n    // increase step size if too many bins\n    while (Math.ceil(span/step) > maxb) { step *= base; }\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/bins/bins.js\n// module id = prMK\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar util_1 = require('../util');\nfunction initMarkConfig(mark, encoding, config) {\n    return util_1.extend(['filled', 'opacity', 'orient', 'align'].reduce(function (cfg, property) {\n        var value = config.mark[property];\n        switch (property) {\n            case 'filled':\n                if (value === undefined) {\n                    cfg[property] = mark !== mark_1.POINT && mark !== mark_1.LINE && mark !== mark_1.RULE;\n                }\n                break;\n            case 'opacity':\n                if (value === undefined) {\n                    if (util_1.contains([mark_1.POINT, mark_1.TICK, mark_1.CIRCLE, mark_1.SQUARE], mark)) {\n                        if (!encoding_1.isAggregate(encoding) || encoding_1.has(encoding, channel_1.DETAIL)) {\n                            cfg[property] = 0.7;\n                        }\n                    }\n                    if (mark === mark_1.AREA) {\n                        cfg[property] = 0.7;\n                    }\n                }\n                break;\n            case 'orient':\n                var xIsMeasure = fielddef_1.isMeasure(encoding.x) || fielddef_1.isMeasure(encoding.x2);\n                var yIsMeasure = fielddef_1.isMeasure(encoding.y) || fielddef_1.isMeasure(encoding.y2);\n                if (xIsMeasure && !yIsMeasure) {\n                    if (mark === mark_1.TICK) {\n                        cfg[property] = 'vertical';\n                    }\n                    else {\n                        cfg[property] = 'horizontal';\n                    }\n                }\n                else if (!xIsMeasure && yIsMeasure) {\n                    if (mark === mark_1.TICK) {\n                        cfg[property] = 'horizontal';\n                    }\n                    else {\n                        cfg[property] = 'vertical';\n                    }\n                }\n                break;\n            case 'align':\n                if (value === undefined) {\n                    cfg[property] = encoding_1.has(encoding, channel_1.X) ? 'center' : 'right';\n                }\n        }\n        return cfg;\n    }, {}), config.mark);\n}\nexports.initMarkConfig = initMarkConfig;\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/config.js\n// module id = pyUU\n// module chunks = 0","var bins = require('./bins'),\n    gen  = require('../generate'),\n    type = require('../import/type'),\n    util = require('../util'),\n    stats = require('../stats');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n\n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/bins/histogram.js\n// module id = qmQ9\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n      \n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.beginPath();\n      g.moveTo(x1, y1);\n      g.lineTo(x2, y2);\n      g.stroke();\n    }\n  }\n}\n\nfunction stroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : 1;\n  g.lineCap   = lc != null ? lc : 'butt';\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\nfunction hit(g, o, x, y) {\n  if (!g.isPointInStroke) return false;\n  stroke(g, o);\n  return g.isPointInStroke(x, y);\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick(hit)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/rule.js\n// module id = qnrb\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Tuple = df.Tuple,\n    Deps = df.Dependencies;\n\nvar Types = {\n  INSERT: \"insert\",\n  REMOVE: \"remove\",\n  UPSERT: \"upsert\",\n  TOGGLE: \"toggle\",\n  CLEAR:  \"clear\"\n};\n\nvar EMPTY = [];\n\nfunction filter(fields, value, src, dest) {\n  var splice = true, len = fields.length, i, j, f, v;\n  for (i = src.length - 1; i >= 0; --i) {\n    for (j=0; j<len; ++j) {\n      f = fields[j];\n      v = value && f(value) || value;\n      if (f(src[i]) !== v) {\n        splice = false;\n        break;\n      }\n    }\n\n    if (splice) dest.push.apply(dest, src.splice(i, 1));\n    splice = true;\n  }\n}\n\nfunction insert(input, datum, source) {\n  var t = Tuple.ingest(datum);\n  input.add.push(t);\n  source._data.push(t);\n}\n\nfunction parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null,\n      signalName  = signal ? signal[0] : null,\n      predicate   = def.predicate ? model.predicate(def.predicate.name || def.predicate) : null,\n      exprTrigger = def.test ? model.expr(def.test) : null,\n      reeval  = (predicate === null && exprTrigger === null),\n      isClear = def.type === Types.CLEAR,\n      fields  = dl.array(def.field || 'data'),\n      getters = fields.map(dl.accessor),\n      setters = fields.map(dl.mutator),\n      node = new Node(model).router(isClear);\n\n  node.evaluate = function(input) {\n    var db, sg;\n\n    if (predicate !== null) {  // TODO: predicate args\n      db = model.values(Deps.DATA, predicate.data || EMPTY);\n      sg = model.values(Deps.SIGNALS, predicate.signals || EMPTY);\n      reeval = predicate.call(predicate, {}, db, sg, model._predicates);\n    }\n\n    if (exprTrigger !== null) {\n      sg = model.values(Deps.SIGNALS, exprTrigger.globals || EMPTY);\n      reeval = exprTrigger.fn();\n    }\n\n    log.debug(input, [def.type+\"ing\", reeval]);\n    if (!reeval || (!isClear && !input.signals[signalName])) return input;\n\n    var value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        t = null, add = [], rem = [], up = 0, datum;\n\n    if (dl.isObject(value)) {\n      datum = value;\n      if (!def.field) {\n        fields = dl.keys(datum);\n        getters = fields.map(dl.accessor);\n        setters = fields.map(dl.mutator);\n      }\n    } else {\n      datum = {};\n      setters.forEach(function(f) { f(datum, value); });\n    }\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples.\n    if (def.type === Types.INSERT) {\n      insert(input, datum, d);\n    } else if (def.type === Types.REMOVE) {\n      filter(getters, value, input.mod, input.rem);\n      filter(getters, value, input.add, rem);\n      filter(getters, value, d._data, rem);\n    } else if (def.type === Types.UPSERT) {\n      input.mod.forEach(function(x) {\n        var every = getters.every(function(f) {\n          return f(x) === f(datum);\n        });\n\n        if (every) up = (dl.extend(x, datum), up+1);\n      });\n\n      if (up === 0) insert(input, datum, d);\n    } else if (def.type === Types.TOGGLE) {\n      // If tuples are in mod, remove them.\n      filter(getters, value, input.mod, rem);\n      input.rem.push.apply(input.rem, rem);\n\n      // If tuples are in add, they've been added to backing data source,\n      // but no downstream operators will have seen it yet.\n      filter(getters, value, input.add, add);\n\n      if (add.length || rem.length) {\n        d._data = d._data.filter(function(x) {\n          return rem.indexOf(x) < 0 && add.indexOf(x) < 0;\n        });\n      } else {\n        // If the tuples aren't seen in the changeset, add a new tuple.\n        // Note, tuple might be in input.rem, but we ignore this and just\n        // re-add a new tuple for simplicity.\n        input.add.push(t=Tuple.ingest(datum));\n        d._data.push(t);\n      }\n    } else if (def.type === Types.CLEAR) {\n      input.rem.push.apply(input.rem, input.mod.splice(0));\n      input.add.splice(0);\n      d._data.splice(0);\n    }\n\n    fields.forEach(function(f) { input.fields[f] = 1; });\n    return input;\n  };\n\n  if (signalName) node.dependency(Deps.SIGNALS, signalName);\n\n  if (predicate) {\n    node.dependency(Deps.DATA, predicate.data);\n    node.dependency(Deps.SIGNALS, predicate.signals);\n  }\n\n  if (exprTrigger) {\n    node.dependency(Deps.SIGNALS, exprTrigger.globals);\n    node.dependency(Deps.DATA,    exprTrigger.dataSources);\n  }\n\n  return node;\n}\n\nmodule.exports = parseModify;\nparseModify.schema = {\n  \"defs\": {\n    \"modify\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"oneOf\": [{\n          \"properties\": {\n            \"type\": {\"enum\": [\n              Types.INSERT, Types.REMOVE, Types.UPSERT, Types.TOGGLE\n            ]},\n            \"signal\": {\"type\": \"string\"},\n            \"field\": {\"type\": \"string\"}\n          },\n          \"required\": [\"type\", \"signal\"]\n        }, {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.CLEAR]},\n            \"predicate\": {\"type\": \"string\"}  // TODO predicate args\n          },\n          \"required\": [\"type\", \"predicate\"]\n        },\n        {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.CLEAR]},\n            \"test\": {\"type\": \"string\"}\n          },\n          \"required\": [\"type\", \"test\"]\n        }]\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/modify.js\n// module id = r7he\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    sourceX:  {type: 'field', default: '_source.layout_x'},\n    sourceY:  {type: 'field', default: '_source.layout_y'},\n    targetX:  {type: 'field', default: '_target.layout_x'},\n    targetY:  {type: 'field', default: '_target.layout_y'},\n    tension:  {type: 'value', default: 0.2},\n    shape:    {type: 'value', default: 'line'}\n  });\n\n  this._output = {'path': 'layout_path'};\n  return this.mutates(true);\n}\n\nvar prototype = (LinkPath.prototype = Object.create(Transform.prototype));\nprototype.constructor = LinkPath;\n\nfunction line(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'L' + tx + ',' + ty;\n}\n\nfunction curve(sx, sy, tx, ty, tension) {\n  var dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return 'M' + sx + ',' + sy +\n         'C' + (sx+ix) + ',' + (sy+iy) +\n         ' ' + (tx+iy) + ',' + (ty-ix) +\n         ' ' + tx + ',' + ty;\n}\n\nfunction cornerX(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'V' + ty + 'H' + tx;\n}\n\nfunction cornerY(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'H' + tx + 'V' + ty;\n}\n\nfunction cornerR(sa, sr, ta, tr) {\n  var sc = Math.cos(sa),\n      ss = Math.sin(sa),\n      tc = Math.cos(ta),\n      ts = Math.sin(ta),\n      sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +\n         ' ' + (sr*tc) + ',' + (sr*ts) +\n         'L' + (tr*tc) + ',' + (tr*ts);\n}\n\nfunction diagonalX(sx, sy, tx, ty) {\n  var m = (sx + tx) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + m  + ',' + sy +\n         ' ' + m  + ',' + ty +\n         ' ' + tx + ',' + ty;\n}\n\nfunction diagonalY(sx, sy, tx, ty) {\n  var m = (sy + ty) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + sx + ',' + m +\n         ' ' + tx + ',' + m +\n         ' ' + tx + ',' + ty;\n}\n\nfunction diagonalR(sa, sr, ta, tr) {\n  var sc = Math.cos(sa),\n      ss = Math.sin(sa),\n      tc = Math.cos(ta),\n      ts = Math.sin(ta),\n      mr = (sr + tr) / 2;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'C' + (mr*sc) + ',' + (mr*ss) +\n         ' ' + (mr*tc) + ',' + (mr*ts) +\n         ' ' + (tr*tc) + ',' + (tr*ts);\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  cornerX:   cornerX,\n  cornerY:   cornerY,\n  cornerR:   cornerR,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY,\n  diagonalR: diagonalR\n};\n\nprototype.transform = function(input) {\n  log.debug(input, ['linkpath']);\n\n  var output = this._output,\n      shape = shapes[this.param('shape')] || shapes.line,\n      sourceX = this.param('sourceX').accessor,\n      sourceY = this.param('sourceY').accessor,\n      targetX = this.param('targetX').accessor,\n      targetY = this.param('targetY').accessor,\n      tension = this.param('tension');\n\n  function set(t) {\n    var path = shape(sourceX(t), sourceY(t), targetX(t), targetY(t), tension);\n    Tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n\nLinkPath.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"LinkPath transform\",\n  \"description\": \"Computes a path definition for connecting nodes within a node-link network or tree diagram.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"linkpath\"]},\n    \"sourceX\": {\n      \"description\": \"The data field that references the source x-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_source\"\n    },\n    \"sourceY\": {\n      \"description\": \"The data field that references the source y-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_source\"\n    },\n    \"targetX\": {\n      \"description\": \"The data field that references the target x-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_target\"\n    },\n    \"targetY\": {\n      \"description\": \"The data field that references the target y-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_target\"\n    },\n    \"tension\": {\n      \"description\": \"A tension parameter for the \\\"tightness\\\" of \\\"curve\\\"-shaped links.\",\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 1\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0.2\n    },\n    \"shape\": {\n      \"description\": \"The path shape to use\",\n      \"oneOf\": [\n        {\"enum\": [\"line\", \"curve\", \"cornerX\", \"cornerY\", \"cornerR\", \"diagonalX\", \"diagonalY\", \"diagonalR\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"line\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/LinkPath.js\n// module id = rCVn\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar point;\n(function (point) {\n    function markType() {\n        return 'symbol';\n    }\n    point.markType = markType;\n    function properties(model, fixedShape) {\n        var p = {};\n        var config = model.config();\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        p.size = size(model.encoding().size, model.scaleName(channel_1.SIZE), model.scale(channel_1.SIZE), config);\n        p.shape = shape(model.encoding().shape, model.scaleName(channel_1.SHAPE), model.scale(channel_1.SHAPE), config, fixedShape);\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    point.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(fieldDef, scaleName, scale, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { scaleType: scale.type })\n                };\n            }\n            else if (fieldDef.value !== undefined) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.mark.size };\n    }\n    function shape(fieldDef, scaleName, scale, config, fixedShape) {\n        if (fixedShape) {\n            return { value: fixedShape };\n        }\n        else if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { scaleType: scale.type })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.mark.shape };\n    }\n})(point = exports.point || (exports.point = {}));\nvar circle;\n(function (circle) {\n    function markType() {\n        return 'symbol';\n    }\n    circle.markType = markType;\n    function properties(model) {\n        return point.properties(model, 'circle');\n    }\n    circle.properties = properties;\n    function labels(model) {\n        return undefined;\n    }\n    circle.labels = labels;\n})(circle = exports.circle || (exports.circle = {}));\nvar square;\n(function (square) {\n    function markType() {\n        return 'symbol';\n    }\n    square.markType = markType;\n    function properties(model) {\n        return point.properties(model, 'square');\n    }\n    square.properties = properties;\n    function labels(model) {\n        return undefined;\n    }\n    square.labels = labels;\n})(square = exports.square || (exports.square = {}));\n//# sourceMappingURL=point.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/point.js\n// module id = rKP5\n// module chunks = 0","var d3 = require('d3'),\n    $ = require('vega').util.mutator;\n\nmodule.exports = {\n  init: function(el, param, spec) {\n    return (rewrite(param, spec), handle(el, param));\n  },\n  bind: function(param, view) {\n    param.dom.forEach(function(el) { el.__vega__ = view; });\n    view.onSignal(param.dom[0].name, function(k, v) { param.set(v); });\n  }\n};\n\n// spec re-write\n\nfunction rewrite(param, spec) {\n  // add signal to top-level if not defined\n  var sg = spec.signals || (spec.signals = []);\n  for (var i=0; i<sg.length; ++i) {\n    if (sg[i].name === param.signal) break;\n  }\n  if (i === sg.length) {\n    sg.push({\n      name: param.signal,\n      init: param.value\n    });\n  }\n\n  // replace values for re-write entries\n  (param.rewrite || []).forEach(function(path) {\n    $(path)(spec, {signal: param.signal});\n  });\n}\n\n// HTML output handlers\n\nfunction handle(el, param) {\n  var p = el.append('div')\n    .attr('class', 'vega-param');\n\n  p.append('span')\n    .attr('class', 'vega-param-name')\n    .text(param.name || param.signal);\n\n  var input = form;\n  switch (param.type) {\n    case 'checkbox': input = checkbox; break;\n    case 'select':   input = select; break;\n    case 'radio':    input = radio; break;\n    case 'range':    input = range; break;\n  }\n\n  return input(p, param);\n}\n\nfunction form(el, param) {\n  var fm = el.append('input')\n    .on('input', update);\n\n  for (var key in param) {\n    if (key === 'signal' || key === 'rewrite') continue;\n    fm.attr(key, param[key]);\n  }\n  fm.attr('name', param.signal);\n\n  var node = fm.node();\n  return {\n    dom: [node],\n    set: function(value) { node.value = value; }\n  };\n}\n\nfunction checkbox(el, param) {\n  var cb = el.append('input')\n    .on('change', function() { update.call(this, this.checked); })\n    .attr('type', 'checkbox')\n    .attr('name', param.signal)\n    .attr('checked', param.value || null)\n    .node();\n\n  return {\n    dom: [cb],\n    set: function(value) { cb.checked = !!value || null; }\n  };\n}\n\nfunction select(el, param) {\n  var sl = el.append('select')\n    .attr('name', param.signal)\n    .on('change', function() {\n      update.call(this, this.options[this.selectedIndex].__data__);\n    });\n\n  sl.selectAll('option')\n    .data(param.options)\n   .enter().append('option')\n    .attr('value', vg.util.identity)\n    .attr('selected', function(x) { return x === param.value || null; })\n    .text(vg.util.identity);\n  \n  var node = sl.node();\n  return {\n    dom: [node],\n    set: function(value) {\n      var idx = param.options.indexOf(value);\n      node.selectedIndex = idx;\n    }\n  };\n}\n\nfunction radio(el, param) {\n  var rg = el.append('span')\n    .attr('class', 'vega-param-radio');\n\n  var nodes = param.options.map(function(option) {\n    var id = 'vega-option-' + param.signal + '-' + option;\n\n    var rb = rg.append('input')\n      .datum(option)\n      .on('change', update)\n      .attr('id', id)\n      .attr('type', 'radio')\n      .attr('name', param.signal)\n      .attr('value', option)\n      .attr('checked', option === param.value || null);\n\n    rg.append('label')\n      .attr('for', id)\n      .text(option);\n\n    return rb.node();\n  });\n\n  return {\n    dom: nodes,\n    set: function(value) {\n      for (var i=0; i<nodes.length; ++i) {\n        if (nodes[i].value === value) {\n          nodes[i].checked = true;\n        }\n      }\n    }\n  };\n}\n\nfunction range(el, param) {\n  var val = param.value !== undefined ? param.value :\n    ((+param.max) + (+param.min)) / 2;\n\n  var rn = el.append('input')\n    .on('input', function() {\n      lbl.text(this.value);\n      update.call(this, +this.value);\n    })\n    .attr('type', 'range')\n    .attr('name', param.signal)\n    .attr('value', val)\n    .attr('min', param.min)\n    .attr('max', param.max)\n    .attr('step', param.step || vg.util.bins({\n      min: param.min,\n      max: param.max,\n      maxbins: 100\n    }).step);\n\n  var lbl = el.append('label')\n    .attr('class', 'vega-range')\n    .text(val);\n\n  var node = rn.node();\n  return {\n    dom: [node],\n    set: function(value) {\n      node.value = value;\n      lbl.text(value);\n    }\n  };\n}\n\nfunction update(value) {\n  if (value === undefined) value = this.__data__ || d3.event.target.value;\n  this.__vega__.signal(this.name, value).update();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-embed/src/parameter.js\n// module id = rVSZ\n// module chunks = 0","var text = require('../../util/text'),\n    SVG = require('../../util/svg'),\n    symbolTypes = SVG.symbolTypes,\n    textAlign = SVG.textAlign,\n    path = SVG.path;\n\nfunction translateItem(o) {\n  return translate(o.x || 0, o.y || 0);\n}\n\nfunction translate(x, y) {\n  return 'translate(' + x + ',' + y + ')';\n}\n\nmodule.exports = {\n  arc: {\n    tag:  'path',\n    type: 'arc',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('d', path.arc(o));\n    }\n  },\n  area: {\n    tag:  'path',\n    type: 'area',\n    nest: true,\n    attr: function(emit, o) {\n      var items = o.mark.items;\n      if (items.length) emit('d', path.area(items));\n    }\n  },\n  group: {\n    tag:  'g',\n    type: 'group',\n    attr: function(emit, o, renderer) {\n      var id = null, defs, c;\n      emit('transform', translateItem(o));\n      if (o.clip) {\n        defs = renderer._defs;\n        id = o.clip_id || (o.clip_id = 'clip' + defs.clip_id++);\n        c = defs.clipping[id] || (defs.clipping[id] = {id: id});\n        c.width = o.width || 0;\n        c.height = o.height || 0;\n      }\n      emit('clip-path', id ? ('url(#' + id + ')') : null);\n    },\n    background: function(emit, o) {\n      emit('class', 'background');\n      emit('width', o.width || 0);\n      emit('height', o.height || 0);\n    }\n  },\n  image: {\n    tag:  'image',\n    type: 'image',\n    attr: function(emit, o, renderer) {\n      var x = o.x || 0,\n          y = o.y || 0,\n          w = o.width || 0,\n          h = o.height || 0,\n          url = renderer.imageURL(o.url);\n\n      x = x - (o.align === 'center' ? w/2 : o.align === 'right' ? w : 0);\n      y = y - (o.baseline === 'middle' ? h/2 : o.baseline === 'bottom' ? h : 0);\n\n      emit('href', url, 'http://www.w3.org/1999/xlink', 'xlink:href');\n      emit('transform', translate(x, y));\n      emit('width', w);\n      emit('height', h);\n    }\n  },\n  line: {\n    tag:  'path',\n    type: 'line',\n    nest: true,\n    attr: function(emit, o) {\n      var items = o.mark.items;\n      if (items.length) emit('d', path.line(items));\n    }\n  },\n  path: {\n    tag:  'path',\n    type: 'path',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('d', o.path);\n    }\n  },\n  rect: {\n    tag:  'rect',\n    type: 'rect',\n    nest: false,\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('width', o.width || 0);\n      emit('height', o.height || 0);\n    }\n  },\n  rule: {\n    tag:  'line',\n    type: 'rule',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('x2', o.x2 != null ? o.x2 - (o.x||0) : 0);\n      emit('y2', o.y2 != null ? o.y2 - (o.y||0) : 0);\n    }\n  },\n  symbol: {\n    tag:  'path',\n    type: 'symbol',\n    attr: function(emit, o) {\n      var pathStr = !o.shape || symbolTypes[o.shape] ?\n        path.symbol(o) : path.resize(o.shape, o.size);\n\n      emit('transform', translateItem(o));\n      emit('d', pathStr);\n    }\n  },\n  text: {\n    tag:  'text',\n    type: 'text',\n    nest: false,\n    attr: function(emit, o) {\n      var dx = (o.dx || 0),\n          dy = (o.dy || 0) + text.offset(o),\n          x = (o.x || 0),\n          y = (o.y || 0),\n          a = o.angle || 0,\n          r = o.radius || 0, t;\n\n      if (r) {\n        t = (o.theta || 0) - Math.PI/2;\n        x += r * Math.cos(t);\n        y += r * Math.sin(t);\n      }\n\n      emit('text-anchor', textAlign[o.align] || 'start');\n\n      if (a) {\n        t = translate(x, y) + ' rotate('+a+')';\n        if (dx || dy) t += ' ' + translate(dx, dy);\n      } else {\n        t = translate(x+dx, y+dy);\n      }\n      emit('transform', t);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/marks.js\n// module id = rfWk\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    scene = require('vega-scenegraph'),\n    Node = df.Node, // jshint ignore:line\n    log = require('vega-logging'),\n    bound = scene.bound,\n    Bounds = scene.Bounds,\n    Encoder = require('./Encoder');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph)\n    .router(true)\n    .reflows(true)\n    .mutates(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  log.debug(input, ['bounds', this._mark.marktype]);\n\n  var mark  = this._mark,\n      type  = mark.marktype,\n      isGrp = type === 'group',\n      items = mark.items,\n      hasLegends = dl.array(mark.def.legends).length > 0,\n      bounds  = mark.bounds,\n      rebound = !bounds || input.rem.length,\n      i, ilen, j, jlen, group, legend;\n\n  if (type === 'line' || type === 'area') {\n    bound.mark(mark, null, isGrp && !hasLegends);\n  } else {\n    input.add.forEach(function(item) {\n      bound.item(item);\n      rebound = rebound || (bounds && !bounds.encloses(item.bounds));\n    });\n\n    input.mod.forEach(function(item) {\n      rebound = rebound || (bounds && bounds.alignsWith(item.bounds));\n      bound.item(item);\n    });\n\n    if (rebound) {\n      bounds = mark.bounds && mark.bounds.clear() || (mark.bounds = new Bounds());\n      for (i=0, ilen=items.length; i<ilen; ++i) bounds.union(items[i].bounds);\n    }\n  }\n\n  if (isGrp && hasLegends) {\n    for (i=0, ilen=items.length; i<ilen; ++i) {\n      group = items[i];\n      group._legendPositions = null;\n      for (j=0, jlen=group.legendItems.length; j<jlen; ++j) {\n        legend = group.legendItems[j];\n        Encoder.update(this._graph, input.trans, 'legendPosition', legend.items, input.dirty);\n        bound.mark(legend, null, false);\n      }\n    }\n\n    bound.mark(mark, null, true);\n  }\n\n  return df.ChangeSet.create(input, true);\n};\n\nmodule.exports = Bounder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Bounder.js\n// module id = rnWk\n// module chunks = 0","// create a new DOM element\nfunction create(doc, tag, ns) {\n  return ns ? doc.createElementNS(ns, tag) : doc.createElement(tag);\n}\n\n// remove element from DOM\n// recursively remove parent elements if empty\nfunction remove(el) {\n  if (!el) return;\n  var p = el.parentNode;\n  if (p) {\n    p.removeChild(el);\n    if (!p.childNodes || !p.childNodes.length) remove(p);\n  }\n}\n\nmodule.exports = {\n  // find first child element with matching tag\n  find: function(el, tag) {\n    tag = tag.toLowerCase();\n    for (var i=0, n=el.childNodes.length; i<n; ++i) {\n      if (el.childNodes[i].tagName.toLowerCase() === tag) {\n        return el.childNodes[i];\n      }\n    }\n  },\n  // retrieve child element at given index\n  // create & insert if doesn't exist or if tag/className do not match\n  child: function(el, index, tag, ns, className, insert) {\n    var a, b;\n    a = b = el.childNodes[index];\n    if (!a || insert ||\n        a.tagName.toLowerCase() !== tag.toLowerCase() ||\n        className && a.getAttribute('class') != className) {\n      a = create(el.ownerDocument, tag, ns);\n      el.insertBefore(a, b || null);\n      if (className) a.setAttribute('class', className);\n    }\n    return a;\n  },\n  // remove all child elements at or above the given index\n  clear: function(el, index) {\n    var curr = el.childNodes.length;\n    while (curr > index) {\n      el.removeChild(el.childNodes[--curr]);\n    }\n    return el;\n  },\n  remove: remove,\n  // generate css class name for mark\n  cssClass: function(mark) {\n    return 'mark-' + mark.marktype + (mark.name ? ' '+mark.name : '');\n  },\n  // generate string for an opening xml tag\n  // tag: the name of the xml tag\n  // attr: hash of attribute name-value pairs to include\n  // raw: additional raw string to include in tag markup\n  openTag: function(tag, attr, raw) {\n    var s = '<' + tag, key, val;\n    if (attr) {\n      for (key in attr) {\n        val = attr[key];\n        if (val != null) {\n          s += ' ' + key + '=\"' + val + '\"';\n        }\n      }\n    }\n    if (raw) s += ' ' + raw;\n    return s + '>';\n  },\n  // generate string for closing xml tag\n  // tag: the name of the xml tag\n  closeTag: function(tag) {\n    return '</' + tag + '>';\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/dom.js\n// module id = sV93\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Geo = require('./Geo'),\n    Transform = require('./Transform');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    field: {type: 'field', default: null},\n  });\n\n  this._output = {\n    'path': 'layout_path'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (GeoPath.prototype = Object.create(Transform.prototype));\nprototype.constructor = GeoPath;\n\nprototype.transform = function(input) {\n  log.debug(input, ['geopath']);\n\n  var output = this._output,\n      geojson = this.param('field').accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    Tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\nGeoPath.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"GeoPath transform\",\n  \"description\": \"Creates paths for geographic regions, such as countries, states and counties.\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({\n    \"type\": {\"enum\": [\"geopath\"]},\n    \"field\": {\n      \"description\": \"The data field containing GeoJSON Feature data.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  }, Geo.baseSchema),\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/GeoPath.js\n// module id = snBf\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar DEFAULT_NULL_FILTERS = {\n    nominal: false,\n    ordinal: false,\n    quantitative: true,\n    temporal: true\n};\nvar nullFilter;\n(function (nullFilter) {\n    function parse(model) {\n        var filterNull = model.transform().filterNull;\n        return model.reduce(function (aggregator, fieldDef) {\n            if (filterNull ||\n                (filterNull === undefined && fieldDef.field && fieldDef.field !== '*' && DEFAULT_NULL_FILTERS[fieldDef.type])) {\n                aggregator[fieldDef.field] = true;\n            }\n            else {\n                aggregator[fieldDef.field] = false;\n            }\n            return aggregator;\n        }, {});\n    }\n    nullFilter.parseUnit = parse;\n    function parseFacet(model) {\n        var nullFilterComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(nullFilterComponent, childDataComponent.nullFilter);\n            delete childDataComponent.nullFilter;\n        }\n        return nullFilterComponent;\n    }\n    nullFilter.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var nullFilterComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.nullFilter, nullFilterComponent)) {\n                util_1.extend(nullFilterComponent, childDataComponent.nullFilter);\n                delete childDataComponent.nullFilter;\n            }\n        });\n        return nullFilterComponent;\n    }\n    nullFilter.parseLayer = parseLayer;\n    function assemble(component) {\n        var filteredFields = util_1.keys(component.nullFilter).filter(function (field) {\n            return component.nullFilter[field];\n        });\n        return filteredFields.length > 0 ?\n            [{\n                    type: 'filter',\n                    test: filteredFields.map(function (fieldName) {\n                        return '(datum.' + fieldName + '!==null' +\n                            ' && !isNaN(datum.' + fieldName + '))';\n                    }).join(' && ')\n                }] : [];\n    }\n    nullFilter.assemble = assemble;\n})(nullFilter = exports.nullFilter || (exports.nullFilter = {}));\n//# sourceMappingURL=nullfilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/nullfilter.js\n// module id = t3C9\n// module chunks = 0","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x, key));\n};\n\nproto._newcell = function(x, key) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, key),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_add) this._on_add(x, cell);\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_rem) this._on_rem(x, cell);\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n  if (this._on_mod) this._on_mod(curr, prev, cell0, cell1);\n};\n\nproto._markMod = function(x) {\n  var cell0 = this._cell(x);\n  cell0.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      // consolidate collector values\n      if (cell.collect) {\n        cell.data.values();\n      }\n      // update tuple properties\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      // add output tuple\n      result.push(cell.tuple);\n    } else {\n      delete this._cells[k];\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function(output) {\n  var changes = output || {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      changes.rem.push(cell.tuple); // if (flag === Flags.MOD_CELL) { ??\n      delete this._cells[k];\n      if (this._on_drop) this._on_drop(cell);\n    } else {\n      if (this._on_keep) this._on_keep(cell);\n      if (flag & Flags.ADD_CELL) {\n        changes.add.push(cell.tuple);\n      } else if (flag & Flags.MOD_CELL) {\n        changes.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/aggregator.js\n// module id = tGq9\n// module chunks = 0","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\n\nvar stats = module.exports;\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the geometric mean of an array of numbers.\nstats.mean.geometric = function(values, f) {\n  f = util.$(f);\n  var mean = 1, c, n, v, i;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v <= 0) {\n        throw Error(\"Geometric mean only defined for positive values.\");\n      }\n      mean *= v;\n      ++c;\n    }\n  }\n  mean = c > 0 ? Math.pow(mean, 1/c) : 0;\n  return mean;\n};\n\n// Compute the harmonic mean of an array of numbers.\nstats.mean.harmonic = function(values, f) {\n  f = util.$(f);\n  var mean = 0, c, n, v, i;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      mean += 1/v;\n      ++c;\n    }\n  }\n  return c / mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length < 2) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (v === v) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (v === v) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Compute the Cohen's d effect size between two arrays of numbers.\nstats.cohensd = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      x1 = stats.mean(X),\n      x2 = stats.mean(Y),\n      n1 = stats.count.valid(X),\n      n2 = stats.count.valid(Y);\n\n  if ((n1+n2-2) <= 0) {\n    // if both arrays are size 1, or one is empty, there's no effect size\n    return 0;\n  }\n  // pool standard deviation\n  var s1 = stats.variance(X),\n      s2 = stats.variance(Y),\n      s = Math.sqrt((((n1-1)*s1) + ((n2-1)*s2)) / (n1+n2-2));\n  // if there is no variance, there's no effect size\n  return s===0 ? 0 : (x1 - x2) / s;\n};\n\n// Computes the covariance between two arrays of numbers\nstats.covariance = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n = X.length,\n      xm = stats.mean(X),\n      ym = stats.mean(Y),\n      sum = 0, c = 0, i, x, y, vx, vy;\n\n  if (n !== Y.length) {\n    throw Error('Input lengths must match.');\n  }\n\n  for (i=0; i<n; ++i) {\n    x = X[i]; vx = util.isValid(x);\n    y = Y[i]; vy = util.isValid(y);\n    if (vx && vy) {\n      sum += (x-xm) * (y-ym);\n      ++c;\n    } else if (vx || vy) {\n      throw Error('Valid values must align.');\n    }\n  }\n  return sum / (c-1);\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, a) : stats.rank(values),\n      rb = b ? stats.rank(values, b) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Simple linear regression.\n// Returns a \"fit\" object with slope (m), intercept (b),\n// r value (R), and sum-squared residual error (rss).\nstats.linearRegression = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n = X.length,\n      xy = stats.covariance(X, Y), // will throw err if valid vals don't align\n      sx = stats.stdev(X),\n      sy = stats.stdev(Y),\n      slope = xy / (sx*sx),\n      icept = stats.mean(Y) - slope * stats.mean(X),\n      fit = {slope: slope, intercept: icept, R: xy / (sx*sy), rss: 0},\n      res, i;\n\n  for (i=0; i<n; ++i) {\n    if (util.isValid(X[i]) && util.isValid(Y[i])) {\n      res = (slope*X[i] + icept) - Y[i];\n      fit.rss += res * res;\n    }\n  }\n\n  return fit;\n};\n\n// Namespace for bootstrap\nstats.bootstrap = {};\n\n// Construct a bootstrapped confidence interval at a given percentile level\n// Arguments are an array, an optional n (defaults to 1000),\n//  an optional alpha (defaults to 0.05), and an optional smoothing parameter\nstats.bootstrap.ci = function(values, a, b, c, d) {\n  var X, N, alpha, smooth, bs, means, i;\n  if (util.isFunction(a) || util.isString(a)) {\n    X = values.map(util.$(a));\n    N = b;\n    alpha = c;\n    smooth = d;\n  } else {\n    X = values;\n    N = a;\n    alpha = b;\n    smooth = c;\n  }\n  N = N ? +N : 1000;\n  alpha = alpha || 0.05;\n\n  bs = gen.random.bootstrap(X, smooth);\n  for (i=0, means = Array(N); i<N; ++i) {\n    means[i] = stats.mean(bs.samples(X.length));\n  }\n  means.sort(util.numcmp);\n  return [\n    stats.quantile(means, alpha/2),\n    stats.quantile(means, 1-(alpha/2))\n  ];\n};\n\n// Namespace for z-tests\nstats.z = {};\n\n// Construct a z-confidence interval at a given significance level\n// Arguments are an array and an optional alpha (defaults to 0.05).\nstats.z.ci = function(values, a, b) {\n  var X = values, alpha = a;\n  if (util.isFunction(a) || util.isString(a)) {\n    X = values.map(util.$(a));\n    alpha = b;\n  }\n  alpha = alpha || 0.05;\n\n  var z = alpha===0.05 ? 1.96 : gen.random.normal(0, 1).icdf(1-(alpha/2)),\n      mu = stats.mean(X),\n      SE = stats.stdev(X) / Math.sqrt(stats.count.valid(X));\n  return [mu - (z*SE), mu + (z*SE)];\n};\n\n// Perform a z-test of means. Returns the p-value.\n// If a single array is provided, performs a one-sample location test.\n// If two arrays or a table and two accessors are provided, performs\n// a two-sample location test. A paired test is performed if specified\n// by the options hash.\n// The options hash format is: {paired: boolean, nullh: number}.\n// http://en.wikipedia.org/wiki/Z-test\n// http://en.wikipedia.org/wiki/Paired_difference_test\nstats.z.test = function(values, a, b, opt) {\n  if (util.isFunction(b) || util.isString(b)) { // table and accessors\n    return (opt && opt.paired ? ztestP : ztest2)(opt, values, a, b);\n  } else if (util.isArray(a)) { // two arrays\n    return (b && b.paired ? ztestP : ztest2)(b, values, a);\n  } else if (util.isFunction(a) || util.isString(a)) {\n    return ztest1(b, values, a); // table and accessor\n  } else {\n    return ztest1(a, values); // one array\n  }\n};\n\n// Perform a z-test of means. Returns the p-value.\n// Assuming we have a list of values, and a null hypothesis. If no null\n// hypothesis, assume our null hypothesis is mu=0.\nfunction ztest1(opt, X, f) {\n  var nullH = opt && opt.nullh || 0,\n      gaussian = gen.random.normal(0, 1),\n      mu = stats.mean(X,f),\n      SE = stats.stdev(X,f) / Math.sqrt(stats.count.valid(X,f));\n\n  if (SE===0) {\n    // Test not well defined when standard error is 0.\n    return (mu - nullH) === 0 ? 1 : 0;\n  }\n  // Two-sided, so twice the one-sided cdf.\n  var z = (mu - nullH) / SE;\n  return 2 * gaussian.cdf(-Math.abs(z));\n}\n\n// Perform a two sample paired z-test of means. Returns the p-value.\nfunction ztestP(opt, values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n1 = stats.count(X),\n      n2 = stats.count(Y),\n      diffs = Array(), i;\n\n  if (n1 !== n2) {\n    throw Error('Array lengths must match.');\n  }\n  for (i=0; i<n1; ++i) {\n    // Only valid differences should contribute to the test statistic\n    if (util.isValid(X[i]) && util.isValid(Y[i])) {\n      diffs.push(X[i] - Y[i]);\n    }\n  }\n  return stats.z.test(diffs, opt && opt.nullh || 0);\n}\n\n// Perform a two sample z-test of means. Returns the p-value.\nfunction ztest2(opt, values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n1 = stats.count.valid(X),\n      n2 = stats.count.valid(Y),\n      gaussian = gen.random.normal(0, 1),\n      meanDiff = stats.mean(X) - stats.mean(Y) - (opt && opt.nullh || 0),\n      SE = Math.sqrt(stats.variance(X)/n1 + stats.variance(Y)/n2);\n\n  if (SE===0) {\n    // Not well defined when pooled standard error is 0.\n    return meanDiff===0 ? 1 : 0;\n  }\n  // Two-tailed, so twice the one-sided cdf.\n  var z = meanDiff / SE;\n  return 2 * gaussian.cdf(-Math.abs(z));\n}\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance]\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/stats.js\n// module id = uHQN\n// module chunks = 0","var dl = require('datalib'),\n    u  = {};\n\ndl.extend(u, require('./format'));\nmodule.exports = dl.extend(u, dl);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/index.js\n// module id = v0Fq\n// module chunks = 0","var lgnd = require('../scene/legend');\n\nfunction parseLegends(model, spec, legends, group) {\n  (spec || []).forEach(function(def, index) {\n    legends[index] = legends[index] || lgnd(model);\n    parseLegend(def, index, legends[index], group);\n  });\n}\n\nfunction parseLegend(def, index, legend, group) {\n  // legend scales\n  legend.size   (def.size    ? group.scale(def.size)    : null);\n  legend.shape  (def.shape   ? group.scale(def.shape)   : null);\n  legend.fill   (def.fill    ? group.scale(def.fill)    : null);\n  legend.stroke (def.stroke  ? group.scale(def.stroke)  : null);\n  legend.opacity(def.opacity ? group.scale(def.opacity) : null);\n\n  // legend orientation\n  if (def.orient) legend.orient(def.orient);\n\n  // legend offset\n  if (def.offset != null) legend.offset(def.offset);\n\n  // legend title\n  legend.title(def.title || null);\n\n  // legend values\n  legend.values(def.values || null);\n\n  // legend label formatting\n  legend.format(def.format !== undefined ? def.format : null);\n  legend.formatType(def.formatType || null);\n\n  // style properties\n  var p = def.properties;\n  legend.titleProperties(p && p.title || {});\n  legend.labelProperties(p && p.labels || {});\n  legend.legendProperties(p && p.legend || {});\n  legend.symbolProperties(p && p.symbols || {});\n  legend.gradientProperties(p && p.gradient || {});\n}\n\nmodule.exports = parseLegends;\n\nparseLegends.schema = {\n  \"defs\": {\n    \"legend\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"size\": {\"type\": \"string\"},\n        \"shape\": {\"type\": \"string\"},\n        \"fill\": {\"type\": \"string\"},\n        \"stroke\": {\"type\": \"string\"},\n        \"opacity\": {\"type\": \"string\"},\n        \"orient\": {\"enum\": [\"left\", \"right\"], \"default\": \"right\"},\n        \"offset\": {\"type\": \"number\"},\n        \"title\": {\"type\": \"string\"},\n        \"values\": {\"type\": \"array\"},\n        \"format\": {\"type\": \"string\"},\n        \"formatType\": {\"enum\": [\"time\", \"utc\", \"string\", \"number\"]},\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\"$ref\": \"#/defs/propset\"},\n            \"labels\": {\"$ref\": \"#/defs/propset\"},\n            \"legend\": {\"$ref\": \"#/defs/propset\"},\n            \"symbols\": {\"$ref\": \"#/defs/propset\"},\n            \"gradient\": {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false\n        }\n      },\n      \"additionalProperties\": false,\n      \"anyOf\": [\n        {\"required\": [\"size\"]},\n        {\"required\": [\"shape\"]},\n        {\"required\": [\"fill\"]},\n        {\"required\": [\"stroke\"]},\n        {\"required\": [\"opacity\"]}\n      ]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/legends.js\n// module id = v4pi\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar colorRank;\n(function (colorRank) {\n    function parseUnit(model) {\n        var colorRankComponent = {};\n        if (model.has(channel_1.COLOR) && model.fieldDef(channel_1.COLOR).type === type_1.ORDINAL) {\n            colorRankComponent[model.field(channel_1.COLOR)] = [{\n                    type: 'sort',\n                    by: model.field(channel_1.COLOR)\n                }, {\n                    type: 'rank',\n                    field: model.field(channel_1.COLOR),\n                    output: {\n                        rank: model.field(channel_1.COLOR, { prefn: 'rank_' })\n                    }\n                }];\n        }\n        return colorRankComponent;\n    }\n    colorRank.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            var colorRankComponent = childDataComponent.colorRank;\n            delete childDataComponent.colorRank;\n            return colorRankComponent;\n        }\n        return {};\n    }\n    colorRank.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var colorRankComponent = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(colorRankComponent, childDataComponent.colorRank);\n                delete childDataComponent.colorRank;\n            }\n        });\n        return colorRankComponent;\n    }\n    colorRank.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.flatten(util_1.vals(component.colorRank));\n    }\n    colorRank.assemble = assemble;\n})(colorRank = exports.colorRank || (exports.colorRank = {}));\n//# sourceMappingURL=colorrank.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/colorrank.js\n// module id = vY52\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../util');\nvar channel_1 = require('../channel');\nvar timeunit_1 = require('../timeunit');\nfunction smallestUnit(timeUnit) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.SECONDS)) {\n        return 'second';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MINUTES)) {\n        return 'minute';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.HOURS)) {\n        return 'hour';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DAY) ||\n        timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DATE)) {\n        return 'day';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MONTH)) {\n        return 'month';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.YEAR)) {\n        return 'year';\n    }\n    return undefined;\n}\nexports.smallestUnit = smallestUnit;\nfunction parseExpression(timeUnit, fieldRef, onlyRef) {\n    if (onlyRef === void 0) { onlyRef = false; }\n    var out = 'datetime(';\n    function func(fun, addComma) {\n        if (addComma === void 0) { addComma = true; }\n        if (onlyRef) {\n            return fieldRef + (addComma ? ', ' : '');\n        }\n        else {\n            var res = '';\n            if (fun === 'quarter') {\n                res = 'floor(month(' + fieldRef + ')' + '/3)*3';\n            }\n            else {\n                res = fun + '(' + fieldRef + ')';\n            }\n            return res + (addComma ? ', ' : '');\n        }\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.YEAR)) {\n        out += func('year');\n    }\n    else {\n        out += '2006, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MONTH)) {\n        out += func('month');\n    }\n    else if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.QUARTER)) {\n        out += func('quarter');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DAY)) {\n        out += func('day', false) + '+1, ';\n    }\n    else if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DATE)) {\n        out += func('date');\n    }\n    else {\n        out += '1, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.HOURS)) {\n        out += func('hours');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MINUTES)) {\n        out += func('minutes');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.SECONDS)) {\n        out += func('seconds');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MILLISECONDS)) {\n        out += func('milliseconds', false);\n    }\n    else {\n        out += '0';\n    }\n    return out + ')';\n}\nexports.parseExpression = parseExpression;\nfunction rawDomain(timeUnit, channel) {\n    if (util_1.contains([channel_1.ROW, channel_1.COLUMN, channel_1.SHAPE, channel_1.COLOR], channel)) {\n        return null;\n    }\n    switch (timeUnit) {\n        case timeunit_1.TimeUnit.SECONDS:\n            return util_1.range(0, 60);\n        case timeunit_1.TimeUnit.MINUTES:\n            return util_1.range(0, 60);\n        case timeunit_1.TimeUnit.HOURS:\n            return util_1.range(0, 24);\n        case timeunit_1.TimeUnit.DAY:\n            return util_1.range(0, 7);\n        case timeunit_1.TimeUnit.DATE:\n            return util_1.range(1, 32);\n        case timeunit_1.TimeUnit.MONTH:\n            return util_1.range(0, 12);\n        case timeunit_1.TimeUnit.QUARTER:\n            return [0, 3, 6, 9];\n    }\n    return null;\n}\nexports.rawDomain = rawDomain;\n//# sourceMappingURL=time.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/time.js\n// module id = wKIX\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    sortby: {type: 'array<field>'},\n    field: {type: 'field'},\n    offset: {type: 'value', default: 'zero'}\n  });\n\n  this._output = {\n    'start': 'layout_start',\n    'end':   'layout_end',\n    'mid':   'layout_mid'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Stack.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Stack;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['stacking']);\n\n  var groupby = this.param('groupby').accessor,\n      sortby = dl.comparator(this.param('sortby').field),\n      field = this.param('field').accessor,\n      offset = this.param('offset'),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, field);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset==='center' ? (max - sum)/2 : 0,\n        scale = offset==='normalize' ? (1/sum) : 1,\n        j, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += field(x);\n      b = scale * v + off; // compute end point\n      Tuple.set(x, output.start, a);\n      Tuple.set(x, output.end, b);\n      Tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, field) {\n  var groups = [],\n      get = function(f) { return f(x); },\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = groupby.map(get);\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += field(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n\nStack.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Stack transform\",\n  \"description\": \"Computes layout values for stacked graphs, as in stacked bar charts or stream graphs.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"stack\"]},\n    \"groupby\": {\n      \"description\": \"A list of fields to split the data into groups (stacks).\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"sortby\": {\n      \"description\": \"A list of fields to determine the sort order of stacks.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"field\": {\n      \"description\": \"The data field that determines the thickness/height of stacks.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"offset\": {\n      \"description\": \"The baseline offset\",\n      \"oneOf\": [{\"enum\": [\"zero\", \"center\", \"normalize\"]}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"zero\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"layout_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"layout_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"layout_mid\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Stack.js\n// module id = wLy+\n// module chunks = 0","\"use strict\";\nexports.axis = require('./axis');\nexports.aggregate = require('./aggregate');\nexports.bin = require('./bin');\nexports.channel = require('./channel');\nexports.compile = require('./compile/compile').compile;\nexports.config = require('./config');\nexports.data = require('./data');\nexports.encoding = require('./encoding');\nexports.facet = require('./facet');\nexports.fieldDef = require('./fielddef');\nexports.legend = require('./legend');\nexports.mark = require('./mark');\nexports.scale = require('./scale');\nexports.shorthand = require('./shorthand');\nexports.sort = require('./sort');\nexports.spec = require('./spec');\nexports.stack = require('./stack');\nexports.timeUnit = require('./timeunit');\nexports.transform = require('./transform');\nexports.type = require('./type');\nexports.util = require('./util');\nexports.validate = require('./validate');\nexports.version = '__VERSION__';\n//# sourceMappingURL=vl.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/vl.js\n// module id = wWYS\n// module chunks = 0","\"use strict\";\nvar type_1 = require('./type');\n(function (DataFormatType) {\n    DataFormatType[DataFormatType[\"JSON\"] = 'json'] = \"JSON\";\n    DataFormatType[DataFormatType[\"CSV\"] = 'csv'] = \"CSV\";\n    DataFormatType[DataFormatType[\"TSV\"] = 'tsv'] = \"TSV\";\n    DataFormatType[DataFormatType[\"TOPOJSON\"] = 'topojson'] = \"TOPOJSON\";\n})(exports.DataFormatType || (exports.DataFormatType = {}));\nvar DataFormatType = exports.DataFormatType;\n(function (DataTable) {\n    DataTable[DataTable[\"SOURCE\"] = 'source'] = \"SOURCE\";\n    DataTable[DataTable[\"SUMMARY\"] = 'summary'] = \"SUMMARY\";\n    DataTable[DataTable[\"STACKED_SCALE\"] = 'stacked_scale'] = \"STACKED_SCALE\";\n    DataTable[DataTable[\"LAYOUT\"] = 'layout'] = \"LAYOUT\";\n})(exports.DataTable || (exports.DataTable = {}));\nvar DataTable = exports.DataTable;\nexports.SUMMARY = DataTable.SUMMARY;\nexports.SOURCE = DataTable.SOURCE;\nexports.STACKED_SCALE = DataTable.STACKED_SCALE;\nexports.LAYOUT = DataTable.LAYOUT;\nexports.types = {\n    'boolean': type_1.Type.NOMINAL,\n    'number': type_1.Type.QUANTITATIVE,\n    'integer': type_1.Type.QUANTITATIVE,\n    'date': type_1.Type.TEMPORAL,\n    'string': type_1.Type.NOMINAL\n};\n//# sourceMappingURL=data.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/data.js\n// module id = x6Fv\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    ChangeSet = require('./ChangeSet'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Node = require('./Node'); // jshint ignore:line\n\nfunction DataSource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet  = facet;\n  this._input  = ChangeSet.create();\n  this._output = null; // Output changeset\n  this._indexes = {};\n  this._indexFields = [];\n\n  this._inputNode  = null;\n  this._outputNode = null;\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline.\n  this._mutates = false;  // Does any pipeline operator mutate tuples?\n}\n\nvar prototype = DataSource.prototype;\n\nprototype.name = function(name) {\n  if (!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nprototype.source = function(src) {\n  if (!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nprototype.insert = function(tuples) {\n  this._input.add = this._input.add.concat(tuples.map(Tuple.ingest));\n  return this;\n};\n\nprototype.remove = function(where) {\n  var remove = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(remove);\n  return this;\n};\n\nprototype.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = Tuple.idMap(mod);\n\n  this._input.fields[field] = 1;\n\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      Tuple.set(x, field, next);\n      if (ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n\n  return this;\n};\n\nprototype.values = function(data) {\n  if (!arguments.length) return this._collector.data();\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nprototype.mutates = function(m) {\n  if (!arguments.length) return this._mutates;\n  this._mutates = this._mutates || m;\n  return this;\n};\n\nprototype.last = function() {\n  return this._output;\n};\n\nprototype.fire = function(input) {\n  if (input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nprototype.pipeline = function(pipeline) {\n  if (!arguments.length) return this._pipeline;\n\n  var graph = this._graph,\n      status;\n\n  pipeline.unshift(this._inputNode = DataSourceInput(this));\n  status = graph.preprocess(pipeline);\n\n  if (status.router) {\n    pipeline.push(status.collector = new Collector(graph));\n  }\n\n  pipeline.push(this._outputNode = DataSourceOutput(this));\n  this._collector = status.collector;\n  this._mutates = !!status.mutates;\n  graph.connect(this._pipeline = pipeline);\n\n  return this;\n};\n\nprototype.synchronize = function() {\n  this._graph.synchronize(this._pipeline);\n  return this;\n};\n\nprototype.getIndex = function(field) {\n  var data = this.values(),\n      indexes = this._indexes,\n      fields  = this._indexFields,\n      f = dl.$(field),\n      index, i, len, value;\n\n  if (!indexes[field]) {\n    indexes[field] = index = {};\n    fields.push(field);\n    for (i=0, len=data.length; i<len; ++i) {\n      value = f(data[i]);\n      index[value] = (index[value] || 0) + 1;\n      Tuple.prev_init(data[i]);\n    }\n  }\n  return indexes[field];\n};\n\nprototype.listener = function() {\n  return DataSourceListener(this).addListener(this._inputNode);\n};\n\nprototype.addListener = function(l) {\n  if (l instanceof DataSource) {\n    this._collector.addListener(l.listener());\n  } else {\n    this._outputNode.addListener(l);\n  }\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  this._outputNode.removeListener(l);\n};\n\nprototype.listeners = function(ds) {\n  return (ds ? this._collector : this._outputNode).listeners();\n};\n\n// Input node applies the datasource's delta, and propagates it to\n// the rest of the pipeline. It receives touches to reflow data.\nfunction DataSourceInput(ds) {\n  var input = new Node(ds._graph)\n    .router(true)\n    .collector(true);\n\n  input.data = function() {\n    return ds._data;\n  };\n\n  input.evaluate = function(input) {\n    log.debug(input, ['input', ds._name]);\n\n    var delta = ds._input,\n        out = ChangeSet.create(input), f;\n\n    // Delta might contain fields updated through API\n    for (f in delta.fields) {\n      out.fields[f] = 1;\n    }\n\n    // update data\n    if (delta.rem.length) {\n      ds._data = Tuple.idFilter(ds._data, delta.rem);\n    }\n\n    if (delta.add.length) {\n      ds._data = ds._data.concat(delta.add);\n    }\n\n    if (delta.sort) {\n      ds._data.sort(delta.sort);\n    }\n\n    // if reflowing, add any other tuples not currently in changeset\n    if (input.reflow) {\n      delta.mod = delta.mod.concat(\n        Tuple.idFilter(ds._data, delta.add, delta.mod, delta.rem));\n    }\n\n    // reset change list\n    ds._input = ChangeSet.create();\n\n    out.add = delta.add;\n    out.mod = delta.mod;\n    out.rem = delta.rem;\n    out.facet = ds._facet;\n    return out;\n  };\n\n  return input;\n}\n\n// Output node captures the last changeset seen by this datasource\n// (needed for joins and builds) and materializes any nested data.\n// If this datasource is faceted, materializes the values in the facet.\nfunction DataSourceOutput(ds) {\n  var output = new Node(ds._graph)\n    .router(true)\n    .reflows(true)\n    .collector(true);\n\n  function updateIndices(pulse) {\n    var fields = ds._indexFields,\n        i, j, f, key, index, value;\n\n    for (i=0; i<fields.length; ++i) {\n      key = fields[i];\n      index = ds._indexes[key];\n      f = dl.$(key);\n\n      for (j=0; j<pulse.add.length; ++j) {\n        value = f(pulse.add[j]);\n        Tuple.prev_init(pulse.add[j]);\n        index[value] = (index[value] || 0) + 1;\n      }\n      for (j=0; j<pulse.rem.length; ++j) {\n        value = f(pulse.rem[j]);\n        index[value] = (index[value] || 0) - 1;\n      }\n      for (j=0; j<pulse.mod.length; ++j) {\n        value = f(pulse.mod[j]._prev);\n        index[value] = (index[value] || 0) - 1;\n        value = f(pulse.mod[j]);\n        index[value] = (index[value] || 0) + 1;\n      }\n    }\n  }\n\n  output.data = function() {\n    return ds._collector ? ds._collector.data() : ds._data;\n  };\n\n  output.evaluate = function(input) {\n    log.debug(input, ['output', ds._name]);\n\n    updateIndices(input);\n    var out = ChangeSet.create(input, true);\n\n    if (ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    out.data[ds._name] = 1;\n    return out;\n  };\n\n  return output;\n}\n\nfunction DataSourceListener(ds) {\n  var l = new Node(ds._graph).router(true);\n\n  l.evaluate = function(input) {\n    // Tuple derivation carries a cost. So only derive if the pipeline has\n    // operators that mutate, and thus would override the source data.\n    if (ds.mutates()) {\n      var map = ds._srcMap || (ds._srcMap = {}), // to propagate tuples correctly\n          output = ChangeSet.create(input);\n\n      output.add = input.add.map(function(t) {\n        return (map[t._id] = Tuple.derive(t));\n      });\n\n      output.mod = input.mod.map(function(t) {\n        return Tuple.rederive(t, map[t._id]);\n      });\n\n      output.rem = input.rem.map(function(t) {\n        var o = map[t._id];\n        return (map[t._id] = null, o);\n      });\n\n      return (ds._input = output);\n    } else {\n      return (ds._input = input);\n    }\n  };\n\n  return l;\n}\n\nmodule.exports = DataSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-dataflow/src/DataSource.js\n// module id = xZ2+\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Rank(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'field', default: null},\n    normalize: {type: 'value', default: false}\n  });\n\n  this._output = {\n    'rank': 'rank'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Rank.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Rank;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['rank']);\n\n  var rank  = this._output.rank,\n      norm  = this.param('normalize'),\n      field = this.param('field').accessor,\n      keys = {}, \n      i, len = data.length, klen, d, f;\n\n  // If we have a field accessor, first compile distinct keys.\n  if (field) {\n    for (i=0, klen=0; i<len; ++i) {\n      d = data[i];\n      keys[f=field(d)] = keys[f] || (keys[f] = ++klen);\n    }\n  }\n\n  // Assign ranks to all tuples.\n  for (i=0; i<len && (d=data[i]); ++i) {\n    if (field && (f=field(d))) {\n      Tuple.set(d, rank, norm ? keys[f] / klen : keys[f]);\n    } else {\n      Tuple.set(d, rank, norm ? (i+1) / len : (i+1));\n    }\n  }\n\n  input.fields[rank] = 1;\n  return input;\n};\n\nmodule.exports = Rank;\n\nRank.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Rank transform\",\n  \"description\": \"Computes ascending rank scores for data tuples.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"rank\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"A key field to used to rank tuples. \" +\n        \"If undefined, tuples will be ranked in their observed order.\"\n    },\n    \"normalize\": {\n      \"description\": \"If true, values of the output field will lie in the range [0, 1].\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"rank\": {\"type\": \"string\", \"default\": \"rank\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Rank.js\n// module id = yLCL\n// module chunks = 0","\"use strict\";\n(function (SortOrder) {\n    SortOrder[SortOrder[\"ASCENDING\"] = 'ascending'] = \"ASCENDING\";\n    SortOrder[SortOrder[\"DESCENDING\"] = 'descending'] = \"DESCENDING\";\n    SortOrder[SortOrder[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.SortOrder || (exports.SortOrder = {}));\nvar SortOrder = exports.SortOrder;\n//# sourceMappingURL=sort.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/sort.js\n// module id = yLwJ\n// module chunks = 0","var util = require('./util'),\n    format = require('./format');\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad,\n  day:        format.day,\n  month:      format.month,\n  quarter:    format.quarter,\n  utcQuarter: format.utcQuarter\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  /* jshint evil: true */\n  return (new Function('d', src)).bind(context);\n}\n\ntemplate.source = source;\ntemplate.context = context;\ntemplate.format = get_format;\nmodule.exports = template;\n\n// Clear cache of format objects.\n// This can *break* prior template functions, so invoke with care!\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\n// Generate property access code for use within template source.\n// object: the name of the object (variable) containing template data\n// property: the property access string, verbatim from template tag\ntemplate.property = function(object, property) {\n  var src = util.field(property).map(util.str).join('][');\n  return object + '[' + src + ']';\n};\n\n// Generate source code for a template function.\n// text: the template text\n// variable: the name of the data object variable ('obj' by default)\n// properties: optional hash for collecting all accessed properties\nfunction source(text, variable, properties) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable, properties) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable, properties) {\n  var filters = text.match(filter_re);\n  var prop = filters.shift().trim();\n  var stringCast = true;\n\n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n\n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n\n  function formatter(type) {\n    var pattern = args[0];\n    if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n        (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n      pattern = pattern.slice(1, -1);\n    } else {\n      throw Error('Format pattern must be quoted: ' + pattern);\n    }\n    a = template_format(pattern, type);\n    stringCast = false;\n    var arg = type === 'number' ? src : date();\n    src = 'this.formats['+a+']('+arg+')';\n  }\n\n  if (properties) properties[prop] = 1;\n  var src = template.property(variable, prop);\n\n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1)\n        .match(args_re)\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        formatter('number');\n        break;\n      case 'time':\n        formatter('time');\n        break;\n      case 'time-utc':\n        formatter('utc');\n        break;\n      case 'month':\n        src = 'this.month(' + src + ')';\n        break;\n      case 'month-abbrev':\n        src = 'this.month(' + src + ',true)';\n        break;\n      case 'day':\n        src = 'this.day(' + src + ')';\n        break;\n      case 'day-abbrev':\n        src = 'this.day(' + src + ',true)';\n        break;\n      case 'quarter':\n        src = 'this.quarter(' + src + ')';\n        break;\n      case 'quarter-utc':\n        src = 'this.utcQuarter(' + src + ')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g,\n    filter_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\|\"]+|[^\\|\\']+)+/g,\n    args_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^,\"]+|[^,\\']+)+/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, type) {\n  var key = type + ':' + pattern;\n  if (context.format_map[key] == null) {\n    var f = format[type](pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[key] = i;\n    return i;\n  }\n  return context.format_map[key];\n}\n\nfunction get_format(pattern, type) {\n  return context.formats[template_format(pattern, type)];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/template.js\n// module id = yQql\n// module chunks = 0","var dl = require('datalib');\n\nvar types = {\n  '=':   parseComparator,\n  '==':  parseComparator,\n  '!=':  parseComparator,\n  '>':   parseComparator,\n  '>=':  parseComparator,\n  '<':   parseComparator,\n  '<=':  parseComparator,\n  'and': parseLogical,\n  '&&':  parseLogical,\n  'or':  parseLogical,\n  '||':  parseLogical,\n  'in':  parseIn\n};\n\nvar nullScale = function() { return 0; };\nnullScale.invert = nullScale;\n\nfunction parsePredicates(model, spec) {\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](model, s);\n\n    /* jshint evil:true */\n    var pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0]; }; // For global scales\n    pred.nullScale = nullScale;\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n\nfunction parseSignal(signal, signals) {\n  var s = dl.field(signal),\n      code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n  signals[s[0]] = 1;\n  return code;\n}\n\nfunction parseOperands(model, operands) {\n  var decl = [], defs = [],\n      signals = {}, db = {};\n\n  function setSignal(s) { signals[s] = 1; }\n  function setData(d) { db[d] = 1; }\n\n  dl.array(operands).forEach(function(o, i) {\n    var name = \"o\" + i,\n        def = \"\";\n\n    if (o.value !== undefined) {\n      def = dl.str(o.value);\n    } else if (o.arg) {\n      def = \"args[\"+dl.str(o.arg)+\"]\";\n    } else if (o.signal) {\n      def = parseSignal(o.signal, signals);\n    } else if (o.predicate) {\n      var ref = o.predicate,\n          predName = ref && (ref.name || ref),\n          pred = model.predicate(predName),\n          p = \"predicates[\"+dl.str(predName)+\"]\";\n\n      pred.signals.forEach(setSignal);\n      pred.data.forEach(setData);\n\n      if (dl.isObject(ref)) {\n        dl.keys(ref).forEach(function(k) {\n          if (k === \"name\") return;\n          var i = ref[k];\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if (i.signal) {\n            def += parseSignal(i.signal, signals);\n          } else if (i.arg) {\n            def += \"args[\"+dl.str(i.arg)+\"]\";\n          }\n          def += \", \";\n        });\n      }\n\n      def += p+\".call(\"+p+\", args, db, signals, predicates)\";\n    }\n\n    decl.push(name);\n    defs.push(name+\"=(\"+def+\")\");\n  });\n\n  return {\n    code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n    signals: dl.keys(signals),\n    data: dl.keys(db)\n  };\n}\n\nfunction parseComparator(model, spec) {\n  var ops = parseOperands(model, spec.operands);\n  if (spec.type === '=') spec.type = '==';\n\n  ops.code += \"o0 = o0 instanceof Date ? o0.getTime() : o0;\\n\" +\n    \"o1 = o1 instanceof Date ? o1.getTime() : o1;\\n\";\n\n  return {\n    code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n    signals: ops.signals,\n    data: ops.data\n  };\n}\n\nfunction parseLogical(model, spec) {\n  var ops = parseOperands(model, spec.operands),\n      o = [], i = 0, len = spec.operands.length;\n\n  while (o.push(\"o\"+i++) < len);\n  if (spec.type === 'and') spec.type = '&&';\n  else if (spec.type === 'or') spec.type = '||';\n\n  return {\n    code: ops.code + \"return \" + o.join(spec.type) + \";\",\n    signals: ops.signals,\n    data: ops.data\n  };\n}\n\nfunction parseIn(model, spec) {\n  var o = [spec.item], code = \"\";\n  if (spec.range) o.push.apply(o, spec.range);\n  if (spec.scale) {\n    code = parseScale(spec.scale, o);\n  }\n\n  var ops = parseOperands(model, o);\n  code = ops.code + code + \"\\n  var ordSet = null;\\n\";\n\n  if (spec.data) {\n    var field = dl.field(spec.field).map(dl.str);\n    code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n    code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n  } else if (spec.range) {\n    // TODO: inclusive/exclusive range?\n    if (spec.scale) {\n      code += \"if (scale.length == 2) {\\n\" + // inverting ordinal scales\n        \"  ordSet = scale(o1, o2);\\n\" +\n        \"} else {\\n\" +\n        \"  o1 = scale(o1);\\no2 = scale(o2);\\n\" +\n        \"}\";\n    }\n\n    code += \"return ordSet !== null ? ordSet.indexOf(o0) !== -1 :\\n\" +\n      \"  o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1;\";\n  }\n\n  return {\n    code: code,\n    signals: ops.signals,\n    data: ops.data.concat(spec.data ? [spec.data] : [])\n  };\n}\n\n// Populate ops such that ultimate scale/inversion function will be in `scale` var.\nfunction parseScale(spec, ops) {\n  var code = \"var scale = \",\n      idx  = ops.length;\n\n  if (dl.isString(spec)) {\n    ops.push({ value: spec });\n    code += \"this.root().scale(o\"+idx+\")\";\n  } else if (spec.arg) {  // Scale function is being passed as an arg\n    ops.push(spec);\n    code += \"o\"+idx;\n  } else if (spec.name) { // Full scale parameter {name: ..}\n    ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n    code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n    if (spec.scope) {\n      ops.push(spec.scope);\n      code += \"((o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\") || this.nullScale)\";\n    } else {\n      code += \"this.root().scale(o\"+idx+\")\";\n    }\n    code += \")\";\n  }\n\n  if (spec.invert === true) {  // Allow spec.invert.arg?\n    code += \".invert\";\n  }\n\n  return code+\";\\n\";\n}\n\nmodule.exports = parsePredicates;\nparsePredicates.schema = {\n  \"refs\": {\n    \"operand\": {\n      \"type\": \"object\",\n      \"oneOf\": [\n        {\n          \"properties\": {\"value\": {}},\n          \"required\": [\"value\"]\n        },\n        {\n          \"properties\": {\"arg\": {\"type\": \"string\"}},\n          \"required\": [\"arg\"]\n        },\n        {\"$ref\": \"#/refs/signal\"},\n        {\n          \"properties\": {\n            \"predicate\": {\n              \"oneOf\": [\n                {\"type\": \"string\"},\n                {\n                  \"type\": \"object\",\n                  \"properties\": {\"name\": {\"type\": \"string\"}},\n                  \"required\": [\"name\"]\n                }\n              ]\n            }\n          },\n          \"required\": [\"predicate\"]\n        }\n      ]\n    }\n  },\n\n  \"defs\": {\n    \"predicate\": {\n      \"type\": \"object\",\n      \"oneOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"]},\n          \"operands\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/refs/operand\"},\n            \"minItems\": 2,\n            \"maxItems\": 2\n          }\n        },\n        \"required\": [\"name\", \"type\", \"operands\"]\n      }, {\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"and\", \"&&\", \"or\", \"||\"]},\n          \"operands\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/refs/operand\"},\n            \"minItems\": 2\n          }\n        },\n        \"required\": [\"name\", \"type\", \"operands\"]\n      }, {\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"in\"]},\n          \"item\": {\"$ref\": \"#/refs/operand\"}\n        },\n\n        \"oneOf\": [\n          {\n            \"properties\": {\n              \"range\": {\n                \"type\": \"array\",\n                \"items\": {\"$ref\": \"#/refs/operand\"},\n                \"minItems\": 2\n              },\n              \"scale\": {\"$ref\": \"#/refs/scopedScale\"}\n            },\n            \"required\": [\"range\"]\n          },\n          {\n            \"properties\": {\n              \"data\": {\"type\": \"string\"},\n              \"field\": {\"type\": \"string\"}\n            },\n            \"required\": [\"data\", \"field\"]\n          }\n        ],\n\n        \"required\": [\"name\", \"type\", \"item\"]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/predicates.js\n// module id = yaQe\n// module chunks = 0","var dl  = require('datalib'),\n    log = require('vega-logging'),\n    themeVal = require('../util/theme-val'),\n    Model = require('../core/Model'),\n    View  = require('../core/View');\n\n/**\n * Parse graph specification\n * @param spec (object)\n * @param config (optional object)\n * @param viewFactory (optional function)\n * @param callback (error, model)\n */\n function parseSpec(spec /*, [config,] [viewFactory,] callback */) {\n  // do not assign any values to callback, as it will change arguments\n  var arglen = arguments.length,\n      argidx = 2,\n      cb = arguments[arglen-1],\n      model = new Model(),\n      viewFactory = View.factory,\n      config;\n\n  if (arglen > argidx && dl.isFunction(arguments[arglen - argidx])) {\n    viewFactory = arguments[arglen - argidx];\n    ++argidx;\n  }\n\n  if (arglen > argidx && dl.isObject(arguments[arglen - argidx])) {\n    model.config(arguments[arglen - argidx]);\n  }\n\n  config = model.config();\n  if (dl.isObject(spec)) {\n    parse(spec);\n  } else if (dl.isString(spec)) {\n    var opts = dl.extend({url: spec}, config.load);\n    dl.json(opts, function(err, spec) {\n      if (err) done('SPECIFICATION LOAD FAILED: ' + err);\n      else parse(spec);\n    });\n  } else {\n    done('INVALID SPECIFICATION: Must be a valid JSON object or URL.');\n  }\n\n  function parse(spec) {\n    try {\n      // protect against subsequent spec modification\n      spec = dl.duplicate(spec);\n\n      var parsers = require('./'),\n          width   = themeVal(spec, config, 'width', 500),\n          height  = themeVal(spec, config, 'height', 500),\n          padding = parsers.padding(themeVal(spec, config, 'padding')),\n          background = themeVal(spec, config, 'background');\n\n      // create signals for width, height, padding, and cursor\n      model.signal('width', width);\n      model.signal('height', height);\n      model.signal('padding', padding);\n      cursor(spec);\n\n      // initialize model\n      model.defs({\n        width:      width,\n        height:     height,\n        padding:    padding,\n        viewport:   spec.viewport || null,\n        background: parsers.background(background),\n        signals:    parsers.signals(model, spec.signals),\n        predicates: parsers.predicates(model, spec.predicates),\n        marks:      parsers.marks(model, spec, width, height),\n        data:       parsers.data(model, spec.data, done)\n      });\n    } catch (err) { done(err); }\n  }\n\n  function cursor(spec) {\n    var signals = spec.signals || (spec.signals=[]),  def;\n    signals.some(function(sg) {\n      return (sg.name === 'cursor') ? (def=sg, true) : false;\n    });\n\n    if (!def) signals.push(def={name: 'cursor', streams: []});\n\n    // Add a stream def at the head, so that custom defs can override it.\n    def.init = def.init || {};\n    def.streams.unshift({\n      type: 'mousemove',\n      expr: 'eventItem().cursor === cursor.default ? cursor : {default: eventItem().cursor}'\n    });\n  }\n\n  function done(err) {\n    var view;\n    if (err) {\n      log.error(err);\n    } else {\n      view = viewFactory(model.buildIndexes());\n    }\n\n    if (cb) {\n      if (cb.length > 1) cb(err, view);\n      else if (!err) cb(view);\n      cb = null;\n    }\n  }\n}\n\nmodule.exports = parseSpec;\n\nparseSpec.schema = {\n  \"defs\": {\n    \"spec\": {\n      \"title\": \"Vega visualization specification\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\"$ref\": \"#/defs/container\"}, {\n        \"properties\": {\n          \"width\": {\"type\": \"number\"},\n          \"height\": {\"type\": \"number\"},\n          \"viewport\": {\n            \"type\": \"array\",\n            \"items\": {\"type\": \"number\"},\n            \"maxItems\": 2\n          },\n\n          \"background\": {\"$ref\": \"#/defs/background\"},\n          \"padding\": {\"$ref\": \"#/defs/padding\"},\n\n          \"signals\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/signal\"}\n          },\n\n          \"predicates\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/predicate\"}\n          },\n\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/data\"}\n          }\n        }\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/spec.js\n// module id = ybCx\n// module chunks = 0","\"use strict\";\nvar scale_1 = require('../../scale');\nvar util_1 = require('../../util');\nvar nonPositiveFilter;\n(function (nonPositiveFilter_1) {\n    function parseUnit(model) {\n        return model.channels().reduce(function (nonPositiveComponent, channel) {\n            var scale = model.scale(channel);\n            if (!model.field(channel) || !scale) {\n                return nonPositiveComponent;\n            }\n            nonPositiveComponent[model.field(channel)] = scale.type === scale_1.ScaleType.LOG;\n            return nonPositiveComponent;\n        }, {});\n    }\n    nonPositiveFilter_1.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            var nonPositiveFilterComponent = childDataComponent.nonPositiveFilter;\n            delete childDataComponent.nonPositiveFilter;\n            return nonPositiveFilterComponent;\n        }\n        return {};\n    }\n    nonPositiveFilter_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var nonPositiveFilter = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.nonPositiveFilter, nonPositiveFilter)) {\n                util_1.extend(nonPositiveFilter, childDataComponent.nonPositiveFilter);\n                delete childDataComponent.nonPositiveFilter;\n            }\n        });\n        return nonPositiveFilter;\n    }\n    nonPositiveFilter_1.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.keys(component.nonPositiveFilter).filter(function (field) {\n            return component.nonPositiveFilter[field];\n        }).map(function (field) {\n            return {\n                type: 'filter',\n                test: 'datum.' + field + ' > 0'\n            };\n        });\n    }\n    nonPositiveFilter_1.assemble = assemble;\n})(nonPositiveFilter = exports.nonPositiveFilter || (exports.nonPositiveFilter = {}));\n//# sourceMappingURL=nonpositivenullfilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/nonpositivenullfilter.js\n// module id = yixx\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Handler = require('../Handler');\n\nfunction SVGHandler() {\n  Handler.call(this);\n}\n\nvar base = Handler.prototype;\nvar prototype = (SVGHandler.prototype = Object.create(base));\nprototype.constructor = SVGHandler;\n\nprototype.initialize = function(el, pad, obj) {\n  this._svg = DOM.find(el, 'svg');\n  return base.initialize.call(this, el, pad, obj);\n};\n\nprototype.svg = function() {\n  return this._svg;\n};\n\n// wrap an event listener for the SVG DOM\nprototype.listener = function(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n    evt.vegaType = evt.type;\n    item = Array.isArray(item) ? item[0] : item;\n    handler.call(that._obj, evt, item);\n  };\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = this.eventName(type),\n      svg = this._svg,\n      h = this._handlers,\n      x = {\n        type:     type,\n        handler:  handler,\n        listener: this.listener(handler)\n      };\n\n  (h[name] || (h[name] = [])).push(x);\n  svg.addEventListener(name, x.listener);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = this.eventName(type),\n      svg = this._svg,\n      h = this._handlers[name], i;\n  if (!h) return;\n  for (i=h.length; --i>=0;) {\n    if (h[i].type === type && !handler || h[i].handler === handler) {\n      svg.removeEventListener(name, h[i].listener);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = SVGHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/svg/SVGHandler.js\n// module id = yszh\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../data');\nvar spec_1 = require('../spec');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nfunction compile(inputSpec) {\n    var spec = spec_1.normalize(inputSpec);\n    var model = common_1.buildModel(spec, null, '');\n    model.parse();\n    return assemble(model);\n}\nexports.compile = compile;\nfunction assemble(model) {\n    var config = model.config();\n    var output = util_1.extend({\n        width: 1,\n        height: 1,\n        padding: 'auto'\n    }, config.viewport ? { viewport: config.viewport } : {}, config.background ? { background: config.background } : {}, {\n        data: [].concat(model.assembleData([]), model.assembleLayout([])),\n        marks: [assembleRootGroup(model)]\n    });\n    return {\n        spec: output\n    };\n}\nfunction assembleRootGroup(model) {\n    var rootGroup = util_1.extend({\n        name: model.name('root'),\n        type: 'group',\n    }, model.description() ? { description: model.description() } : {}, {\n        from: { data: data_1.LAYOUT },\n        properties: {\n            update: util_1.extend({\n                width: { field: 'width' },\n                height: { field: 'height' }\n            }, model.assembleParentGroupProperties(model.config().cell))\n        }\n    });\n    return util_1.extend(rootGroup, model.assembleGroup());\n}\nexports.assembleRootGroup = assembleRootGroup;\n//# sourceMappingURL=compile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/compile.js\n// module id = z/Ym\n// module chunks = 0","\"use strict\";\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"YEAR\"] = 'year'] = \"YEAR\";\n    TimeUnit[TimeUnit[\"MONTH\"] = 'month'] = \"MONTH\";\n    TimeUnit[TimeUnit[\"DAY\"] = 'day'] = \"DAY\";\n    TimeUnit[TimeUnit[\"DATE\"] = 'date'] = \"DATE\";\n    TimeUnit[TimeUnit[\"HOURS\"] = 'hours'] = \"HOURS\";\n    TimeUnit[TimeUnit[\"MINUTES\"] = 'minutes'] = \"MINUTES\";\n    TimeUnit[TimeUnit[\"SECONDS\"] = 'seconds'] = \"SECONDS\";\n    TimeUnit[TimeUnit[\"MILLISECONDS\"] = 'milliseconds'] = \"MILLISECONDS\";\n    TimeUnit[TimeUnit[\"YEARMONTH\"] = 'yearmonth'] = \"YEARMONTH\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAY\"] = 'yearmonthday'] = \"YEARMONTHDAY\";\n    TimeUnit[TimeUnit[\"YEARMONTHDATE\"] = 'yearmonthdate'] = \"YEARMONTHDATE\";\n    TimeUnit[TimeUnit[\"YEARDAY\"] = 'yearday'] = \"YEARDAY\";\n    TimeUnit[TimeUnit[\"YEARDATE\"] = 'yeardate'] = \"YEARDATE\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURS\"] = 'yearmonthdayhours'] = \"YEARMONTHDAYHOURS\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTES\"] = 'yearmonthdayhoursminutes'] = \"YEARMONTHDAYHOURSMINUTES\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTESSECONDS\"] = 'yearmonthdayhoursminutesseconds'] = \"YEARMONTHDAYHOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"HOURSMINUTES\"] = 'hoursminutes'] = \"HOURSMINUTES\";\n    TimeUnit[TimeUnit[\"HOURSMINUTESSECONDS\"] = 'hoursminutesseconds'] = \"HOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"MINUTESSECONDS\"] = 'minutesseconds'] = \"MINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"SECONDSMILLISECONDS\"] = 'secondsmilliseconds'] = \"SECONDSMILLISECONDS\";\n    TimeUnit[TimeUnit[\"QUARTER\"] = 'quarter'] = \"QUARTER\";\n    TimeUnit[TimeUnit[\"YEARQUARTER\"] = 'yearquarter'] = \"YEARQUARTER\";\n    TimeUnit[TimeUnit[\"QUARTERMONTH\"] = 'quartermonth'] = \"QUARTERMONTH\";\n    TimeUnit[TimeUnit[\"YEARQUARTERMONTH\"] = 'yearquartermonth'] = \"YEARQUARTERMONTH\";\n})(exports.TimeUnit || (exports.TimeUnit = {}));\nvar TimeUnit = exports.TimeUnit;\nexports.TIMEUNITS = [\n    TimeUnit.YEAR,\n    TimeUnit.MONTH,\n    TimeUnit.DAY,\n    TimeUnit.DATE,\n    TimeUnit.HOURS,\n    TimeUnit.MINUTES,\n    TimeUnit.SECONDS,\n    TimeUnit.MILLISECONDS,\n    TimeUnit.YEARMONTH,\n    TimeUnit.YEARMONTHDAY,\n    TimeUnit.YEARMONTHDATE,\n    TimeUnit.YEARDAY,\n    TimeUnit.YEARDATE,\n    TimeUnit.YEARMONTHDAYHOURS,\n    TimeUnit.YEARMONTHDAYHOURSMINUTES,\n    TimeUnit.YEARMONTHDAYHOURSMINUTESSECONDS,\n    TimeUnit.HOURSMINUTES,\n    TimeUnit.HOURSMINUTESSECONDS,\n    TimeUnit.MINUTESSECONDS,\n    TimeUnit.SECONDSMILLISECONDS,\n    TimeUnit.QUARTER,\n    TimeUnit.YEARQUARTER,\n    TimeUnit.QUARTERMONTH,\n    TimeUnit.YEARQUARTERMONTH,\n];\nfunction template(timeUnit, field, shortTimeLabels) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    var dateComponents = [];\n    if (containsTimeUnit(timeUnit, TimeUnit.YEAR)) {\n        dateComponents.push(shortTimeLabels ? '%y' : '%Y');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {\n        dateComponents.push('\\'}}Q{{' + field + ' | quarter}}{{' + field + ' | time:\\'');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n        dateComponents.push(shortTimeLabels ? '%b' : '%B');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {\n        dateComponents.push(shortTimeLabels ? '%a' : '%A');\n    }\n    else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n        dateComponents.push('%d');\n    }\n    var timeComponents = [];\n    if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n        timeComponents.push('%H');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n        timeComponents.push('%M');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n        timeComponents.push('%S');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {\n        timeComponents.push('%L');\n    }\n    var out = [];\n    if (dateComponents.length > 0) {\n        out.push(dateComponents.join('-'));\n    }\n    if (timeComponents.length > 0) {\n        out.push(timeComponents.join(':'));\n    }\n    if (out.length > 0) {\n        var template_1 = '{{' + field + ' | time:\\'' + out.join(' ') + '\\'}}';\n        return template_1.replace(new RegExp('{{' + field + ' \\\\| time:\\'\\'}}', 'g'), '');\n    }\n    else {\n        return undefined;\n    }\n}\nexports.template = template;\nfunction containsTimeUnit(fullTimeUnit, timeUnit) {\n    var fullTimeUnitStr = fullTimeUnit.toString();\n    var timeUnitStr = timeUnit.toString();\n    return fullTimeUnitStr.indexOf(timeUnitStr) > -1;\n}\nexports.containsTimeUnit = containsTimeUnit;\n//# sourceMappingURL=timeunit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/timeunit.js\n// module id = z5TJ\n// module chunks = 0","var u = module.exports;\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (typeof Buffer === 'function' && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\n// parse a date with optional d3.time-format format\nu.date = function(s, format) {\n  var d = format ? format : Date;\n  return s == null || s === '' ? null : d.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) || u.isString(x) ?\n      // Output valid JSON and JS source strings.\n      // See http://timelessrepo.com/json-isnt-a-javascript-subset\n      JSON.stringify(x).replace('\\u2028','\\\\u2028').replace('\\u2029', '\\\\u2029')\n    : x;\n};\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  /* jshint evil: true */\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, Function('x', 'return x[' + u.field(f).map(u.str).join('][') + '];'));\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a, b) {\n    var i, n, f, c;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i];\n      c = u.cmp(f(a), f(b));\n      if (c) return c * sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  return (a < b || a == null) && b != null ? -1 :\n    (a > b || b == null) && a != null ? 1 :\n    ((b = b instanceof Date ? +b : b),\n     (a = a instanceof Date ? +a : a)) !== a && b === b ? -1 :\n    b !== b && a === a ? 1 : 0;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// permutes an array using a Knuth shuffle\nu.permute = function(a) {\n  var m = a.length,\n      swap,\n      i;\n\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n    swap = a[m];\n    a[m] = a[i];\n    a[i] = swap;\n  }\n};\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/util.js\n// module id = zF6n\n// module chunks = 0","var load = require('datalib/src/import/load');\n\nfunction ImageLoader(loadConfig) {\n  this._pending = 0;\n  this._config = loadConfig || ImageLoader.Config; \n}\n\n// Overridable global default load configuration\nImageLoader.Config = null;\n\nvar prototype = ImageLoader.prototype;\n\nprototype.pending = function() {\n  return this._pending;\n};\n\nprototype.params = function(uri) {\n  var p = {url: uri}, k;\n  for (k in this._config) { p[k] = this._config[k]; }\n  return p;\n};\n\nprototype.imageURL = function(uri) {\n  return load.sanitizeUrl(this.params(uri));\n};\n\nfunction browser(uri, callback) {\n  var url = load.sanitizeUrl(this.params(uri));\n  if (!url) { // error\n    if (callback) callback(uri, null);\n    return null;\n  }\n\n  var loader = this,\n      image = new Image();\n\n  loader._pending += 1;\n\n  image.onload = function() {\n    loader._pending -= 1;\n    image.loaded = true;\n    if (callback) callback(null, image);\n  };\n  image.src = url;\n\n  return image;\n}\n\nfunction server(uri, callback) {\n  var loader = this,\n      image = new (require('canvas').Image)();\n\n  loader._pending += 1;\n\n  load(this.params(uri), function(err, data) {\n    loader._pending -= 1;\n    if (err) {\n      if (callback) callback(err, null);\n      return null;\n    }\n    image.src = data;\n    image.loaded = true;\n    if (callback) callback(null, image);\n  });\n\n  return image;\n}\n\nprototype.loadImage = function(uri, callback) {\n  return load.useXHR ?\n    browser.call(this, uri, callback) :\n    server.call(this, uri, callback);\n};\n\nmodule.exports = ImageLoader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/ImageLoader.js\n// module id = zLl/\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render');\n\nvar sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180);\n\nfunction path(g, o) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  g.beginPath();\n\n  if (o.shape == null || o.shape === 'circle') {\n    r = Math.sqrt(size / Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case 'cross':\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case 'diamond':\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case 'square':\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case 'triangle-down':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case 'triangle-up':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n      break;\n\n    // custom shape\n    default:\n      var pathArray = resize(parse(o.shape), size);\n      render(g, pathArray, x, y);\n  }\n  g.closePath();\n}\n\n// Scale custom shapes (defined within a unit square) by given size.\nfunction resize(path, size) {\n  var sz = Math.sqrt(size),\n      i, n, j, m, curr;\n\n  for (i=0, n=path.length; i<n; ++i) {\n    for (curr=path[i], j=1, m=curr.length; j<m; ++j) {\n      curr[j] *= sz;\n    }\n  }\n  return path;\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/render/canvas/marks/symbol.js\n// module id = zPnY\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar aggregate_1 = require('../aggregate');\nvar channel_1 = require('../channel');\nvar config_1 = require('../config');\nvar data_1 = require('../data');\nvar vlEncoding = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar scale_1 = require('../scale');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar axis_1 = require('./axis');\nvar common_1 = require('./common');\nvar config_2 = require('./config');\nvar data_2 = require('./data/data');\nvar legend_1 = require('./legend');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar mark_2 = require('./mark/mark');\nvar scale_2 = require('./scale');\nvar stack_1 = require('../stack');\nvar UnitModel = (function (_super) {\n    __extends(UnitModel, _super);\n    function UnitModel(spec, parent, parentGivenName) {\n        _super.call(this, spec, parent, parentGivenName);\n        var mark = this._mark = spec.mark;\n        var encoding = this._encoding = this._initEncoding(mark, spec.encoding || {});\n        var config = this._config = this._initConfig(spec.config, parent, mark, encoding);\n        this._scale = this._initScale(mark, encoding, config);\n        this._axis = this._initAxis(encoding, config);\n        this._legend = this._initLegend(encoding, config);\n        this._stack = stack_1.stack(mark, encoding, config);\n    }\n    UnitModel.prototype._initEncoding = function (mark, encoding) {\n        encoding = util_1.duplicate(encoding);\n        vlEncoding.forEach(encoding, function (fieldDef, channel) {\n            if (!channel_1.supportMark(channel, mark)) {\n                console.warn(channel, 'dropped as it is incompatible with', mark);\n                delete fieldDef.field;\n                return;\n            }\n            if (fieldDef.type) {\n                fieldDef.type = type_1.getFullName(fieldDef.type);\n            }\n            if ((channel === channel_1.PATH || channel === channel_1.ORDER) && !fieldDef.aggregate && fieldDef.type === type_1.QUANTITATIVE) {\n                fieldDef.aggregate = aggregate_1.AggregateOp.MIN;\n            }\n        });\n        return encoding;\n    };\n    UnitModel.prototype._initConfig = function (specConfig, parent, mark, encoding) {\n        var config = util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), parent ? parent.config() : {}, specConfig);\n        config.mark = config_2.initMarkConfig(mark, encoding, config);\n        return config;\n    };\n    UnitModel.prototype._initScale = function (mark, encoding, config) {\n        return channel_1.UNIT_SCALE_CHANNELS.reduce(function (_scale, channel) {\n            if (vlEncoding.has(encoding, channel) ||\n                (channel === channel_1.X && vlEncoding.has(encoding, channel_1.X2)) ||\n                (channel === channel_1.Y && vlEncoding.has(encoding, channel_1.Y2))) {\n                var channelDef = encoding[channel];\n                var scaleSpec = (channelDef || {}).scale || {};\n                var _scaleType = scale_2.scaleType(scaleSpec, channelDef, channel, mark);\n                _scale[channel] = util_1.extend({\n                    type: _scaleType,\n                    round: config.scale.round,\n                    padding: config.scale.padding,\n                    useRawDomain: config.scale.useRawDomain,\n                    bandSize: channel === channel_1.X && _scaleType === scale_1.ScaleType.ORDINAL && mark === mark_1.TEXT ?\n                        config.scale.textBandWidth : config.scale.bandSize\n                }, scaleSpec);\n            }\n            return _scale;\n        }, {});\n    };\n    UnitModel.prototype._initAxis = function (encoding, config) {\n        return [channel_1.X, channel_1.Y].reduce(function (_axis, channel) {\n            if (vlEncoding.has(encoding, channel) ||\n                (channel === channel_1.X && vlEncoding.has(encoding, channel_1.X2)) ||\n                (channel === channel_1.Y && vlEncoding.has(encoding, channel_1.Y2))) {\n                var axisSpec = (encoding[channel] || {}).axis;\n                if (axisSpec !== false) {\n                    _axis[channel] = util_1.extend({}, config.axis, axisSpec === true ? {} : axisSpec || {});\n                }\n            }\n            return _axis;\n        }, {});\n    };\n    UnitModel.prototype._initLegend = function (encoding, config) {\n        return channel_1.NONSPATIAL_SCALE_CHANNELS.reduce(function (_legend, channel) {\n            if (vlEncoding.has(encoding, channel)) {\n                var legendSpec = encoding[channel].legend;\n                if (legendSpec !== false) {\n                    _legend[channel] = util_1.extend({}, config.legend, legendSpec === true ? {} : legendSpec || {});\n                }\n            }\n            return _legend;\n        }, {});\n    };\n    UnitModel.prototype.parseData = function () {\n        this.component.data = data_2.parseUnitData(this);\n    };\n    UnitModel.prototype.parseSelectionData = function () {\n    };\n    UnitModel.prototype.parseLayoutData = function () {\n        this.component.layout = layout_1.parseUnitLayout(this);\n    };\n    UnitModel.prototype.parseScale = function () {\n        this.component.scale = scale_2.parseScaleComponent(this);\n    };\n    UnitModel.prototype.parseMark = function () {\n        this.component.mark = mark_2.parseMark(this);\n    };\n    UnitModel.prototype.parseAxis = function () {\n        this.component.axis = axis_1.parseAxisComponent(this, [channel_1.X, channel_1.Y]);\n    };\n    UnitModel.prototype.parseAxisGroup = function () {\n        return null;\n    };\n    UnitModel.prototype.parseGridGroup = function () {\n        return null;\n    };\n    UnitModel.prototype.parseLegend = function () {\n        this.component.legend = legend_1.parseLegendComponent(this);\n    };\n    UnitModel.prototype.assembleData = function (data) {\n        return data_2.assembleData(this, data);\n    };\n    UnitModel.prototype.assembleLayout = function (layoutData) {\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    UnitModel.prototype.assembleMarks = function () {\n        return this.component.mark;\n    };\n    UnitModel.prototype.assembleParentGroupProperties = function (cellConfig) {\n        return common_1.applyConfig({}, cellConfig, common_1.FILL_STROKE_CONFIG.concat(['clip']));\n    };\n    UnitModel.prototype.channels = function () {\n        return channel_1.UNIT_CHANNELS;\n    };\n    UnitModel.prototype.mapping = function () {\n        return this.encoding();\n    };\n    UnitModel.prototype.stack = function () {\n        return this._stack;\n    };\n    UnitModel.prototype.toSpec = function (excludeConfig, excludeData) {\n        var encoding = util_1.duplicate(this._encoding);\n        var spec;\n        spec = {\n            mark: this._mark,\n            encoding: encoding\n        };\n        if (!excludeConfig) {\n            spec.config = util_1.duplicate(this._config);\n        }\n        if (!excludeData) {\n            spec.data = util_1.duplicate(this._data);\n        }\n        return spec;\n    };\n    UnitModel.prototype.mark = function () {\n        return this._mark;\n    };\n    UnitModel.prototype.has = function (channel) {\n        return vlEncoding.has(this._encoding, channel);\n    };\n    UnitModel.prototype.encoding = function () {\n        return this._encoding;\n    };\n    UnitModel.prototype.fieldDef = function (channel) {\n        return this._encoding[channel] || {};\n    };\n    UnitModel.prototype.field = function (channel, opt) {\n        if (opt === void 0) { opt = {}; }\n        var fieldDef = this.fieldDef(channel);\n        if (fieldDef.bin) {\n            opt = util_1.extend({\n                binSuffix: this.scale(channel).type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n            }, opt);\n        }\n        return fielddef_1.field(fieldDef, opt);\n    };\n    UnitModel.prototype.dataTable = function () {\n        return this.dataName(vlEncoding.isAggregate(this._encoding) ? data_1.SUMMARY : data_1.SOURCE);\n    };\n    UnitModel.prototype.isUnit = function () {\n        return true;\n    };\n    return UnitModel;\n}(model_1.Model));\nexports.UnitModel = UnitModel;\n//# sourceMappingURL=unit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/unit.js\n// module id = zYzi\n// module chunks = 0","var dl = require('datalib'),\n    d3_svg = require('d3').svg,\n    parse = require('../path/parse');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return (o.x || 0) + (o.width || 0); }\nfunction yh(o)    { return (o.y || 0) + (o.height || 0); }\nfunction size(o)  { return o.size == null ? 100 : o.size; }\nfunction shape(o) { return o.shape || 'circle'; }\n\nvar areav = d3_svg.area().x(x).y1(y).y0(yh),\n    areah = d3_svg.area().y(y).x1(x).x0(xw),\n    line  = d3_svg.line().x(x).y(y);\n\nmodule.exports = {\n  metadata: {\n    'version': '1.1',\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n  },\n  path: {\n    arc: d3_svg.arc(),\n    symbol: d3_svg.symbol().type(shape).size(size),\n    area: function(items) {\n      var o = items[0];\n      return (o.orient === 'horizontal' ? areah : areav)\n        .interpolate(o.interpolate || 'linear')\n        .tension(o.tension || 0.7)\n        (items);\n    },\n    line: function(items) {\n      var o = items[0];\n      return line\n        .interpolate(o.interpolate || 'linear')\n        .tension(o.tension || 0.7)\n        (items);\n    },\n    resize: function(pathStr, size) {\n      var path = parse(pathStr),\n          newPath = '',\n          command, current, index, i, n, j, m;\n\n      size = Math.sqrt(size);\n      for (i=0, n=path.length; i<n; ++i) {\n        for (command=path[i], j=0, m=command.length; j<m; ++j) {\n          if (command[j] === 'Z') break;\n          if ((current = +command[j]) === current) {\n            // if number, need to resize\n            index = pathStr.indexOf(current);\n            newPath += pathStr.substring(0, index) + (current * size);\n            pathStr  = pathStr.substring(index + (current+'').length);\n          }\n        }\n      }\n\n      return newPath + 'Z';\n    }\n  },\n  symbolTypes: dl.toMap(d3_svg.symbolTypes),\n  textAlign: {\n    'left':   'start',\n    'center': 'middle',\n    'right':  'end'\n  },\n  textBaseline: {\n    'top':    'before-edge',\n    'bottom': 'after-edge',\n    'middle': 'central'\n  },\n  styles: {\n    'fill':             'fill',\n    'fillOpacity':      'fill-opacity',\n    'stroke':           'stroke',\n    'strokeWidth':      'stroke-width',\n    'strokeOpacity':    'stroke-opacity',\n    'strokeCap':        'stroke-linecap',\n    'strokeDash':       'stroke-dasharray',\n    'strokeDashOffset': 'stroke-dashoffset',\n    'opacity':          'opacity'\n  },\n  styleProperties: [\n    'fill',\n    'fillOpacity',\n    'stroke',\n    'strokeWidth',\n    'strokeOpacity',\n    'strokeCap',\n    'strokeDash',\n    'strokeDashOffset',\n    'opacity'\n  ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-scenegraph/src/util/svg.js\n// module id = zhsD\n// module chunks = 0","var util = require('./util');\n\nvar dl = {\n  version:    require('../package.json').version,\n  load:       require('./import/load'),\n  read:       require('./import/read'),\n  type:       require('./import/type'),\n  Aggregator: require('./aggregate/aggregator'),\n  groupby:    require('./aggregate/groupby'),\n  bins:       require('./bins/bins'),\n  $bin:       require('./bins/histogram').$bin,\n  histogram:  require('./bins/histogram').histogram,\n  format:     require('./format'),\n  template:   require('./template'),\n  time:       require('./time')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./accessor'));\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\nutil.extend(dl.format, require('./format-tables'));\n\n// backwards-compatible, deprecated API\n// will remove in the future\ndl.print = {\n  table:   dl.format.table,\n  summary: dl.format.summary\n};\n\nmodule.exports = dl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/index.js\n// module id = zicW\n// module chunks = 0"],"sourceRoot":""}